{
  "version": 3,
  "sources": ["Source_TS/Check.ts", "Source_TS/Reset.ts", "Source_TS/Vacuum.ts", "Source_TS/Stage.ts", "Source_TS/Update.ts", "Source_TS/Hotkeys.ts", "Source_TS/Special.ts", "Source_TS/Limit.ts", "Source_TS/Player.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import Overlimit from './Limit';\nimport { global, player } from './Player';\nimport type { gameTab } from './Types';\n\nexport const checkTab = (tab: gameTab, subtab = null as null | string): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.stage.true >= 6; }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'upgrade':\n            if (player.stage.true < 2 && player.discharge.energyMax < 12) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return global.stageInfo.activeAll.includes(4) && player.upgrades[4][1] === 1; }\n            return subtab === 'Upgrades' || subtab === null;\n        case 'strangeness':\n            if (player.stage.true < 7 && player.strange[0].total <= 0 && (!player.inflation.vacuum || player.stage.current < 5)) { return false; }\n            if (subtab === 'Milestones') { return player.stage.true >= 8 || (player.stage.true === 7 && player.event) || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'inflation':\n            if (player.stage.true < 7) { return false; }\n            return subtab === 'Researches' || subtab === 'Milestones' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.stage.true >= 7 || player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n        default:\n            return false;\n    }\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (index < 1 || global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][8] === 1; }\n        if (index === 5) { return player.upgrades[3][11] === 1; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index] && player.researchesExtra[5][0] < 1) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.researchesExtra[4][0] >= 1; }\n        if (index === 3) { return player.researchesExtra[4][0] >= 2; }\n        if (index === 4) { return player.researchesExtra[4][0] >= 3; }\n        if (index === 5) { return player.elements[26] >= 1 && player.challenges.active !== 0; }\n    } else if (stageIndex === 5) {\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n        if (index === 3) { return player.researchesExtra[5][0] >= 1; }\n    } else if (stageIndex === 6) {\n        return player.inflation.vacuum;\n    }\n\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'inflations'): boolean => {\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade === 3) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 4 : 2].total.moreThan('0'); }\n                if (upgrade === 4) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 5 : 3].total.moreThan('0'); }\n                if (upgrade > 5) {\n                    if (player.upgrades[1][5] !== 1) { return false; }\n                    if (upgrade === 10) { return player.strangeness[5][10] >= 1; }\n                }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 0) { return player.buildings[2][1].true >= 1 || player.buildings[2][2].true >= 1; }\n                if (upgrade === 7) { return player.strangeness[2][2] >= 3; }\n                if (upgrade === 8) { return player.strangeness[2][8] >= 3; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankU[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 7) { return player.strangeness[3][2] >= 3; }\n                if (upgrade === 13) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 2) { return player.upgrades[4][1] === 1; }\n                if (upgrade === 3) { return player.strangeness[4][2] >= 3 && player.upgrades[4][2] === 1 && (galaxy || player.collapse.stars[1] > 0); }\n                if (upgrade === 4) { return player.strangeness[4][9] >= 1 && player.upgrades[4][3] === 1; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1; }\n                if (upgrade === 3) { return player.inflation.vacuum ? player.accretion.rank >= 7 : player.milestones[5][1] >= 8; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade] && player.accretion.rank !== 0;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 3) { return (galaxy || player.collapse.stars[0] > 0) && player.strangeness[4][2] >= 1; }\n                if (upgrade === 4) { return galaxy || player.collapse.stars[2] > 0; }\n                if (upgrade === 5) { return (galaxy || player.collapse.stars[2] > 0) && player.strangeness[4][9] >= 3; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 3) { return player.researchesExtra[1][2] >= 1; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                if (upgrade === 5) { return player.accretion.rank >= 6 && player.strangeness[5][10] >= 1; }\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 3) { return player.accretion.rank >= 6; }\n                if (upgrade === 4) { return player.accretion.rank >= 7 && player.strangeness[5][10] >= 2; }\n                return player.upgrades[2][2] === 1;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankE[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 4) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 5) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1; }\n                if (upgrade === 2) { return (player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][2] >= 2; }\n                if (upgrade === 3) { return (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][9] >= 2; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.buildings[6][1].true < global.mergeInfo.unlockE[upgrade]) { return false; }\n                if (upgrade === 0) { return (player.inflation.vacuum || player.milestones[4][1] >= 8) && player.strangeness[5][3] >= 1; }\n                return player.accretion.rank >= 7;\n            }\n            break;\n        case 'researchesAuto': {\n            const autoStage = global.researchesAutoInfo.autoStage[upgrade][player.researchesAuto[upgrade]]; //Can be undefined\n            if (!(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { return false; }\n            if (upgrade === 0) { return player.inflation.vacuum; }\n            if (upgrade === 1) { return player.inflation.vacuum && player.accretion.rank >= 6; }\n            return true;\n        }\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            if (stageIndex === 3) { return player.accretion.rank >= 1; }\n            return true;\n        case 'elements':\n            if (upgrade >= 29) { return player.upgrades[4][4] === 1 && player.buildings[6][1].true >= upgrade - 29; }\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1); }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1 && upgrade > 0;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 3; }\n                    if (upgrade === 8) { return player.challenges.void[2] >= 1; }\n                    if (upgrade === 9) { return player.challenges.void[2] >= 2; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 4; }\n                    if (upgrade === 9) { return player.challenges.void[5] >= 1; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 3; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 5; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 4) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[3] >= 5 || player.buildings[6][1].current.moreOrEqual('6'); }\n                    if (upgrade === 9) { return player.challenges.void[3] >= 6; }\n                    if (upgrade === 10) { return player.challenges.void[2] >= 3; }\n                    if ([0, 1, 5, 7].includes(upgrade)) { return player.strangeness[5][3] >= 1; }\n                }\n                return true;\n            }\n            if (((stageIndex === 1 || stageIndex === 2) && upgrade < 6) || ((stageIndex === 3 || stageIndex === 4) && upgrade < 7)) { return true; }\n            if (player.milestones[4][0] < 8) { return false; }\n            if (stageIndex === 5) {\n                if (upgrade === 2) { return player.milestones[5][0] >= 8; }\n                if (upgrade === 4) { return player.milestones[4][1] >= 8; }\n                if ([0, 1, 3, 5].includes(upgrade)) { return player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7; }\n            }\n            return true;\n        case 'inflations':\n            if (stageIndex === 0) {\n                if (upgrade === 0) { return player.stage.true >= 7; }\n                if (upgrade === 5) { return player.challenges.supervoid[3] >= 3; }\n                if (upgrade >= 3 && player.stage.true < 8 && !player.event) { return false; }\n            } else {\n                if (upgrade === 0) { return player.challenges.supervoid[1] >= 1; }\n            }\n            return true;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 1) { return check !== 1 || !player.inflation.vacuum || player.challenges.supervoid[3] < 1; }\n            if (stageIndex === 5) { return check !== 3; }\n            if (stageIndex === 6) { return check < 1; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) { return check !== 5; }\n            if (stageIndex === 2) { return check !== 2; }\n            if (stageIndex === 4) { return false; }\n            if (stageIndex === 5) { return check !== 3; }\n            break;\n        case 'researches':\n            if (stageIndex === 1) { return check !== 3; }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) { return check !== 2; }\n            if (stageIndex === 2) { return check > 2; }\n            if (stageIndex === 4) { return check !== 0; }\n            if (stageIndex === 5) { return false; }\n            break;\n        case 'elements':\n            return ![26, 29, 30].includes(check);\n    }\n\n    return true;\n};\n\nexport const milestoneGetValue = (index: number, stageIndex: number): number | Overlimit => {\n    if (stageIndex === 1) {\n        if (index === 0) { return player.buildings[1][player.inflation.vacuum ? 1 : 0].total; }\n        if (index === 1) { return player.discharge.energy; }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.buildings[2][1].total : player.buildings[2][2].current; }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return player.buildings[3][0].total; }\n        if (index === 1) { return player.buildings[3][4].true + player.buildings[3][5].true; }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return player.buildings[4][0].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.collapse.stars[2] : global.collapseInfo.newMass; }\n    } else if (stageIndex === 5) {\n        if (index === 0) {\n            if (!player.inflation.vacuum) { return global.collapseInfo.trueStars; }\n            const stars = player.buildings[4];\n            return new Overlimit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n        }\n        if (index === 1) { return player.buildings[5][3].true; }\n    }\n    return 0;\n};\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    const pointer = global.milestonesInfo[stageIndex];\n    if (player.inflation.vacuum) {\n        if (player.challenges.active !== 0 || player.tree[0][4] < 1 ||\n            pointer.time[index] < player.time[player.challenges.super ? 'vacuum' : 'stage']) { return false; }\n    } else if (pointer.max[index] <= player.milestones[stageIndex][index] ||\n        (player.stage.true < 7 && player.stage.resets < 4) ||\n        (stageIndex === 5 && player.milestones[4][index] < 8) ||\n        (player.tree[0][4] < 1 && pointer.time[index] < player.time.stage)\n    ) { return false; }\n    return pointer.need[index].lessOrEqual(milestoneGetValue(index, stageIndex));\n};\n", "import { allowedToBeReset } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, autoElementsSet, assignMilestoneInformation, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport { stageUpdate, switchTab } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    const { dischargeInfo } = global;\n    const { energyStage, energyType } = dischargeInfo;\n    const { buildings, discharge } = player;\n\n    if (type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n            elements[i] = 0;\n        }\n        autoElementsSet();\n\n        global.collapseInfo.pointsLoop = 0;\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n        player.merge.since = 0;\n    }\n\n    let energyRefund = 0;\n    for (const s of stageIndex) {\n        energyRefund += energyStage[s];\n        energyStage[s] = 0;\n\n        const building = buildings[s];\n        building[0].current.setValue(playerStart.buildings[s][0].current);\n        building[0].total.setValue(playerStart.buildings[s][0].current);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) {\n                if (!player.inflation.vacuum) { continue; }\n                const selfmade = building[i as 1].true;\n                if (s === 1) {\n                    building[1].current.setValue(selfmade);\n                    building[1].total.setValue(selfmade);\n                }\n                const energy = energyType[s][i] * selfmade;\n                dischargeInfo.energyTrue += energy;\n                energyStage[s] += energy;\n                continue;\n            }\n            building[i as 1].true = 0;\n            building[i].current.setValue('0');\n            building[i].total.setValue('0');\n        }\n        if (s === 2) {\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n            assignBuildingsProduction.S4Levels(false);\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n            upgrades[i] = 0;\n        }\n        autoUpgradesSet(s);\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n            researches[i] = 0;\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n            researchesExtra[i] = 0;\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    if (player.inflation.vacuum) {\n        let deficit = dischargeInfo.energyTrue - discharge.energy - energyRefund;\n        for (let s = 2; s <= 5; s++) {\n            if (stageIndex.includes(s)) { continue; }\n            const building = buildings[s];\n            for (let i = global.buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n                if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n                if (deficit > 0) {\n                    const max = Math.min(Math.ceil(deficit / energyType[s][i]), building[i as 1].true);\n                    if (max > 0) {\n                        building[i as 1].true -= max;\n                        deficit -= max * energyType[s][i];\n                        energyStage[s] -= max * energyType[s][i];\n                        if (s === 4) { global.collapseInfo.trueStars -= max; }\n                    }\n                }\n                building[i].current.setValue(building[i as 1].true);\n                building[i].total.setValue(building[i as 1].true);\n            }\n            if (s !== 5) {\n                building[0].current.setValue(playerStart.buildings[s][0].current);\n                building[0].total.setValue(playerStart.buildings[s][0].current);\n            }\n            if (s === 2) {\n                assignBuildingsProduction.S2Levels(true);\n                assignBuildingsProduction.S2FreeBuilds();\n            } else if (s === 5) {\n                assignBuildingsProduction.S4Levels(true);\n            }\n        }\n\n        discharge.energy += deficit;\n        dischargeInfo.energyTrue = discharge.energy;\n    } else if (type === 'discharge') { //stageIndex.includes(1)\n        discharge.energy = 0;\n        dischargeInfo.energyTrue = 0;\n    }\n\n    assignBuildingsProduction.globalCache();\n    if (player.inflation.vacuum) { assignResetInformation.solarHardcap(); }\n};\n\n/** Default value for update is true; Default value for full is true (and null value for update), should be set to false only if Stage is permanent from false Vacuum */\nexport const resetStage = (stageIndex: number[], update = true as null | boolean, full = true) => {\n    const { strangeness } = player;\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            global.dischargeInfo.energyStage[s] = 0;\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n\n        global.lastUpgrade[s][0] = null;\n        if (s === 1) {\n            player.discharge.current = 0;\n            player.discharge.energy = 0;\n            global.dischargeInfo.energyTrue = 0;\n        } else if (s === 2) {\n            player.vaporization.clouds.setValue('0');\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 3) {\n            if (player.inflation.vacuum) {\n                player.accretion.rank = 1;\n            } else {\n                player.accretion.rank = 0;\n                buildings[0].current.setValue('5.9722e27');\n            }\n        } else if (s === 4) {\n            global.collapseInfo.pointsLoop = 0;\n            global.collapseInfo.trueStars = 0;\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            player.collapse.maxElement = 0;\n            assignBuildingsProduction.S4Levels(false);\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = strangeness[4][8] >= 1 ? 1 : 0;\n            autoElementsSet();\n            global.lastElement = null;\n        } else if (s === 5) {\n            player.merge.rewards = [0, 0, 0, 0];\n            player.merge.resets = 0;\n            player.merge.since = 0;\n        }\n    }\n    if (full) {\n        player.time.stage = 0;\n        player.stage.time = 0;\n        player.stage.peak = 0;\n        player.stage.peakedAt = 0;\n        global.debug.timeLimit = false;\n        player.researchesAuto[0] = strangeness[3][6];\n        player.researchesAuto[1] = strangeness[4][6];\n        player.researchesAuto[2] = player.inflation.vacuum ? (strangeness[1][4] < 1 ? 0 : strangeness[3][4] < 1 ? 1 : strangeness[2][4] < 1 ? 2 : strangeness[4][4] < 1 ? 3 : strangeness[5][9] < 1 ? 4 : 5) :\n            (strangeness[Math.min(player.stage.current, 4)][4] >= 1 ? 1 : 0);\n    } else { assignBuildingsProduction.globalCache(); }\n\n    for (const s of stageIndex) { //Less errors if do it separatly\n        if (s >= 6) { continue; }\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        if (strangeness[s][5] < 1) { player.ASR[s] = 0; }\n\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    if (update !== null) {\n        switchTab();\n        stageUpdate(update, true);\n    }\n};\n\nexport const resetVacuum = (universe = false) => {\n    const vacuum = player.inflation.vacuum;\n    const inflations = [false];\n    for (let i = 1; i <= 6; i++) { inflations[i] = player.buildings[6][1].current.moreOrEqual(i); }\n    if (universe) {\n        player.inflation.age = 0;\n        player.time.universe = 0;\n        player.challenges.supervoidMax = cloneArray(playerStart.challenges.supervoid);\n        global.inflationInfo.totalSuper = 0;\n    }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        if (s < 6) {\n            for (let i = 1; i < playerStart.buildings[s].length; i++) {\n                buildings[i as 1].true = 0;\n                buildings[i].current.setValue('0');\n                buildings[i].total.setValue('0');\n                buildings[i].trueTotal.setValue('0');\n            }\n            player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n            player.milestones[s] = cloneArray(playerStart.milestones[s]);\n            for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto[0] = inflations[3] ? 3 : 0;\n    player.researchesAuto[1] = inflations[3] ? 2 : 0;\n    player.researchesAuto[2] = inflations[4] ? (vacuum ? 4 : 1) : 0;\n    player.stage.current = 1;\n    player.stage.resets = 0;\n    player.stage.peak = 0;\n    player.stage.peakedAt = 0;\n    player.stage.time = 0;\n    player.inflation.time = 0;\n    player.time.stage = 0;\n    player.time.vacuum = 0;\n    global.debug.timeLimit = false;\n\n    //Stage 1\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n\n    //Stage 2\n    player.vaporization.clouds.setValue('0');\n    player.vaporization.cloudsMax.setValue('0');\n    assignBuildingsProduction.S2Levels(false);\n\n    //Stage 3\n    if (vacuum) {\n        player.accretion.rank = 1;\n    } else {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current.setValue('5.9722e27');\n    }\n\n    //Stage 4\n    global.collapseInfo.pointsLoop = 0;\n    global.collapseInfo.trueStars = 0;\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.collapse.maxElement = 0;\n    assignBuildingsProduction.S4Levels(false);\n    player.elements = cloneArray(playerStart.elements);\n    global.lastElement = null;\n\n    //Stage 5 and Strangeness\n    player.merge.since = 0;\n    player.merge.resets = 0;\n    player.merge.rewards = [0, 0, 0, 0];\n    player.challenges.void = cloneArray(playerStart.challenges.void);\n    global.historyStorage.stage = [];\n    player.history.stage.best = [3.1556952e16, 0, 0];\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    player.time.export[1] = 0;\n    player.time.export[2] = 0;\n    for (let i = 0; i < playerStart.strange.length; i++) {\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n\n    if (inflations[1]) {\n        const start = Math.ceil(Math.min(player.buildings[6][1].true, 5) ** (vacuum ? 2 : 1.5));\n        player.strange[0].current = start;\n        player.strange[0].total = start;\n        if (vacuum) { player.strangeness[1][8] = 2; }\n    }\n    if (inflations[2]) { player.strangeness[5][4] = 1; }\n    if (inflations[3]) {\n        player.strangeness[3][6] = 3;\n        player.strangeness[4][6] = 2;\n    }\n    if (inflations[5]) { player.strangeness[5][6] = vacuum ? 1 : 2; }\n    if (inflations[6] && vacuum) { player.strangeness[5][8] = 1; }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (inflations[2]) {\n            player.ASR[s] = global.ASRInfo.max[s];\n            player.strangeness[s][5] = 1;\n        } else { player.ASR[s] = 0; }\n        if (inflations[4]) { player.strangeness[s][4] = 1; }\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy();\n\n    switchTab();\n    stageUpdate(true, true);\n};\n\nexport const cloneBeforeReset = (depth: 'stage' | 'vacuum') => {\n    const { clone } = player;\n    clone.depth = depth;\n\n    clone.buildings = [[]];\n    clone.upgrades = [[]];\n    clone.researches = [[]];\n    clone.researchesExtra = [[]];\n    clone.ASR = [0];\n    if (depth !== 'stage') {\n        clone.strangeness = [];\n        clone.milestones = [];\n    }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        clone.buildings[s] = [{\n            current: buildings[0].current.toString(),\n            total: buildings[0].total.toString(),\n            trueTotal: buildings[0].trueTotal.toString()\n        }];\n        if (s < 6) {\n            for (let i = 1; i < buildings.length; i++) {\n                clone.buildings[s][i] = {\n                    true: buildings[i as 1].true,\n                    current: buildings[i].current.toString(),\n                    total: buildings[i].total.toString(),\n                    trueTotal: buildings[i].trueTotal.toString()\n                };\n            }\n            clone.ASR[s] = player.ASR[s];\n            if (depth !== 'stage') {\n                clone.strangeness[s] = cloneArray(player.strangeness[s]);\n                clone.milestones[s] = cloneArray(player.milestones[s]);\n            }\n        }\n        clone.upgrades[s] = cloneArray(player.upgrades[s]);\n        clone.researches[s] = cloneArray(player.researches[s]);\n        clone.researchesExtra[s] = cloneArray(player.researchesExtra[s]);\n    }\n    clone.stage = {\n        current: player.stage.current,\n        time: player.stage.time,\n        peak: player.stage.peak,\n        peakedAt: player.stage.peakedAt\n    };\n    clone.time = {\n        stage: player.time.stage\n    };\n    clone.researchesAuto = cloneArray(player.researchesAuto);\n\n    clone.discharge = {\n        current: player.discharge.current,\n        energy: player.discharge.energy\n    };\n    clone.vaporization = {\n        clouds: player.vaporization.clouds.toString()\n    };\n    clone.accretion = {\n        rank: player.accretion.rank\n    };\n    clone.collapse = {\n        mass: player.collapse.mass,\n        stars: cloneArray(player.collapse.stars),\n        maxElement: player.collapse.maxElement\n    };\n    clone.elements = cloneArray(player.elements);\n    clone.merge = {\n        rewards: cloneArray(player.merge.rewards),\n        resets: player.merge.resets,\n        since: player.merge.since\n    };\n    if (depth !== 'stage') {\n        clone.strange = [];\n        for (let i = 0; i < player.strange.length; i++) {\n            clone.strange[i] = {\n                current: player.strange[i].current,\n                total: player.strange[i].total\n            };\n        }\n        clone.history = {\n            stage: {\n                list: global.historyStorage.stage.slice(0, player.history.stage.input[0]),\n                best: cloneArray(player.history.stage.best)\n            }\n        };\n        clone.challenges = {\n            void: cloneArray(player.challenges.void)\n        };\n        clone.inflation = {\n            vacuum: player.inflation.vacuum,\n            time: player.inflation.time\n        };\n        clone.time.export = cloneArray(player.time.export);\n        clone.time.vacuum = player.time.vacuum;\n        clone.stage.resets = player.stage.resets;\n        clone.discharge.energyMax = player.discharge.energyMax;\n        clone.vaporization.cloudsMax = player.vaporization.cloudsMax.toString();\n        clone.collapse.massMax = player.collapse.massMax;\n    }\n};\n\nexport const loadFromClone = () => {\n    const { clone } = player;\n    const depth = clone.depth;\n\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingsClone = clone.buildings[s];\n\n        buildings[0].current.setValue(buildingsClone[0].current);\n        buildings[0].total.setValue(buildingsClone[0].total);\n        buildings[0].trueTotal.setValue(buildingsClone[0].trueTotal);\n        if (s < 6) {\n            for (let i = 1; i < buildingsClone.length; i++) {\n                buildings[i as 1].true = buildingsClone[i].true;\n                buildings[i].current.setValue(buildingsClone[i].current);\n                buildings[i].total.setValue(buildingsClone[i].total);\n                buildings[i].trueTotal.setValue(buildingsClone[i].trueTotal);\n            }\n            player.ASR[s] = clone.ASR[s];\n            if (depth !== 'stage') {\n                player.strangeness[s] = clone.strangeness[s];\n                player.milestones[s] = clone.milestones[s];\n                for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n            }\n        }\n\n        player.upgrades[s] = clone.upgrades[s];\n        player.researches[s] = clone.researches[s];\n        player.researchesExtra[s] = clone.researchesExtra[s];\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto = clone.researchesAuto;\n    player.stage.current = clone.stage.current;\n    player.stage.time = clone.stage.time;\n    player.stage.peak = clone.stage.peak;\n    player.stage.peakedAt = clone.stage.peakedAt;\n    player.time.stage = clone.time.stage;\n    global.debug.timeLimit = false;\n\n    player.discharge.current = clone.discharge.current;\n    player.discharge.energy = clone.discharge.energy;\n    player.vaporization.clouds.setValue(clone.vaporization.clouds);\n    player.accretion.rank = clone.accretion.rank;\n    assignBuildingsProduction.S2Levels(true);\n    const trueStars = clone.buildings[4];\n    global.collapseInfo.trueStars = trueStars[1].true + trueStars[2].true + trueStars[3].true + trueStars[4].true + trueStars[5].true;\n    global.collapseInfo.pointsLoop = 0;\n    player.collapse.mass = clone.collapse.mass;\n    player.collapse.stars = clone.collapse.stars;\n    player.collapse.maxElement = clone.collapse.maxElement;\n    assignBuildingsProduction.S4Levels(true);\n    player.elements = clone.elements;\n    global.lastElement = null;\n    player.merge.rewards = clone.merge.rewards;\n    player.merge.resets = clone.merge.resets;\n    player.merge.since = clone.merge.since;\n\n    if (depth !== 'stage') {\n        for (let i = 0; i < clone.strange.length; i++) {\n            player.strange[i].current = clone.strange[i].current;\n            player.strange[i].total = clone.strange[i].total;\n        }\n        player.stage.resets = clone.stage.resets;\n        player.time.export[1] = clone.time.export[1];\n        player.time.export[2] = clone.time.export[2];\n        player.time.vacuum = clone.time.vacuum;\n        player.inflation.time = clone.inflation.time;\n        global.historyStorage.stage = clone.history.stage.list;\n        player.history.stage.best = clone.history.stage.best;\n        player.challenges.void = clone.challenges.void;\n        player.discharge.energyMax = clone.discharge.energyMax;\n        player.vaporization.cloudsMax.setValue(clone.vaporization.cloudsMax);\n        player.collapse.massMax = clone.collapse.massMax;\n        global.lastStrangeness = [null, 0];\n        global.lastMilestone = [null, 0];\n    }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (depth !== 'stage') {\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignResetInformation.trueEnergy();\n    if (depth !== 'stage') {\n        assignBuildingsProduction.strange1();\n        assignBuildingsProduction.strange0();\n        assignResetInformation.maxRank();\n    }\n\n    switchTab();\n    stageUpdate(true, true);\n    player.clone = {};\n};\n", "import type Overlimit from './Limit';\nimport { getId, getQuery } from './Main';\nimport { global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { playEvent, specialHTML } from './Special';\nimport { setActiveStage } from './Stage';\nimport { addIntoLog, visualTrueStageUnlocks } from './Update';\n\n/** Sets playerStart, global and HTML values */\nexport const prepareVacuum = (state: boolean) => { //Must not use direct player values\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n    const milestone1S1 = getQuery('#milestone1Stage1Div > img') as HTMLImageElement;\n    const milestone1S2 = getQuery('#milestone1Stage2Div > img') as HTMLImageElement;\n    const milestone2S2 = getQuery('#milestone2Stage2Div > img') as HTMLImageElement;\n    const milestone1S4 = getQuery('#milestone1Stage4Div > img') as HTMLImageElement;\n    let upgrades1Cost, researches1Cost, researches1Scaling, strangeness1Cost, strangeness1Scaling, strangeness2Cost, strangeness2Scaling, strangeness3Cost, strangeness3Scaling, strangeness4Cost, strangeness4Scaling, strangeness5Cost, strangeness5Scaling;\n\n    if (state) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'];\n        buildingsInfo.hoverText[2][0] = 'Tritium';\n        buildingsInfo.hoverText[3][0] = 'Preons hardcap';\n        buildings[1][0].current.setValue('5.476e-3');\n        buildings[2][0].current.setValue('0');\n        buildings[3][0].current.setValue('9.76185667392e-36');\n        buildingsInfo.maxActive[1] = 6;\n        buildingsInfo.maxActive[2] = 7;\n        buildingsInfo.maxActive[3] = 6;\n        buildingsInfo.maxActive[4] = 6;\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift('Preon.png', 'Quarks.png');\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n            buildingsInfo.hoverText[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.startCost[1] = [0, 0.005476, 6, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'improving';\n        buildingsInfo.type[3][0] = 'delaying';\n\n        upgrades1Cost = [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000];\n        (upgradesInfo[2].startCost[0] as Overlimit).setValue('10');\n        (upgradesInfo[5].startCost[3] as Overlimit).setValue('1e160');\n        upgradesInfo[1].maxActive = 11;\n        upgradesInfo[2].maxActive = 9;\n        upgradesInfo[3].maxActive = 14;\n        upgradesInfo[4].maxActive = 5;\n        upgradesInfo[5].maxActive = 7;\n\n        researches1Cost = [1600, 4800, 16000, 32000, 16000, 24000];\n        researches1Scaling = [400, 1200, 8000, 40000, 16000, 16000];\n        researchesInfo[2].scaling[2] = 1e2;\n        researchesInfo[2].scaling[3] = 1e3;\n        //researchesInfo[1].maxActive = 6;\n        //researchesInfo[2].maxActive = 6;\n        //researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 6;\n        researchesInfo[5].maxActive = 5;\n\n        researchesExtraInfo[1].maxActive = 6;\n        researchesExtraInfo[2].maxActive = 5;\n        researchesExtraInfo[3].maxActive = 6;\n        researchesExtraInfo[4].maxActive = 4;\n        researchesExtraInfo[5].maxActive = 5;\n\n        global.elementsInfo.startCost[27].setValue('1e54');\n        global.elementsInfo.startCost[28].setValue('1e58');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000, 32000, 56000];\n        global.ASRInfo.costRange[3][3] = 2.45576045e31;\n\n        strangeness1Cost = [1, 1, 1, 2, 12, 2, 24];\n        strangeness1Scaling = [2.46, 2, 6, 4, 400, 1, 1];\n        strangeness2Cost = [1, 1, 2, 2, 12, 4, 24];\n        strangeness2Scaling = [2.46, 2, 3, 4, 800, 1, 1];\n        strangeness3Cost = [1, 2, 2, 24, 12, 4, 4, 24];\n        strangeness3Scaling = [2, 3.4, 3, 1, 100, 1, 1.74, 1];\n        strangeness4Cost = [1, 2, 4, 2, 12, 6, 6, 24];\n        strangeness4Scaling = [2, 3.4, 3, 4, 1900, 1, 1.74, 1];\n        strangeness5Cost = [24, 36, 4, 24, 15600, 24, 480, 120, 6000];\n        strangeness5Scaling = [2, 2, 4, 1, 1, 1, 1, 1, 1];\n        strangenessInfo[1].maxActive = 10;\n        strangenessInfo[2].maxActive = 10;\n        strangenessInfo[3].maxActive = 10;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 11;\n\n        getId('milestonesExtra').innerHTML = 'Requires <span class=\"darkvioletText\">\\'Void Milestones\\'</span> Inflation to be active to enable effects';\n        milestone1S1.src = milestone1S1.src.replace('Quarks.png', 'Preon.png');\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        getQuery('#milestone1Stage2Main > span').textContent = 'Distant Clouds';\n        milestone1S2.src = milestone1S2.src.replace('Drop.png', 'Clouds.png');\n        milestone1S2.alt = 'Distant Clouds';\n        milestone2S2.src = milestone2S2.src.replace('Puddle.png', 'Drop.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Center of gravity';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Center of gravity';\n        milestone1S4.src = milestone1S4.src.replace('Main_sequence%20mass.png', 'Black%20hole.png');\n        getId('mergeResetText').innerHTML = '<span class=\"darkvioletText\">Merge</span> does a <span class=\"grayText\">Galaxy</span> reset, while also converting all self-made <span class=\"grayText\">Galaxies</span> into bonus ones.';\n        getQuery('#stageAutoInterstellar span').textContent = 'Stage';\n        getQuery('#stageHistory > h3').textContent = 'Stage resets:';\n\n        getId('preonCap').style.display = '';\n        getId('molesProduction').style.display = '';\n        getId('massProduction').style.display = '';\n        getId('mainCapHardS5').style.display = '';\n        getId('element0').style.display = '';\n        getId('strangePeakAllowed').style.display = '';\n        getId('strange1Effect1Allowed').style.display = '';\n        const test = getId('strangenessPage5', true); //No idea if global setting should be allowed here\n        (test === null ? getId('strangenessSection5') : test).style.display = '';\n        getId('strange7Stage1').style.display = '';\n        getId('strange7Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange8Stage4').style.display = '';\n        getId('strange3Stage5').style.display = '';\n        getId('strange4Stage5').style.display = '';\n        getId('milestone1Stage5Div').style.display = '';\n        getId('milestone2Stage5Div').style.display = '';\n        getId('stageAutoInterstellar').style.display = '';\n        getId('vaporizationLimit').style.display = '';\n        getId('collapseCapped').style.display = '';\n        getId('mergeToggleReset').style.display = '';\n\n        getId('strangePeakDisabled').style.display = 'none';\n        getId('strange1Effect1Disabled').style.display = 'none';\n        getId('stageAutoElse').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'stage1borderImage cyanText', 'Quarks'];\n        buildingsInfo.hoverText[2][0] = 'Moles';\n        buildingsInfo.hoverText[3][0] = 'Mass';\n        buildings[1][0].current.setValue('3');\n        buildings[2][0].current.setValue('2.7753108348135e-3');\n        buildings[3][0].current.setValue('1e-19');\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n            buildingsInfo.hoverText[1].splice(0, 2);\n        }\n        buildingsInfo.maxActive[1] = 4;\n        buildingsInfo.maxActive[2] = 6;\n        buildingsInfo.maxActive[3] = 5;\n        buildingsInfo.maxActive[4] = 5;\n        buildingsInfo.startCost[1] = [0, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'producing';\n        buildingsInfo.type[3][0] = 'producing';\n        global.buildingsInfo.producing[4][5].setValue('0');\n\n        upgrades1Cost = [0, 0, 12, 36, 120, 240, 480, 1600, 3200, 20800];\n        (upgradesInfo[2].startCost[0] as Overlimit).setValue('1e4');\n        (upgradesInfo[5].startCost[3] as Overlimit).setValue('1e150');\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 4;\n\n        researches1Cost = [600, 2000, 4000, 4000, 6000, 6000];\n        researches1Scaling = [200, 400, 2000, 12000, 4000, 6000];\n        researchesInfo[2].scaling[2] = 1e3;\n        researchesInfo[2].scaling[3] = 1e2;\n        researchesInfo[1].maxActive = 6;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[3].maxActive = 9;\n        researchesInfo[4].maxActive = 5;\n        researchesInfo[5].maxActive = 2;\n\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 3;\n        researchesExtraInfo[5].maxActive = 1;\n\n        global.elementsInfo.startCost[27].setValue('1e52');\n        global.elementsInfo.startCost[28].setValue('1e54');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000];\n        global.ASRInfo.costRange[3][3] = 2e30;\n\n        strangeness1Cost = [1, 1, 1, 2, 4, 2, 24];\n        strangeness1Scaling = [1, 0.75, 1.5, 2, 0, 0, 0];\n        strangeness2Cost = [1, 1, 2, 2, 4, 2, 24];\n        strangeness2Scaling = [0.5, 0.75, 1, 2, 0, 0, 0];\n        strangeness3Cost = [1, 1, 2, 6, 4, 2, 4, 24];\n        strangeness3Scaling = [0.75, 1.5, 1, 0, 0, 0, 2.5, 0];\n        strangeness4Cost = [1, 1, 3, 2, 4, 2, 4, 24];\n        strangeness4Scaling = [1, 2, 1.5, 2, 0, 0, 68, 0];\n        strangeness5Cost = [20, 24, 240, 24, 6000, 24, 20, 120, 6000];\n        strangeness5Scaling = [20, 24, 240, 0, 0, 0, 220, 0, 0];\n        strangenessInfo[1].maxActive = 7;\n        strangenessInfo[2].maxActive = 7;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 8;\n        strangenessInfo[5].maxActive = 9;\n\n        getId('milestonesExtra').innerHTML = 'Completing any tier will award 1 <span class=\"greenText\">Strange quark</span>';\n        milestone1S1.src = milestone1S1.src.replace('Preon.png', 'Quarks.png');\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        getQuery('#milestone1Stage2Main > span').textContent = 'A Nebula of Drops';\n        milestone1S2.src = milestone1S2.src.replace('Clouds.png', 'Drop.png');\n        milestone1S2.alt = 'A Nebula of Drops';\n        milestone2S2.src = milestone2S2.src.replace('Drop.png', 'Puddle.png');\n        (getQuery('#milestone1Stage3Div > img') as HTMLImageElement).alt = 'Cluster of Mass';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Cluster of Mass';\n        milestone1S4.src = milestone1S4.src.replace('Black%20hole.png', 'Main_sequence%20mass.png');\n        getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together, which will result in <span class=\"orchidText\">Vacuum</span> decaying into its true state.';\n        getQuery('#stageAutoInterstellar span').textContent = 'Interstellar Stage';\n        getQuery('#stageHistory > h3').textContent = 'Interstellar Stage resets:';\n\n        getId('strange8Stage5').style.display = '';\n        getId('milestonesProgressArea').style.display = '';\n        getId('stageAutoElse').style.display = '';\n        getId('rankStat0').style.display = '';\n\n        getId('preonCap').style.display = 'none';\n        getId('molesProduction').style.display = 'none';\n        getId('massProduction').style.display = 'none';\n        getId('dustCap').style.display = 'none';\n        getId('submersionBoost').style.display = 'none';\n        getId('mainCap').style.display = 'none';\n        getId('mainCapHardS5').style.display = 'none';\n        getId('mergeBoost').style.display = 'none';\n        getId('mergeEffects').style.display = 'none';\n        getId('mergeBoostTotal').style.display = 'none';\n        getId('researchAuto1').style.display = 'none';\n        getId('researchAuto2').style.display = 'none';\n        getId('vaporizationLimit').style.display = 'none';\n        getId('collapseCapped').style.display = 'none';\n        getId('element0').style.display = 'none';\n        for (let s = 1; s < strangenessInfo.length; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].startCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n        getId('toggleAuto9Main').style.display = 'none';\n        getId('energyGainStage1Build1').style.display = 'none';\n        getId('energyGainStage1Build2').style.display = 'none';\n        for (let s = 2; s <= 5; s++) {\n            getId(`energyGainStage${s}`).style.display = 'none';\n        }\n        getId('mergeResets').style.display = 'none';\n        getId('mergeScore').style.display = 'none';\n        getId('mergeResetsS6').style.display = 'none';\n    }\n\n    upgradesInfo[1].startCost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n    researchesInfo[1].startCost.splice(0, researches1Cost.length, ...researches1Cost);\n    researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n    strangenessInfo[1].startCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n    strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n    strangenessInfo[2].startCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n    strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n    strangenessInfo[3].startCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n    strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n    strangenessInfo[4].startCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n    strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n    strangenessInfo[5].startCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n    strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total.setValue(newValue);\n        buildings[s][0].trueTotal.setValue(newValue);\n    }\n};\n\nexport const switchVacuum = () => {\n    if (player.inflation.vacuum) { return; }\n    let income = 0;\n    if (player.stage.true >= 7) {\n        income = 1;\n        player.cosmon[0].current += income;\n        player.cosmon[0].total += income;\n    } else {\n        player.stage.true = 6;\n        player.collapse.show = 0;\n        player.event = false;\n        visualTrueStageUnlocks();\n        playEvent(6);\n    }\n\n    const history = player.history.vacuum;\n    const storage = global.historyStorage.vacuum;\n    const realTime = player.time.vacuum;\n    storage.unshift([realTime, false, income]);\n    if (storage.length > 100) { storage.length = 100; }\n    if (income / realTime > history.best[2] / history.best[0]) {\n        history.best = [realTime, false, income];\n    }\n\n    if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n    player.inflation.vacuum = true;\n    player.inflation.resets++;\n    player.challenges.active = null;\n    player.clone = {};\n    prepareVacuum(true);\n    resetVacuum();\n    addIntoLog('Vacuum reset');\n};\n", "import { checkBuilding, checkUpgrade, milestoneCheck } from './Check';\nimport Overlimit, { compareFunc } from './Limit';\nimport { changeRewardType, getId, loadoutsVisual, simulateOffline } from './Main';\nimport { effectsCache, global, logAny, player, playerStart } from './Player';\nimport { cloneBeforeReset, loadFromClone, reset, resetStage, resetVacuum } from './Reset';\nimport { Confirm, Notify, errorNotify, globalSave, playEvent } from './Special';\nimport type { calculateEffectsType } from './Types';\nimport { addIntoLog, format, numbersUpdate, stageUpdate, switchTab, visualTrueStageUnlocks, visualUpdate } from './Update';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/** Normal game tick, everything calculated in milliseconds */\nexport const timeUpdate = (tick: number, timeWarp: null | number = null) => {\n    const { time } = player;\n    const { auto, buildings: autoBuy } = player.toggles;\n    const { maxActive } = global.buildingsInfo;\n    const activeAll = global.stageInfo.activeAll;\n\n    if (timeWarp !== null) {\n        if (timeWarp < tick) { return void (time.offline += timeWarp); }\n        timeWarp -= tick;\n    } else {\n        const currentTime = Date.now();\n        const passedTime = currentTime - time.updated;\n        time.updated = currentTime;\n        time.export[0] += passedTime * 4.8 / (4.8 - player.tree[0][5]);\n        global.lastSave += passedTime;\n        timeWarp = time.offline + passedTime;\n        if (timeWarp < tick) {\n            if (passedTime > 0) { time.online += passedTime; }\n            time.offline = timeWarp;\n            return;\n        } else { time.offline = 0; } //Must be before potential warp\n        if (timeWarp > tick * 600) { return void simulateOffline(timeWarp); }\n        timeWarp -= tick;\n        time.online += passedTime;\n    }\n    const trueSeconds = tick / 1000;\n    player.merge.since += trueSeconds;\n    time.stage += trueSeconds;\n    time.vacuum += trueSeconds;\n    time.universe += trueSeconds;\n\n    effectsCache.inflation3 = calculateEffects.inflation3() ** player.tree[0][3];\n    const passedSeconds = trueSeconds * assignBuildingsProduction.globalSpeed();\n    player.stage.time += passedSeconds;\n    player.inflation.time += passedSeconds;\n    player.inflation.age += passedSeconds;\n\n    if (player.toggles.normal[3]) { exitChallengeAuto(); }\n    if (!player.inflation.vacuum) {\n        if (activeAll.includes(4)) { stageResetCheck(5, trueSeconds); }\n        if (auto[0]) {\n            if (activeAll.includes(3)) { stageResetCheck(3, 0); }\n            if (activeAll.includes(2)) { stageResetCheck(2, 0); }\n            if (activeAll.includes(1)) { stageResetCheck(1, 0); }\n        }\n    } else { stageResetCheck(5, trueSeconds); }\n\n    const vacuum = player.inflation.vacuum;\n    assignBuildingsProduction.globalCache();\n    if (activeAll.includes(6)) {\n        gainBuildings(0, 6, passedSeconds); //Dark matter\n    }\n    if (activeAll.includes(4)) {\n        if (auto[8]) { autoElementsBuy(); }\n        if (activeAll.includes(5)) {\n            if (player.strangeness[5][3] >= 1 || player.buildings[6][1].current.moreOrEqual('3')) {\n                if (auto[5]) { autoUpgradesBuy(5); }\n                if (auto[6]) { autoResearchesBuy('researches', 5); }\n                if (auto[7]) { autoResearchesBuy('researchesExtra', 5); }\n            }\n            for (let i = maxActive[5] - 1; i >= 1; i--) {\n                if (autoBuy[5][i]) { buyBuilding(i, 5, 0, true); }\n            }\n            assignBuildingsProduction.stage5Cache();\n            gainBuildings(0, 5, passedSeconds); //Brown dwarfs\n            const research = player.researches[5][0];\n            if (research >= 1) { gainBuildings(1, 5, passedSeconds); } //Main sequence\n            if (research >= 2) { gainBuildings(2, 5, passedSeconds); } //Red supergiants\n            if (research >= 3) { gainBuildings(3, 5, passedSeconds); } //Blue hypergiants\n            if (research >= 4 && player.challenges.active !== 0) { gainBuildings(4, 5, passedSeconds); } //Quasi-stars\n        } else { assignBuildingsProduction.stage5Cache(); }\n        if (auto[5]) { autoUpgradesBuy(4); }\n        if (auto[6]) { autoResearchesBuy('researches', 4); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 4); }\n        assignBuildingsProduction.stage4Cache();\n        for (let i = maxActive[4] - 1; i >= 1; i--) {\n            if (autoBuy[4][i]) { buyBuilding(i, 4, 0, true); }\n            gainBuildings(i - 1, 4, passedSeconds); //Stardust\n        }\n        assignBuildingsProduction.S4Levels();\n        awardMilestone(0, 5);\n        awardMilestone(0, 4);\n        if (!collapseResetCheck(true) && vacuum && auto[9]) { mergeResetCheck(true); }\n        awardMilestone(1, 4);\n    } else if (vacuum) { assignResetInformation.solarHardcap(1); }\n    if (activeAll.includes(3)) {\n        if (auto[3]) { rankResetCheck(true); }\n        if (auto[5]) { autoUpgradesBuy(3); }\n        if (auto[6]) { autoResearchesBuy('researches', 3); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 3); }\n        assignBuildingsProduction.stage3Cache();\n        if (vacuum) { global.accretionInfo.disableAuto = player.researchesExtra[3][5] < 1 && player.strangeness[1][8] >= 2 && assignBuildingsProduction.S3Build1(true) >= calculateEffects.dustHardcap(); }\n        for (let i = 1; i < maxActive[3]; i++) {\n            if (autoBuy[3][i]) { buyBuilding(i, 3, 0, true); }\n        }\n        gainBuildings(2, 3, passedSeconds); //Planetesimals\n        gainBuildings(1, 3, passedSeconds); //Cosmic dust\n        if (!vacuum) { gainBuildings(0, 3, passedSeconds); } //Mass\n    }\n    if (activeAll.includes(2)) {\n        vaporizationResetCheck(trueSeconds);\n        if (auto[5]) { autoUpgradesBuy(2); }\n        if (auto[6]) { autoResearchesBuy('researches', 2); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 2); }\n        for (let i = maxActive[2] - 1; i >= 1; i--) {\n            if (autoBuy[2][i]) { buyBuilding(i, 2, 0, true); }\n        }\n        gainBuildings(1, 2, passedSeconds); //Drops\n        if (!vacuum) { gainBuildings(0, 2, passedSeconds); } //Moles\n        awardMilestone(1, 2);\n        awardMilestone(0, 2);\n    }\n    if (activeAll.includes(1)) {\n        if (auto[5]) { autoUpgradesBuy(1); }\n        if (auto[6]) { autoResearchesBuy('researches', 1); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 1); }\n        assignBuildingsProduction.stage1Cache();\n        gainBuildings(5, 1, passedSeconds); //Molecules\n        for (let i = maxActive[1] - 1; i >= 1; i--) {\n            if (autoBuy[1][i]) { buyBuilding(i, 1, 0, true); }\n            gainBuildings(i - 1, 1, passedSeconds); //Rest of Microworld\n        }\n        awardMilestone(1, 1);\n        awardMilestone(0, 1);\n        dischargeResetCheck(true);\n    }\n\n    if (timeWarp >= tick) {\n        timeUpdate(tick, timeWarp);\n    } else if (timeWarp !== 0) { time.offline += timeWarp; }\n};\n\nexport const calculateEffects: calculateEffectsType = {\n    effectiveEnergy: () => {\n        let energy = player.discharge.energy;\n        if (player.upgrades[1][10] === 1) { energy *= 2; }\n        if (player.inflation.vacuum && player.tree[0][4] >= 1) { energy *= global.milestonesInfo[1].reward[1]; }\n        return Math.max(energy, 1);\n    },\n    effectiveGoals: () => {\n        let goals = player.discharge.current + (player.strangeness[1][3] / 2);\n        if (player.inflation.vacuum) { goals += player.tree[1][0]; }\n        return goals;\n    },\n    dischargeScaling: (research = player.researches[1][3], strangeness = player.strangeness[1][2]) => {\n        let scale = (2 * research) + (strangeness / 2);\n        if (player.inflation.vacuum) { scale += player.tree[1][0] / 2; }\n        return 10 - scale;\n    },\n    dischargeCost: (scaling = calculateEffects.dischargeScaling()) => {\n        let next = scaling ** player.discharge.current;\n        if (player.inflation.vacuum && player.strangeness[5][10] >= 1) { next /= calculateEffects.S5Strange9_stage1(); }\n        return next;\n    },\n    dischargeBase: (research = player.researches[1][4]) => {\n        let base = (4 + research) / 2;\n        if (player.challenges.active === 0) { base = (base + player.tree[1][0] / 2) ** 0.5; }\n        return base;\n    },\n    S1Upgrade6: () => 10 + 3 * player.researches[1][0],\n    S1Upgrade7: (preons = false) => {\n        let base = 2 + player.researches[1][1];\n        const selfBoost = (base + 100) / 100;\n        if (!preons || player.buildings[1][1].true >= 1001) { return selfBoost; }\n\n        base = (base * 1.6 + 100) / 100; //Formula is '(selfPreons * step ** ((true - 1) / 2)) ** true'; Step is '(selfBoost / selfPreons) ** (1 / 500)'\n        return (selfBoost / base) ** ((player.buildings[1][1].true - 1) / 1000) * base;\n    },\n    S1Upgrade9: () => {\n        let effect = calculateEffects.effectiveEnergy();\n        if (player.upgrades[1][10] !== 1) { effect **= 0.5; }\n        return effect;\n    },\n    S1Research2: (level = player.strangeness[1][1]) => 20 + (level * (player.inflation.vacuum ? 1.5 : 1)),\n    S1Research5: () => {\n        const discharges = global.dischargeInfo.total;\n        if (!player.inflation.vacuum) { return discharges > 5 ? discharges + 15 : discharges * 4; }\n        return discharges > 7 ? discharges + 14 : discharges * 3;\n    },\n    S1Extra1: (level = player.researchesExtra[1][1]) => level >= 4 ? 1.1 : level >= 3 ? 1.2 : (20 - 3 * level) / 10,\n    S1Extra3: (level = player.researchesExtra[1][3]) => (level * (player.challenges.supervoid[3] >= 2 ? 6 : 5)) / 100,\n    S1Extra4: (research = player.researchesExtra[1][5]) => (global.dischargeInfo.base + calculateEffects.effectiveEnergy() ** 0.1) * (research + 1) / 100 + 1,\n    preonsHardcap: (laterPreons) => 1e14 * laterPreons * effectsCache.S1SolarDelay * assignBuildingsProduction.S3Build1(),\n    clouds: (post = false) => {\n        const effect = new Overlimit(player.vaporization.clouds).plus('1');\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n\n        if (effect.moreThan('1e4')) { effect.minus('1e4').power(0.7).plus('1e4'); }\n        return effect;\n    },\n    cloudsGain: () => player.challenges.active === 0 ? 0.4 : player.inflation.vacuum ? 0.5 : 0.6,\n    S2Upgrade1: () => {\n        const puddles = player.buildings[2][2];\n        const maxTrue = Math.min(puddles.true, 200);\n        return new Overlimit('1.02').power((puddles.current.toNumber() - maxTrue) ** 0.7 + maxTrue);\n    },\n    S2Upgrade2: () => {\n        let effect = 1e10 / (player.inflation.vacuum ? 2.5 : 2) ** player.strangeness[2][3];\n        if (player.inflation.vacuum && player.tree[0][4] >= 1) { effect /= global.milestonesInfo[2].reward[0]; }\n        return effect;\n    },\n    S2Upgrade3_power: (research = player.researches[2][2]) => (1 + research / 2) / 100,\n    S2Upgrade3: (power = calculateEffects.S2Upgrade3_power()) => new Overlimit(player.buildings[2][0].current).max('1').power(power).toNumber(),\n    S2Upgrade4_power: (research = player.researches[2][3]) => (1 + research / 2) / 100,\n    S2Upgrade4: (power = calculateEffects.S2Upgrade4_power()) => new Overlimit(player.buildings[2][1].current).max('1').power(power).toNumber(),\n    S2Extra1: (level, post = false) => { //+^0.05 per level; Drops up to +^(0.05 / 3) after softcap\n        if (level <= 0) { return 1; }\n        const effect = new Overlimit(player.vaporization.clouds);\n        if (post) { effect.plus(global.vaporizationInfo.get); }\n        return Math.max(new Overlimit(effect).power(level / 60).multiply(effect.min('1e6').power(level / 30)).toNumber(), 1);\n    },\n    S2Extra2: (rain, level = player.researchesExtra[2][2]) => level >= 1 ? (rain - 1) / 32 + 1 : 1,\n    submersion: () => {\n        const drops = new Overlimit(player.buildings[2][1].current).plus('1');\n        return new Overlimit(drops).power(0.6).divide(drops.min('1e10').power(0.4)).plus('1').log(2).toNumber(); //^0.2 before softcap, ^0.6 after\n    },\n    effectiveRank: () => {\n        let rank = player.accretion.rank;\n        if (player.inflation.vacuum && player.tree[0][4] >= 1) { rank += global.milestonesInfo[3].reward[1]; }\n        return rank;\n    },\n    S3Upgrade0: () => (101 + player.researches[3][1]) / 100,\n    S3Upgrade1_power: (research = player.researchesExtra[3][3]) => (11 + research) / 100, //Two times stronger for self-made ones\n    S3Upgrade1: (power = calculateEffects.S3Upgrade1_power()) => Math.max(new Overlimit(player.buildings[3][1].current).multiply(player.buildings[3][1].true + 1).power(power).toNumber(), 1),\n    S3Upgrade3: () => (204 + player.researches[3][4]) / 200, //1.02 + 0.005\n    S3Research6: (level = player.researches[3][6]) => { //+^0.025 per level; Drops up to +^(0.025 / 3) after softcap\n        const mass = Math.max(player.buildings[3][0].current.toNumber(), 1);\n        return mass ** (level / 120) * Math.min(mass, 1e21) ** (level / 60);\n    },\n    S3Extra1: (level = player.researchesExtra[3][1]) => (100 + 11 * level) / 100,\n    S3Extra4: (level = player.researchesExtra[3][4]) => level > 0 ? 8 ** ((global.accretionInfo.effective + level) / 8) : 1,\n    dustDelay: () => {\n        let delay = effectsCache.S3SolarDelay * (1.4 ** player.strangeness[3][8]);\n        if (player.strangeness[5][10] >= 3) { delay *= calculateEffects.S5Strange9_stage3(); }\n        return delay;\n    },\n    dustHardcap: () => (player.accretion.rank >= 5 ? 1e48 : 8e46) * calculateEffects.dustDelay(),\n    mass: (post = false) => {\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        if (effect > 1) {\n            if (player.elements[21] >= 1) { effect **= 1.1; }\n            if (player.challenges.active === 0) { effect **= 0.2; }\n        }\n        return effect;\n    },\n    star: [\n        (post = false) => {\n            let effect = player.collapse.stars[0] + 1;\n            if (post) {\n                effect += global.collapseInfo.starCheck[0];\n            }\n            if (player.elements[27] >= 1) { effect += player.buildings[4][3].true; }\n\n            if (player.elements[6] >= 1) { effect **= calculateEffects.element6(); }\n            return effect;\n        },\n        (post = false) => {\n            let stars = player.collapse.stars[1] * (1 + player.strangeness[4][8]);\n            if (post) {\n                stars += global.collapseInfo.starCheck[1] * (1 + player.strangeness[4][8]);\n                if (player.elements[22] >= 1) { stars += global.collapseInfo.starCheck[0]; }\n            }\n            if (player.elements[22] >= 1) { stars += player.collapse.stars[0]; }\n\n            let effect = (stars + 1) ** (0.5 + player.strangeness[4][8] / 8);\n            if (player.elements[12] >= 1) { effect *= logAny(stars + 4, 4); }\n            return effect;\n        },\n        (post = false) => {\n            let blackHoles = player.collapse.stars[2];\n            if (post) {\n                blackHoles += global.collapseInfo.starCheck[2];\n            }\n            if (blackHoles <= 0) { return 1; }\n\n            const base = player.elements[18] >= 1 ? 3 : 2;\n            let effect = (blackHoles + 1) / logAny(blackHoles + base, base);\n            if (player.inflation.vacuum && player.tree[0][4] >= 1) { effect *= global.milestonesInfo[4].reward[1]; }\n            return effect;\n        }\n    ],\n    massGain: () => {\n        const elements = player.elements;\n\n        let massGain = 0.004;\n        if (elements[3] >= 1) { massGain += 0.002; }\n        if (elements[5] >= 1) { massGain += 0.0002 * player.buildings[4][1].true; }\n        massGain *= elements[15] >= 1 ? global.collapseInfo.trueStars : player.buildings[4][1].true;\n        if (player.inflation.vacuum) {\n            massGain = (massGain * (player.challenges.active === 0 ? 48 : 96)) + 1;\n        } else {\n            if (elements[10] >= 1) { massGain *= 2; }\n            if (player.researchesExtra[4][1] >= 1) { massGain *= calculateEffects.S4Extra1(); }\n            massGain *= calculateEffects.star[2]();\n            if (player.strangeness[5][7] >= 1) { massGain *= global.strangeInfo.stageBoost[5]; }\n        }\n        return massGain;\n    },\n    S4Shared: () => {\n        const multiplier = new Overlimit(calculateEffects.S4Research1()).power(global.collapseInfo.trueStars);\n        if (player.elements[24] >= 1) { multiplier.multiply(calculateEffects.element24()); }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[1][4] >= 1) { multiplier.multiply(calculateEffects.S1Extra4() ** global.dischargeInfo.total); }\n        }\n        return multiplier;\n    },\n    S4Research0_base: (disc = player.researches[4][2]) => (14 + disc) / 10,\n    S4Research0: (base = calculateEffects.S4Research0_base()) => {\n        let levels = player.researches[4][0];\n        if (player.elements[19] >= 1) { levels++; }\n        return base ** levels;\n    },\n    S4Research1: (level = player.researches[4][1], transfer = player.researchesExtra[4][1]) => {\n        if (level <= 0) { return 1; }\n        return 1 + (transfer >= 1 ? 0.006 : 0.005) * (\n            level >= 12 ? (level + 93) / 16 :\n            level >= 8 ? (level + 41) / 8 :\n            level >= 6 ? (level + 17) / 4 :\n            level >= 5 ? 5.5 : 1 + level\n        );\n    },\n    S4Research4: (post = false, level = player.researches[4][4]) => {\n        if (level < 1) { return 1; }\n\n        let blackHoles = player.collapse.stars[2];\n        let mass = player.collapse.mass;\n        if (post) {\n            blackHoles += global.collapseInfo.starCheck[2];\n            if (global.collapseInfo.newMass > mass) { mass = global.collapseInfo.newMass; }\n        }\n\n        const base = level >= 2 ? 2 : 3;\n        let effect = logAny(blackHoles + base, base);\n        if (player.elements[23] >= 1 && mass > 1) { effect *= mass ** 0.1; }\n        return effect;\n    },\n    S4Extra1: () => (10 + player.researches[4][1]) / 10,\n    mergeMaxResets: () => {\n        let max = 2 + player.researchesExtra[5][3];\n        if (player.elements[30] >= 1) { max += player.collapse.maxElement - 29; }\n        return max;\n    },\n    reward: [\n        (post = false) => {\n            let effect = player.merge.rewards[0] + 1;\n            if (post) { effect += global.mergeInfo.checkReward[0]; }\n            return effect * calculateEffects.S5Extra2(global.mergeInfo.S5Extra2, post);\n        }\n    ],\n    mergeScore: () => global.mergeInfo.galaxies + (player.merge.rewards[0] * 2),\n    S5Upgrade0: () => 3 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade1: () => 2 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade2: (post = false, level = player.upgrades[5][2]) => {\n        if (level < 1) { return 0; }\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        effect = Math.log10(Math.max(effect / 1e5, 1)) / 4 + 0.25;\n        if (!player.inflation.vacuum) { effect *= 2; }\n        return effect;\n    },\n    S5Research2: () => 1 + player.researches[5][2] / 160,\n    S5Research3: () => 1 + player.researches[5][3] / 160,\n    S5Extra2: (level, post = false) => {\n        let groups = player.merge.rewards[0];\n        if (post) { groups += global.mergeInfo.checkReward[0]; }\n        return (8 + level * groups) / 8;\n    },\n    S5Extra4: (level = player.researchesExtra[5][4]) => (19 - level) * level / 2, //Starts at 9 and -1 is the step\n    element6: () => player.researchesExtra[4][2] >= 1 ? 2 : 1.5,\n    element24_power: () => player.elements[27] >= 1 ? 0.02 : 0.01,\n    element24: () => new Overlimit(player.buildings[4][0].current).max('1').power(calculateEffects.element24_power()),\n    element26: () => {\n        let effect = new Overlimit(player.buildings[4][0].trueTotal).log(10).toNumber() - 48;\n        if (player.elements[29] >= 1) { effect = (199 + effect) * effect / 200; }\n        return Math.max(effect, 0);\n    },\n    S2Strange9: () => new Overlimit(player.vaporization.clouds).plus('1').log(10).toNumber() / 80 + 1,\n    S5Strange9_stage1: () => global.mergeInfo.galaxies ** 2 + 1,\n    S5Strange9_stage2: () => global.mergeInfo.galaxies + 1,\n    S5Strange9_stage3: () => global.mergeInfo.galaxies / 100 + 1,\n    inflation0: () => Math.max(2 ** (1 - player.time.stage / 3600), 1),\n    inflation1_power: (level = player.tree[0][1]) => level / 25,\n    inflation1: (power = calculateEffects.inflation1_power()) => new Overlimit(player.buildings[6][0].current).plus('1').power(power).toNumber(),\n    inflation3: () => (1 + global.inflationInfo.totalSuper) / 10 + 1,\n    strangeGain: (interstellar: boolean, type = 0) => {\n        let base = type === 1 ? 0 : player.inflation.vacuum ?\n            (player.strangeness[5][3] >= 1 ? 5 : 4) :\n            (player.milestones[1][0] >= 6 ? 2 : 1);\n        if (interstellar) {\n            base = (base + effectsCache.element26) * effectsCache.interstellarQuarks;\n        }\n        if (type === 0) {\n            base *= (1.4 ** player.strangeness[5][2]) * (1.4 ** player.tree[0][2]);\n        }\n        return base * global.strangeInfo.strangeletsInfo[1] * effectsCache.inflation3;\n    }\n};\n\nexport const assignBuildingsProduction = {\n    globalSpeed: (): number => {\n        const tree = player.tree[0];\n        const challenge = player.challenges.active;\n        let speed = calculateEffects.inflation1() * effectsCache.inflation3;\n        if (tree[0] >= 1) { speed *= 2; }\n        if (tree[0] >= 2 && (player.inflation.vacuum ? challenge === null : tree[4] >= 1)) { speed *= calculateEffects.inflation0(); }\n        if (challenge === 0) {\n            speed *= 1.2 ** Math.min(tree[2], tree[3] * 2);\n            if (player.challenges.super) {\n                speed /= 5 - tree[5];\n            } else { speed *= 6 / (6 - tree[5]); }\n        }\n        return (global.inflationInfo.globalSpeed = speed);\n    },\n    /** Have to be after auto Strangeness, Inflation and interstellar Stage */\n    globalCache: () => {\n        global.dischargeInfo.total = calculateEffects.effectiveGoals();\n        global.dischargeInfo.base = calculateEffects.dischargeBase();\n        effectsCache.S2Upgrade3 = player.upgrades[2][3] === 1 ? calculateEffects.S2Upgrade3() : 1;\n        effectsCache.S2Upgrade4 = player.upgrades[2][4] === 1 ? calculateEffects.S2Upgrade4() : 1;\n        global.accretionInfo.effective = calculateEffects.effectiveRank();\n        global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n    },\n    /** Have to be after auto Upgrades */\n    stage1Cache: () => {\n        effectsCache.S1Upgrade6 = player.upgrades[1][6] === 1 ? calculateEffects.S1Upgrade6() : 0;\n        effectsCache.S1Upgrade7 = player.upgrades[1][7] === 1 ? calculateEffects.S1Upgrade7() : 1;\n        let multiplier = (player.inflation.vacuum ? 2 : 1.8) ** player.strangeness[1][0];\n        if (player.upgrades[1][5] === 1) { multiplier *= global.dischargeInfo.base ** global.dischargeInfo.total; }\n        if (player.strangeness[1][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[1]; }\n        if (player.inflation.vacuum && player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[1].reward[0]; }\n        if (player.challenges.active === 0) { multiplier /= 4; }\n        effectsCache.microworld = multiplier;\n    },\n    /** Preons, true vacuum only, visual will assign effect */\n    S1Build1: (noHardcap = false, visual = false): number => {\n        const structure = player.buildings[1][1];\n\n        const laterPreons = calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3();\n        let multiplier = 6e-4 * effectsCache.microworld * laterPreons;\n        const preonsExcess = new Overlimit(structure.current).minus(structure.true);\n        if (preonsExcess.moreThan('1')) {\n            multiplier *= preonsExcess.power(0.11).toNumber() + structure.true;\n        } else { multiplier *= structure.current.toNumber(); }\n        if (player.upgrades[1][7] === 1) { multiplier *= calculateEffects.S1Upgrade7(true) ** Math.min(structure.true, 1001); }\n        if (!noHardcap) {\n            const preonCap = calculateEffects.preonsHardcap(laterPreons);\n            if (multiplier > preonCap) { multiplier = preonCap; }\n        }\n        if (visual) { global.buildingsInfo.producing[1][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Quarks, true vacuum only */\n    S1Build2: (): Overlimit => global.buildingsInfo.producing[1][2].setValue(0.4 * effectsCache.microworld).multiply(player.buildings[1][2].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][2].true)),\n    /** Particles */\n    S1Build3: (): Overlimit => {\n        const index = player.inflation.vacuum ? 3 : 1;\n\n        let multiplier = (player.inflation.vacuum ? 0.2 : 1.6) * effectsCache.microworld;\n        if (player.upgrades[1][0] === 1) { multiplier *= 8; }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(player.buildings[1][index].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][index].true));\n    },\n    /** Atoms */\n    S1Build4: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const index = vacuum ? 4 : 2;\n\n        let multiplier = (vacuum ? 0.8 : 0.4) * effectsCache.microworld;\n        if (player.upgrades[1][3] === 1) { multiplier *= vacuum ? 6 : 4; }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(player.buildings[1][index].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][index].true));\n    },\n    /** Molecules */\n    S1Build5: (): Overlimit => {\n        const b5 = player.inflation.vacuum ? 5 : 3;\n\n        let multiplier = 0.2 * effectsCache.microworld;\n        if (player.upgrades[1][4] === 1) { multiplier *= 4; }\n        return global.buildingsInfo.producing[1][b5].setValue(multiplier).multiply(player.buildings[1][b5].current, new Overlimit(effectsCache.S1Upgrade7).power(player.buildings[1][b5].true));\n    },\n    /* Tritium */\n    S1Build6: (): Overlimit => {\n        let multiplier = (calculateEffects.S1Research2() ** player.researches[1][2]) * (calculateEffects.S1Research5() ** player.researches[1][5]);\n        if (player.upgrades[1][9] === 1) { multiplier *= calculateEffects.S1Upgrade9(); }\n        effectsCache.tritium.setValue(assignBuildingsProduction.S1Build5()).plus('1').log(calculateEffects.S1Extra1()).multiply(multiplier);\n        if (player.inflation.vacuum) { return effectsCache.tritium.multiply(assignBuildingsProduction.S2Build1()); }\n        return effectsCache.tritium;\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S2Levels: (reset = null as boolean | null) => {\n        const info = global.vaporizationInfo;\n        if (reset !== null) {\n            info.S2Extra1 = 0;\n            info.S2Research1 = 0;\n            info.S2Research0 = 0;\n            if (!reset) { return; }\n        }\n        const totalDrops = player.buildings[2][1].total.toNumber(); //Infinity is fine here\n        if (info.S2Extra1 !== player.researchesExtra[2][1]) { info.S2Extra1 = Math.min(player.researchesExtra[2][1], logAny(totalDrops * 9.99e-10 + 1, 1e3)); }\n        if (info.S2Research1 !== player.researches[2][1]) { info.S2Research1 = Math.min(player.researches[2][1], logAny(totalDrops / 100 + 1, 5)); } //Formula is: logAny(totalDrops * (scaling - 1) / startCost + 1, scaling)'\n        if (info.S2Research0 !== player.researches[2][0]) { info.S2Research0 = Math.min(player.researches[2][0], Math.max(logAny(totalDrops / 10, 1.366) + 1, logAny(totalDrops * 0.0366 + 1, 1.366))); }\n    },\n    S2FreeBuilds: () => {\n        const buildings = player.buildings[2];\n        const upgrades = player.upgrades[2];\n\n        let water5 = buildings[5].true;\n        let water4 = buildings[4].true;\n        let water3 = buildings[3].true;\n        let water2 = buildings[2].true;\n        if (upgrades[8] === 1) { water5 += buildings[6].true; }\n        if (upgrades[7] === 1) { water4 += water5; }\n        if (upgrades[6] === 1) { water3 += water4 * (1 + player.researches[2][5]); }\n        if (upgrades[5] === 1) { water2 += water3 * (1 + player.researches[2][4]); }\n        buildings[5].current.setValue(water5);\n        buildings[4].current.setValue(water4);\n        buildings[3].current.setValue(water3);\n        buildings[2].current.setValue(water2);\n    },\n    /** Drops */\n    S2Build1: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const structure = player.buildings[2][1];\n\n        const multiplierList = [structure.current];\n        if (player.challenges.active === 0) {\n            multiplierList[0] = new Overlimit(structure.current).min(1);\n        } else if (vacuum) {\n            const excess = new Overlimit(structure.current).minus(structure.true);\n            if (excess.moreThan('1')) { multiplierList[0] = excess.power(0.2).plus(structure.true); }\n        }\n        if (player.upgrades[2][0] === 1) { multiplierList.push(new Overlimit(vacuum ? '1.02' : '1.04').power(structure.true)); }\n        global.buildingsInfo.producing[2][1].setValue((vacuum ? 2 : 8e-4) * (3 ** global.vaporizationInfo.S2Research0) * (2 ** player.strangeness[2][0])).multiply(...multiplierList);\n        if (vacuum) { return global.buildingsInfo.producing[2][1].max('1'); }\n        return global.buildingsInfo.producing[2][1];\n    },\n    /** Puddles, visual will only assign Ponds and above */\n    S2Build2: (visual = false): Overlimit => {\n        const producings = global.buildingsInfo.producing[2];\n        const structures = player.buildings[2];\n        if (!visual && structures[2].true < 1) {\n            const rain = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n            return producings[2].setValue((rain - 1) * calculateEffects.S2Extra2(rain));\n        }\n        const rain = calculateEffects.S2Extra1(global.vaporizationInfo.S2Extra1);\n        const flow = 1.24 ** player.strangeness[2][7];\n\n        const producing6 = structures[6].true < 1 ? 1 : (player.upgrades[2][8] === 1 ? 1.1 : 1.08) ** structures[6].true * flow;\n        if (visual) { producings[6].setValue(producing6); }\n\n        const producing5 = Math.max(2 * structures[5].current.toNumber() * calculateEffects.S2Extra2(rain) * flow, 1);\n        if (visual) { producings[5].setValue(producing5); }\n\n        const producing4 = Math.max(2 * structures[4].current.toNumber() * flow, 1);\n        if (visual) { producings[4].setValue(producing4); }\n\n        const producing3 = Math.max(2 * structures[3].current.toNumber() * flow, 1);\n        if (visual) { return producings[3].setValue(producing3); }\n\n        const multiplierList = [structures[2].current, calculateEffects.clouds()];\n        let multiplier = (player.challenges.active === 0 ? 6e-4 : 4.8) * producing3 * producing4 * producing5 * producing6 * effectsCache.S2Upgrade3 * effectsCache.S2Upgrade4 * (2 ** global.vaporizationInfo.S2Research1) * rain * ((player.inflation.vacuum ? 1.8 : 1.6) ** player.strangeness[2][1]);\n        if (player.upgrades[2][1] === 1) { multiplierList.push(calculateEffects.S2Upgrade1()); }\n        if (player.inflation.vacuum) {\n            multiplier *= calculateEffects.S3Extra4();\n            if (player.elements[1] >= 1) { multiplier *= 2; }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[2].reward[1]; }\n            if (player.strangeness[5][10] >= 2) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n        }\n        if (player.strangeness[2][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[2]; }\n        return producings[2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Have to be after auto Upgrades, visual will only assign subsatellites */\n    stage3Cache: (visual = false) => {\n        const producing5 = 1.1 ** player.buildings[3][5].true;\n        if (visual) {\n            global.buildingsInfo.producing[3][5].setValue(producing5);\n            return;\n        }\n        effectsCache.S3Strange1 = (player.inflation.vacuum ? 1.48 : 1.6) ** player.strangeness[3][1];\n\n        const producing4 = (player.upgrades[3][12] === 1 ? 1.14 : 1.1) ** player.buildings[3][4].true * producing5;\n        global.buildingsInfo.producing[3][4].setValue(producing4);\n        effectsCache.S3Strange3 = producing4 ** (player.inflation.vacuum ? 0.1 : 0.2);\n    },\n    /** Cosmic dust and related softcap, visual will assign effect */\n    S3Build1: (noHardcap = false, visual = false): number => {\n        const researchesS3 = player.researches[3];\n        const upgradesS3 = player.upgrades[3];\n        const vacuum = player.inflation.vacuum;\n\n        let multiplier = (vacuum ? 2 : 8e-20) * player.buildings[3][1].current.toNumber() * (3 ** researchesS3[0]) * (2 ** researchesS3[3]) * (3 ** researchesS3[5]) * (1.11 ** player.researchesExtra[3][0]) * (calculateEffects.S3Extra1() ** global.accretionInfo.effective) * (1.8 ** player.strangeness[3][0]);\n        if (vacuum) {\n            multiplier *= calculateEffects.submersion();\n            if (player.elements[4] >= 1) { multiplier *= 1.4; }\n            if (player.elements[14] >= 1) { multiplier *= 1.4; }\n            if (player.strangeness[5][10] >= 3) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[3].reward[0]; }\n        }\n        if (upgradesS3[0] === 1) { multiplier *= calculateEffects.S3Upgrade0() ** player.buildings[3][1].true; }\n        if (upgradesS3[1] === 1) { multiplier *= calculateEffects.S3Upgrade1(); }\n        if (upgradesS3[2] === 1) { multiplier *= 2; }\n        if (upgradesS3[5] === 1) { multiplier *= 3; }\n        if (upgradesS3[6] === 1) { multiplier *= 2 * 1.5 ** researchesS3[7]; }\n        if (upgradesS3[9] === 1) { multiplier *= 2; }\n        if (upgradesS3[10] === 1) { multiplier *= 8 * 2 ** researchesS3[8]; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        if (player.challenges.active === 0) {\n            global.accretionInfo.dustSoft = player.accretion.rank >= 5 ? 0.8 : 0.9;\n        } else if (player.accretion.rank >= 5) {\n            global.accretionInfo.dustSoft = vacuum || multiplier > 1 ? 0.9 : 1.1;\n        } else { global.accretionInfo.dustSoft = 1; }\n        multiplier **= global.accretionInfo.dustSoft;\n        if (vacuum) {\n            if (player.researchesExtra[3][5] >= 2) {\n                multiplier *= calculateEffects.dustDelay();\n            } else if (!noHardcap && player.researchesExtra[3][5] < 1) {\n                const dustCap = calculateEffects.dustHardcap();\n                if (multiplier > dustCap) { multiplier = dustCap; }\n            }\n            if (multiplier < 1) { multiplier = 1; }\n        }\n        if (visual) { global.buildingsInfo.producing[3][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Planetesimals, visual will assign effect */\n    S3Build2: (visual = false): number => {\n        let multiplier = player.buildings[3][2].current.toNumber() * (3 ** player.researches[3][2]) * calculateEffects.S3Research6() * effectsCache.S3Strange1;\n        if (player.upgrades[3][3] === 1) { multiplier *= calculateEffects.S3Upgrade3() ** player.buildings[3][2].true; }\n        if (player.upgrades[3][4] === 1) { multiplier *= 3; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        if (visual) { global.buildingsInfo.producing[3][2].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Protoplanets, visual will assign effect */\n    S3Build3: (visual = false): number => {\n        let multiplier = 0.4 * player.buildings[3][3].current.toNumber() * global.buildingsInfo.producing[3][4].toNumber() * effectsCache.S3Strange1;\n        if (player.researchesExtra[3][2] >= 1) { multiplier *= 2; }\n        if (player.upgrades[3][7] === 1) { multiplier *= 1.02 ** player.buildings[3][3].true; }\n        if (visual) { global.buildingsInfo.producing[3][3].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Have to be after auto Upgrades */\n    stage4Cache: () => {\n        effectsCache.mass = calculateEffects.mass();\n        effectsCache.star1 = calculateEffects.star[1]();\n        effectsCache.star2 = calculateEffects.star[2]();\n\n        let multiplier = calculateEffects.S4Research0() * effectsCache.mass * effectsCache.star1 * calculateEffects.S4Research4() * (1.6 ** player.strangeness[4][0]);\n        if (player.elements[4] >= 1) { multiplier *= 1.4; }\n        if (player.elements[14] >= 1) { multiplier *= 1.4; }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[2][3] >= 1) { multiplier *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][3] >= 3) {\n                multiplier *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][3] === 2) { multiplier *= effectsCache.S2Upgrade4 ** 0.5; }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[4].reward[0]; }\n        }\n        if (player.strangeness[4][7] >= 1) { multiplier *= global.strangeInfo.stageBoost[4]; }\n        if (player.challenges.active === 0) { multiplier /= 8000; }\n        effectsCache.interstellar = multiplier;\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S4Levels: (reset = null as boolean | null) => {\n        if (reset !== null) {\n            global.mergeInfo.S5Extra2 = 0;\n            if (!reset) { return; }\n        }\n        if (global.mergeInfo.S5Extra2 !== player.researchesExtra[5][2]) { global.mergeInfo.S5Extra2 = Math.min(player.researchesExtra[5][2], Math.max(new Overlimit(player.buildings[4][0].total).divide('1e280').log(1e30).toNumber(), 0)); }\n    },\n    /** Brown dwarfs */\n    S4Build1: (): Overlimit => {\n        const multiplierList = [player.buildings[4][1].current, calculateEffects.S4Shared()];\n        let multiplier = 40 * effectsCache.interstellar;\n        if (player.elements[1] >= 1) { multiplier *= 2; }\n        if (player.elements[19] >= 1 && effectsCache.mass > 1) { multiplier *= effectsCache.mass; }\n        const level = player.inflation.vacuum ? 4 : 3;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][1].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Main sequence */\n    S4Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[4][2].current, calculateEffects.S4Shared()];\n        let multiplier = 1200 * effectsCache.interstellar * calculateEffects.star[0]() * (2 ** player.researches[4][3]);\n        const level = player.inflation.vacuum ? 3 : 2;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Red supergiants */\n    S4Build3: (): Overlimit => {\n        const multiplierList = [player.buildings[4][3].current, calculateEffects.S4Shared()];\n        let multiplier = 6e7 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 2 : 1;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][3].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Blue hypergiants */\n    S4Build4: (): Overlimit => {\n        const multiplierList = [player.buildings[4][4].current, calculateEffects.S4Shared()];\n        let multiplier = 6e9 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 1 : 0;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][4].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Quasi-stars */\n    S4Build5: (): Overlimit => {\n        if (player.challenges.active === 0) { return global.buildingsInfo.producing[4][5].setValue('0'); }\n        let multiplier = 2e11 * effectsCache.interstellar;\n        if (player.elements[33] >= 1) { multiplier *= effectsCache.star2; }\n        return global.buildingsInfo.producing[4][5].setValue(multiplier).multiply(player.buildings[4][5].current, calculateEffects.S4Shared(), global.buildingsInfo.producing[5][2]);\n    },\n    /** All Intergalactic Structures productions, have to be after auto Galaxies */\n    stage5Cache: () => {\n        const vacuum = player.inflation.vacuum;\n        const production = global.buildingsInfo.producing[5][3];\n        const moreStars = 10 ** player.researches[5][4];\n\n        effectsCache.S5Upgrade2 = calculateEffects.S5Upgrade2();\n        let base = (vacuum ? 2 : 6) + effectsCache.S5Upgrade2;\n        if (vacuum && player.tree[0][4] >= 1) { base += global.milestonesInfo[5].reward[1]; }\n        effectsCache.galaxyBase = base;\n\n        production.setValue(base).power(player.buildings[5][3].true);\n        if (global.mergeInfo.galaxies > 0) {\n            let multiplier3 = (global.mergeInfo.galaxies + 1) / (player.buildings[5][3].true + 1);\n            if (vacuum) { multiplier3 *= calculateEffects.reward[0](); }\n            if (player.upgrades[5][6] === 1) { multiplier3 *= 100 * moreStars; }\n            production.multiply(multiplier3);\n        }\n\n        let globalMult = (vacuum ? 1.4 : 1.6) ** player.strangeness[5][0];\n        if (vacuum && player.tree[0][4] >= 1) { globalMult *= global.milestonesInfo[5].reward[0]; }\n\n        let multiplier2 = 2 * (2 ** player.researches[5][1]) * globalMult;\n        if (player.upgrades[5][1] === 1) { multiplier2 *= calculateEffects.S5Upgrade1(); }\n        if (player.upgrades[5][5] === 1) { multiplier2 *= 1000 * moreStars; }\n        if (vacuum && player.upgrades[3][13] === 1) { multiplier2 *= (calculateEffects.S3Research6() / 2e5) ** 0.5 + 1; }\n        global.buildingsInfo.producing[5][2].setValue(multiplier2).multiply(player.buildings[5][2].current, production, new Overlimit(calculateEffects.S5Research3()).power(player.buildings[5][2].true)).max(2 ** player.researches[5][1]);\n\n        let multiplier1 = 6 * (2 ** player.researches[5][0]) * globalMult;\n        if (player.upgrades[5][0] === 1) { multiplier1 *= calculateEffects.S5Upgrade0(); }\n        if (player.upgrades[5][4] === 1) { multiplier1 *= 1000 * moreStars; }\n        if (vacuum) {\n            if (player.researchesExtra[2][4] >= 1) { multiplier1 *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][4] >= 3) {\n                multiplier1 *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][4] === 2) { multiplier1 *= effectsCache.S2Upgrade4 ** 0.5; }\n        }\n        global.buildingsInfo.producing[5][1].setValue(multiplier1).multiply(player.buildings[5][1].current, production, new Overlimit(calculateEffects.S5Research2()).power(player.buildings[5][1].true));\n    },\n    /** Universes, visual will assign effect */\n    S6Build1: (visual = false): number => {\n        const selfmade = player.buildings[6][1].true;\n        const current = player.buildings[6][1].current.toNumber();\n        const multiplier = selfmade < 1 ? current : (selfmade ** (selfmade / 4) * (current + 1) / (selfmade + 1));\n        if (visual) { global.buildingsInfo.producing[6][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Quarks */\n    strange0: () => {\n        const vacuum = player.inflation.vacuum;\n        const stageBoost = global.strangeInfo.stageBoost;\n        const strangeQuarks = player.strange[0].current + 1;\n\n        stageBoost[1] = strangeQuarks ** (vacuum ? 0.26 : 0.22);\n        stageBoost[2] = strangeQuarks ** (vacuum ? 0.22 : 0.18);\n        stageBoost[3] = strangeQuarks ** (vacuum ? 0.68 : 0.76);\n        stageBoost[4] = strangeQuarks ** (player.elements[26] >= 1 ? 0.32 : 0.16);\n        stageBoost[5] = strangeQuarks ** 0.06;\n    },\n    /** Strangelets */\n    strange1: () => {\n        const information = global.strangeInfo.strangeletsInfo;\n        const strangelets = player.strange[1].current;\n\n        information[0] = (Math.log2(strangelets + 2) - 1) / 100;\n        information[1] = strangelets ** 0.4 / 80 + 1;\n    }\n};\n\nexport const assignResetInformation = {\n    /** And energyType, energyStage */\n    trueEnergy: () => {\n        const energyType = player.inflation.vacuum ? [[],\n            [0, 1, 3, 5, 10, 20],\n            [0, 20, 30, 40, 50, 60, 120],\n            [0, 20, 40, 60, 120, 160],\n            [0, 80, 160, 240, 320, 400],\n            [0, 400, 400, 2000]\n        ] : [[], [0, 1, 5, 20], [], [], [], []];\n        if (player.inflation.vacuum) {\n            energyType[1][1] += player.strangeness[1][7] * 2;\n            if (player.strangeness[5][10] >= 1) { energyType[5][3] *= 5; }\n            if (player.challenges.active === 0) {\n                for (let s = 2; s < energyType.length; s++) {\n                    for (let i = 1; i < energyType[s].length; i++) {\n                        energyType[s][i] /= (s >= 4 ? 4 : 2);\n                    }\n                }\n            }\n        }\n\n        let energyTrue = 0;\n        for (let s = 1; s < energyType.length; s++) {\n            let add = 0;\n            for (let i = 1; i < energyType[s].length; i++) {\n                add += energyType[s][i] * player.buildings[s][i as 1].true;\n            }\n            global.dischargeInfo.energyStage[s] = add;\n            energyTrue += add;\n        }\n        global.dischargeInfo.energyType = energyType;\n        global.dischargeInfo.energyTrue = energyTrue;\n    },\n    newClouds: (): Overlimit => {\n        const softcap = calculateEffects.cloudsGain();\n        return global.vaporizationInfo.get.setValue(player.vaporization.clouds).power(1 / softcap).plus(\n            new Overlimit(player.buildings[2][1][player.researchesExtra[2][0] >= 1 ? 'total' : 'current']).divide(calculateEffects.S2Upgrade2())\n        ).power(softcap).minus(player.vaporization.clouds);\n    },\n    maxRank: () => {\n        if (player.inflation.vacuum) {\n            global.accretionInfo.maxRank = player.strangeness[3][9] >= 1 ? 7 : 6;\n        } else {\n            global.accretionInfo.maxRank = player.stage.true >= 4 || (player.stage.true === 3 && player.event) ? 5 : 4;\n        }\n    },\n    /** blackHoles is cached effect (because I am too lazy to work around it) */\n    solarHardcap: (blackHoles = effectsCache.star2) => {\n        effectsCache.S3SolarDelay = calculateEffects.massGain();\n        let effectS1 = blackHoles;\n        if (player.elements[10] >= 1) { effectS1 *= 2; }\n        if (player.researchesExtra[4][1] >= 1) { effectS1 *= calculateEffects.S4Extra1(); }\n        effectsCache.S1SolarDelay = effectS1;\n\n        global.collapseInfo.solarCap = 0.01235 * effectsCache.S3SolarDelay * effectS1;\n        if (player.strangeness[5][7] >= 1) { global.collapseInfo.solarCap *= global.strangeInfo.stageBoost[5]; }\n    },\n    /** Have to be after assignResetInformation.newMass() */\n    timeUntil: (firstCall = true) => {\n        if (player.inflation.vacuum) {\n            if (firstCall) {\n                assignBuildingsProduction.stage3Cache();\n                assignBuildingsProduction.stage1Cache();\n            }\n            global.collapseInfo.timeUntil = (global.collapseInfo.solarCap / 8.96499278339628e-67 - player.buildings[1][0].current.toNumber()) / assignBuildingsProduction.S1Build1() / global.inflationInfo.globalSpeed;\n            if (isNaN(global.collapseInfo.timeUntil)) { global.collapseInfo.timeUntil = Infinity; }\n        } else { global.collapseInfo.timeUntil = 0; }\n    },\n    newMass: () => {\n        if (player.inflation.vacuum) {\n            assignResetInformation.solarHardcap();\n            global.collapseInfo.newMass = Math.min(player.buildings[1][0].current.toNumber() * 8.96499278339628e-67, global.collapseInfo.solarCap); //1.78266192e-33 / 1.98847e33\n        } else { global.collapseInfo.newMass = calculateEffects.massGain(); }\n    },\n    newStars: (reset = false) => {\n        const starCheck = global.collapseInfo.starCheck;\n        if (reset) {\n            starCheck[0] = 0;\n            starCheck[1] = 0;\n            starCheck[2] = 0;\n            return;\n        }\n        const building = player.buildings[4];\n        const stars = player.collapse.stars;\n        starCheck[0] = building[2].trueTotal.moreThan('0') ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 10) - stars[0], 0) : 0;\n        starCheck[1] = Math.max(building[3].true - stars[1], 0);\n        starCheck[2] = Math.max(building[4].true + (building[5].true * player.researches[4][5]) - stars[2], 0);\n    },\n    /** Returns Groups Galaxy requirement */\n    mergeReward: () => {\n        const requirement = 50 - calculateEffects.S5Extra4();\n\n        global.mergeInfo.checkReward[0] = player.researchesExtra[5][1] >= 2 ?\n            Math.max(Math.floor(global.mergeInfo.galaxies / requirement) - player.merge.rewards[0], 0) :\n            player.researchesExtra[5][1] >= 1 ? Math.floor(player.buildings[5][3].true / requirement) : 0;\n        return requirement;\n    },\n    /** Interstellar only, also assigns related cache */\n    quarksGain: () => {\n        let multiplier = player.buildings[5][3].current.toNumber() + 1;\n        if (player.inflation.vacuum) {\n            multiplier *= calculateEffects.S5Extra2(player.researchesExtra[5][2]);\n            if (player.strangeness[2][9] >= 1) { multiplier *= calculateEffects.S2Strange9(); }\n        }\n        effectsCache.interstellarQuarks = multiplier;\n\n        effectsCache.element26 = calculateEffects.element26();\n        global.strangeInfo.quarksGain = player.stage.true >= 6 || player.strange[0].total >= 1 ? calculateEffects.strangeGain(true) : 1;\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex: number, howMany = player.toggles.shop.input, auto = false) => {\n    if (!checkBuilding(index, stageIndex) || (auto ? player.ASR[stageIndex] < index : global.offline.active)) { return; }\n    const building = player.buildings[stageIndex][index as 1];\n\n    let currency; //Readonly\n    let free = false;\n    let multi = true;\n    let special = '' as '' | 'Mass' | 'Galaxy' | 'Universe';\n    if (stageIndex === 1) {\n        currency = player.buildings[1][index - 1].current;\n        if (index === 1 && player.inflation.vacuum) {\n            free = player.strangeness[1][8] >= 1 && (player.researchesExtra[1][2] >= 1 || player.challenges.supervoid[1] >= 2);\n        }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][index === 1 ? 0 : 1].current;\n    } else if (stageIndex === 3) {\n        if (player.inflation.vacuum) { special = 'Mass'; }\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = calculateEffects.mergeScore();\n        special = 'Universe';\n        multi = false;\n    } else {\n        if (stageIndex === 5 && index === 3) {\n            special = 'Galaxy';\n            currency = player.collapse.mass;\n            multi = false;\n        } else { currency = player.buildings[4][0].current; }\n    }\n\n    const budget = new Overlimit(currency);\n    if (auto && building.true >= 1 && !free && multi) {\n        if (special === 'Mass' && global.accretionInfo.disableAuto) {\n            if (player.accretion.rank >= 6) {\n                budget.minus(global.collapseInfo.solarCap * 1.98847e33);\n            } else if (player.strangeness[3][4] < 2 && player.challenges.supervoid[1] >= 2) {\n                budget.minus(global.accretionInfo.rankCost[player.accretion.rank]);\n            } else {\n                budget.divide(player.toggles.shop.wait[stageIndex]);\n            }\n        } else {\n            budget.divide(player.toggles.shop.wait[stageIndex]);\n        }\n    }\n\n    const total = calculateBuildingsCost(index, stageIndex);\n    if (total.moreThan(budget)) { return; }\n\n    let afford = 1;\n    if (howMany !== 1 && multi) {\n        const scaling = global.buildingsInfo.increase[stageIndex][index]; //Must be >1\n        if (free) {\n            afford = Math.floor(budget.divide(total).log(scaling).toNumber()) + 1;\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n        } else {\n            afford = Math.floor(budget.multiply(scaling - 1).divide(total).plus('1').log(scaling).toNumber());\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n            if (afford > 1) { total.multiply(new Overlimit(scaling).power(afford).minus('1').divide(scaling - 1)); }\n        }\n\n        if (!isFinite(afford)) {\n            errorNotify(`Error encountered, couldn't create ${afford} of ${global.buildingsInfo.name[stageIndex][index]}`);\n            return;\n        }\n    }\n    building.true += afford;\n    building.current.plus(afford);\n    building.total.plus(afford);\n    building.trueTotal.plus(afford);\n\n    if (typeof currency === 'object') {\n        if (!free) {\n            currency.minus(total);\n            if (special === 'Mass') {\n                player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33');\n            } else if (player.inflation.vacuum && index === 1) {\n                if (stageIndex === 1) {\n                    player.buildings[3][0].current.setValue(currency).multiply('1.78266192e-33');\n                } else if (stageIndex === 2) {\n                    player.buildings[1][5].current.setValue(currency).multiply('6.02214076e23');\n                }\n            }\n        }\n\n        if (player.inflation.vacuum || stageIndex === 1) { addEnergy(afford, index, stageIndex); }\n        if (stageIndex === 1) { //True vacuum only\n            if (index === 5 && player.upgrades[1][8] === 0) { player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23'); }\n        } else if (stageIndex === 2) {\n            if (index === 1) {\n                if (player.buildings[2][2].true < 1) { assignBuildingsProduction.S2Levels(); }\n            } else { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 3) {\n            if (index >= 4) {\n                assignBuildingsProduction.stage3Cache();\n                awardMilestone(1, 3);\n            }\n        } else if (stageIndex === 4) {\n            global.collapseInfo.trueStars += afford;\n        }\n\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Made ${format(afford)} '${global.buildingsInfo.name[stageIndex][index]}'`; }\n        }\n    } else if (special === 'Galaxy') {\n        //global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n        calculateMaxLevel(2, 4, 'researches');\n        calculateMaxLevel(5, 4, 'researches');\n        awardVoidReward(5);\n        awardMilestone(1, 5);\n        addIntoLog('Galaxy reset');\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Galaxy reset to gain ${format(afford)} new 'Galaxies'`; }\n        }\n    } else if (special === 'Universe') {\n        if (player.stage.true < 7) {\n            player.stage.true = 7;\n            player.event = false;\n            visualTrueStageUnlocks();\n            playEvent(9);\n        }\n        if ((player.toggles.normal[0] && global.tab !== 'inflation') || player.stage.active < 6) { setActiveStage(1); }\n        const realTime = player.time.vacuum;\n        const income = building.true;\n        player.cosmon[0].current += income;\n        player.cosmon[0].total += income;\n        player.inflation.vacuum = false;\n        player.inflation.resets++;\n        player.challenges.active = null;\n        player.clone = {};\n        prepareVacuum(false);\n        resetVacuum(true);\n        addIntoLog('Universe reset');\n\n        const history = player.history.vacuum;\n        const storage = global.historyStorage.vacuum;\n        storage.unshift([realTime, true, income]);\n        if (storage.length > 100) { storage.length = 100; }\n        if (income / realTime > history.best[2] / history.best[0]) {\n            history.best = [realTime, true, income];\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Universe reset to gain ${format(afford)} new 'Universes'`; }\n    }\n};\n\n/** Increase is how many new Structures have been gained */\nexport const addEnergy = (increase: number, index: number, stage: number) => {\n    const { discharge } = player;\n    const { dischargeInfo } = global;\n\n    const add = dischargeInfo.energyType[stage][index] * increase;\n    dischargeInfo.energyStage[stage] += add;\n    dischargeInfo.energyTrue += add;\n    discharge.energy += add;\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): Overlimit => {\n    const scaling = global.buildingsInfo.increase[stageIndex];\n    let firstCost = global.buildingsInfo.startCost[stageIndex][index];\n    if (stageIndex === 1) {\n        scaling[index] = (140 - effectsCache.S1Upgrade6) / 100;\n        if (index === 1) {\n            if (!player.inflation.vacuum && player.upgrades[1][2] === 1) { firstCost /= 8; }\n        } else if (index === 3) {\n            if (player.upgrades[1][1] === 1) { firstCost /= 16; }\n        } else if (index === 4) {\n            if (player.upgrades[1][2] === 1) { firstCost /= 8; }\n            if (player.researchesExtra[1][0] >= 1) { firstCost /= 16; }\n        }\n    } else if (stageIndex === 3) {\n        if (player.strangeness[3][7] >= 1) { firstCost /= global.strangeInfo.stageBoost[3]; }\n        if (index === 4) {\n            scaling[4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        let increase = 125 + 15 * index;\n        if (player.elements[2] >= 1) { increase -= 10; }\n        if (player.elements[8] >= 1) { increase -= 5; }\n        scaling[index] = increase / 100;\n\n        firstCost /= 2 ** player.strangeness[4][1];\n        if (player.researchesExtra[4][3] >= 1) { firstCost /= effectsCache.star1; }\n        if (player.elements[13] >= 1) { firstCost /= 100; }\n    } else if (stageIndex === 5) {\n        if (index === 3) {\n            scaling[3] = player.elements[32] >= 1 ? 1.1 : 1.11;\n            if (player.challenges.active === 0) { scaling[3] += 0.05; }\n        }\n    }\n\n    return new Overlimit(scaling[index]).power(player.buildings[stageIndex][index as 1].true).multiply(firstCost);\n};\n\nconst gainBuildings = (get: number, stageIndex: number, time: number) => {\n    let stageGet = stageIndex;\n    const add = new Overlimit(time);\n    if (stageIndex === 1) {\n        if (!player.inflation.vacuum && get < 5) { get += 2; }\n        add.multiply(assignBuildingsProduction[`S1Build${get + 1}` as 'S1Build1']());\n        if (get === 5 && player.upgrades[1][8] !== 1) { return; }\n        if (!player.inflation.vacuum) { get -= 2; }\n    } else if (stageIndex === 5) {\n        add.multiply(global.buildingsInfo.producing[5][1]).divide(4 ** get);\n        stageGet = 4;\n        get++;\n    } else {\n        add.multiply(assignBuildingsProduction[`S${stageIndex}Build${get + 1}` as 'S2Build1']());\n        if (stageIndex === 4) { get = 0; }\n    }\n    if (!add.notEqual('0')) { return; }\n    if (!add.isFinite()) {\n        errorNotify(`Error encountered, couldn't gain ${add} of ${global.buildingsInfo.name[stageGet][get]}`);\n        return;\n    }\n\n    const building = player.buildings[stageGet][get];\n    building.current.plus(add);\n    building.total.plus(add);\n    building.trueTotal.plus(add);\n\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current.setValue(building.current).multiply('1.78266192e-33');\n                player.buildings[3][0].total.setValue(building.total).multiply('1.78266192e-33');\n                awardMilestone(0, 3);\n            } else if (get === 5) {\n                player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23');\n            }\n        }\n    } else if (stageIndex === 2) {\n        if (get === 1) {\n            assignBuildingsProduction.S2Levels();\n        }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //False vacuum only\n            if (player.accretion.rank < 5 && building.current.moreThan('1e30')) { building.current.setValue('1e30'); }\n            awardMilestone(0, 3);\n        }\n    }\n};\n\nconst gainStrange = (time: number) => {\n    const strange = player.strange[0];\n    const add = global.strangeInfo.strangeletsInfo[0] * (global.strangeInfo.quarksGain / player.time.stage) * time;\n    if (add === 0) { return; }\n    if (!isFinite(add)) {\n        errorNotify(`Error encountered, couldn't gain ${add} of ${global.strangeInfo.name[0]}`);\n        return;\n    }\n    strange.current += add;\n    strange.total += add;\n    assignBuildingsProduction.strange0();\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; } //Auto should had already checked\n\n    let free = false;\n    let currency: Overlimit; //Readonly\n    if (stageIndex === 1) {\n        currency = new Overlimit(player.discharge.energy);\n        if (player.inflation.vacuum) { free = player.accretion.rank >= 6 && player.strangeness[1][9] >= 1; }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][1].current;\n    } else if (stageIndex === 3) {\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = player.buildings[6][0].current;\n    } else {\n        currency = player.buildings[4][0].current;\n    }\n    if (currency.isNaN()) {\n        errorNotify(`Error encountered, prevented spending of NaN ${global.stageInfo.costName[stageIndex]}`);\n        return false;\n    }\n\n    if (type === 'upgrades') {\n        if (player.upgrades[stageIndex][upgrade] >= 1) { return false; }\n\n        const pointer = global.upgradesInfo[stageIndex];\n        const cost = pointer.startCost[upgrade];\n        if (currency.lessThan(cost)) { return false; }\n\n        player.upgrades[stageIndex][upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (stageIndex === 2) {\n            if (upgrade === 3) {\n                effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3();\n            } else if (upgrade === 4) {\n                effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4();\n            } else if (upgrade >= 5 /*&& upgrade < 9*/) { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 4 && upgrade === 1 && global.tab === 'upgrade') { switchTab(); }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex];\n\n        if (level[upgrade] >= pointer.max[upgrade]) { return false; }\n        let cost: number | Overlimit = pointer.cost[upgrade] as number;\n        if (currency.lessThan(cost)) { return false; }\n\n        let newLevels = 1;\n        if ((auto || player.toggles.max[0]) && pointer.max[upgrade] > 1) {\n            const scaling = pointer.scaling[upgrade] as number; //Must be >1 (>0 for Stage 1)\n            if (stageIndex === 1) {\n                if (free) {\n                    newLevels = Math.min(Math.floor((currency.toNumber() - cost) / scaling + 1), pointer.max[upgrade] - level[upgrade]);\n                } else {\n                    const simplify = cost - scaling / 2;\n                    newLevels = Math.min(Math.floor(((simplify ** 2 + 2 * scaling * currency.toNumber()) ** 0.5 - simplify) / scaling), pointer.max[upgrade] - level[upgrade]);\n                    if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                }\n            } else {\n                const minusOne = typeof scaling === 'string' ? scaling : scaling - 1;\n                newLevels = Math.min(Math.floor(new Overlimit(currency).multiply(minusOne).divide(cost).plus('1').log(scaling).toNumber()), pointer.max[upgrade] - level[upgrade]);\n                if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(minusOne).multiply(cost); }\n            }\n        }\n\n        level[upgrade] += newLevels;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        calculateResearchCost(upgrade, stageIndex, type);\n        if (type === 'researches') {\n            if (stageIndex === 1) {\n                if (upgrade === 4) {\n                    global.dischargeInfo.base = calculateEffects.dischargeBase();\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 0 || upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                } else if (upgrade === 2) {\n                    if (player.upgrades[2][3] === 1) { effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3(); }\n                } else if (upgrade === 3) {\n                    if (player.upgrades[2][4] === 1) { effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4(); }\n                } else if (upgrade >= 4 /*&& upgrade < 7*/) {\n                    assignBuildingsProduction.S2FreeBuilds();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(0, 4, 'researches');\n                    if (auto) { buyUpgrades(0, 4, 'researches', true); }\n                    autoResearchesAddOne('researches', 4, 0);\n                }\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1) {\n                if (upgrade === 2) {\n                    let update = false;\n                    if (player.stage.current < 4) {\n                        player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3;\n                        if (player.toggles.normal[0]) {\n                            if (player.stage.active < 4) {\n                                setActiveStage(player.stage.current);\n                                update = true;\n                            } else if (global.trueActive < 4) {\n                                global.trueActive = player.stage.current;\n                            }\n                        }\n                    }\n                    stageUpdate(update, true);\n                    awardVoidReward(1);\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(1, 4, 'researches', true);\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${pointer.name[upgrade]}' ${type === 'researches' ? 'Stage' : ['', 'Energy', 'Cloud', 'Rank', 'Collapse', 'Galaxy'][player.stage.active]} Research`; }\n    } else if (type === 'researchesAuto' || type === 'ASR') {\n        if (type === 'ASR') { upgrade = stageIndex; }\n        const pointer = global[`${type}Info`];\n        const level = player[type];\n\n        let effective = level[upgrade];\n        if (effective >= pointer.max[upgrade]) { return false; }\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                if (player.strangeness[4][6] >= 1) { effective--; }\n            } else if (upgrade === 2) {\n                if (player.strangeness[1][4] >= 1) { effective--; }\n                if (player.strangeness[2][4] >= 1) { effective--; }\n                if (player.strangeness[3][4] >= 1) { effective--; }\n                if (player.strangeness[4][4] >= 1) { effective--; }\n                if (player.strangeness[5][9] >= 1) { effective--; }\n            }\n        }\n        const cost = pointer.costRange[upgrade][Math.max(effective, 0)];\n        if (currency.lessThan(cost)) { return false; }\n\n        level[upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 2) {\n                if (player.inflation.vacuum) {\n                    if (level[upgrade] === 1 && player.strangeness[3][4] >= 1) { level[upgrade] = 2; }\n                    if (level[upgrade] === 2 && player.strangeness[2][4] >= 1) { level[upgrade] = 3; }\n                    if (level[upgrade] === 3 && player.strangeness[4][4] >= 1) { level[upgrade] = 4; }\n                    if (level[upgrade] === 4 && player.strangeness[5][9] >= 1) { level[upgrade] = 5; }\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for '${type === 'ASR' ? pointer.name : pointer.name[upgrade]}' automatization Research`; }\n    } else if (type === 'elements') {\n        let level = player.elements[upgrade];\n        if (level >= 1) { return false; }\n\n        if (level === 0) {\n            const cost = global.elementsInfo.startCost[upgrade];\n            if (currency.lessThan(cost)) { return false; }\n            /*if (!free) {*/ currency.minus(cost); //}\n        } else if (!auto) { return false; }\n        level = player.researchesAuto[1] >= 1 || level > 0 ? 1 : 0.5;\n        player.elements[upgrade] = level;\n\n        /* Special cases */\n        if (player.collapse.show < upgrade) { player.collapse.show = upgrade; }\n        if (level === 1) {\n            if (player.collapse.maxElement < upgrade) { player.collapse.maxElement = upgrade; }\n\n            if ([7, 16, 20, 25, 28, 31, 34].includes(upgrade)) {\n                calculateMaxLevel(1, 4, 'researches', true);\n            } else if (upgrade === 9 || upgrade === 17) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            } else if (upgrade === 11) {\n                calculateMaxLevel(2, 4, 'researches', true);\n            } else if (upgrade === 26) {\n                player.stage.current = 5;\n                if (player.stage.true < 5) {\n                    player.stage.true = 5;\n                    player.event = false;\n                    visualTrueStageUnlocks();\n                }\n                let update = false;\n                if (player.toggles.normal[0] && (player.strangeness[5][3] >= 1 || !player.inflation.vacuum)) {\n                    if (player.stage.active === 4) {\n                        setActiveStage(5);\n                        update = true;\n                    } else if (global.trueActive === 4) {\n                        global.trueActive = 5;\n                    }\n                }\n                stageUpdate(update, true);\n                assignBuildingsProduction.strange0();\n                awardVoidReward(4);\n            } else if (upgrade === 35) {\n                calculateMaxLevel(5, 4, 'researches', true);\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New Element '${global.elementsInfo.name[upgrade]}' ${player.elements[upgrade] >= 1 ? 'obtained' : 'awaiting activation'}`; }\n    }\n\n    if (!free) {\n        if (stageIndex === 1) {\n            player.discharge.energy = Math.round(currency.toNumber());\n        } else if (stageIndex === 2) {\n            const drops = player.buildings[2][1];\n            const old = drops.true;\n            if (player.buildings[2][2].true < 1 && currency.lessThan(old)) {\n                drops.true = Math.floor(currency.toNumber());\n                if (player.inflation.vacuum) {\n                    addEnergy(drops.true - old, 1, 2);\n                } else if (currency.lessOrEqual('0')) {\n                    player.buildings[2][0].current.max('2.7753108348135e-3');\n                }\n            }\n        } else if (stageIndex === 3) {\n            if (player.inflation.vacuum) { player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33'); }\n        }\n    }\n\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const buyStrangeness = (upgrade: number, stageIndex: number, type: 'strangeness' | 'inflations', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; }\n\n    if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        if (player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        if (player.strange[0].current < pointer.cost[upgrade]) { return false; }\n\n        player.strangeness[stageIndex][upgrade]++;\n        player.strange[0].current -= pointer.cost[upgrade];\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[3][4] < 1 ? 1 : player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] < 1) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] < 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 1 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[1] = global.ASRInfo.max[1]; }\n                player.ASR[1] = global.ASRInfo.max[1];\n            } else if (upgrade === 7) {\n                assignResetInformation.trueEnergy();\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                calculateMaxLevel(4, 2, 'researches', true);\n                calculateMaxLevel(5, 2, 'researches', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 2) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 2) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 2 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[2] = global.ASRInfo.max[2]; }\n                player.ASR[2] = global.ASRInfo.max[2];\n            } else if (upgrade === 8) {\n                calculateMaxLevel(2, 2, 'researches', true);\n                calculateMaxLevel(3, 2, 'researches', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 1) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 3 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[3] = global.ASRInfo.max[3]; }\n                player.ASR[3] = global.ASRInfo.max[3];\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[0] = Math.max(player.strangeness[3][6], player.clone.researchesAuto[0]); }\n                player.researchesAuto[0] = Math.max(player.strangeness[3][6], player.researchesAuto[0]);\n            } else if (upgrade === 9) {\n                calculateMaxLevel(2, 0, 'researchesAuto', true);\n                global.debug.rankUpdated = null;\n                assignResetInformation.maxRank();\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 3) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 3) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 4 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[4] = global.ASRInfo.max[4]; }\n                player.ASR[4] = global.ASRInfo.max[4];\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[1] = Math.max(player.strangeness[4][6], player.clone.researchesAuto[1]); }\n                player.researchesAuto[1] = Math.max(player.strangeness[4][6], player.researchesAuto[1]);\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 8) {\n                if (player.clone.depth === 'stage') { player.clone.elements[0] = 1; }\n                if (player.elements[0] < 1) { player.elements[0] = 1; }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 3) {\n                if (player.inflation.vacuum) { stageUpdate(false, true); }\n            } else if (upgrade === 4) {\n                if (player.strangeness[5][5] >= 1) {\n                    if (player.clone.depth === 'stage') { player.clone.ASR[5] = global.ASRInfo.max[5]; }\n                    player.ASR[5] = global.ASRInfo.max[5];\n                }\n            } else if (upgrade === 5) {\n                const newLevel = player.strangeness[5][4] >= 1 ? global.ASRInfo.max[5] : 2;\n                if (player.clone.depth === 'stage') { player.clone.ASR[5] = newLevel; }\n                player.ASR[5] = newLevel;\n            } else if (upgrade === 9) {\n                if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 4) { player.clone.researchesAuto[2] = 5; }\n                if (player.researchesAuto[2] === 4) { player.researchesAuto[2] = 5; }\n            } else if (upgrade === 10) {\n                assignResetInformation.trueEnergy();\n            }\n        }\n        assignBuildingsProduction.strange0();\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${player.strangeness[stageIndex][upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.strangeness[stageIndex][upgrade])} for '${pointer.name[upgrade]}' Strangeness from ${global.stageInfo.word[stageIndex]} section`; }\n    } else if (type === 'inflations') {\n        const pointer = global.treeInfo[stageIndex];\n        const currency = player.cosmon[stageIndex];\n\n        if (player.tree[stageIndex][upgrade] >= pointer.max[upgrade]) { return false; }\n        const cost = pointer.cost[upgrade];\n        if (currency.current < cost) { return false; }\n\n        player.tree[stageIndex][upgrade]++;\n        currency.current -= cost;\n\n        /* Special cases */\n        if (!auto && stageIndex === 0 && (getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') {\n            global.loadouts.input.push(upgrade);\n            loadoutsVisual(global.loadouts.input);\n        }\n        if (upgrade === 0) {\n            assignChallengeInformation();\n            for (let s = 1; s < 6; s++) {\n                for (let i = 0; i < playerStart.milestones[s].length; i++) {\n                    assignMilestoneInformation(i, s);\n                }\n            }\n        } else if (upgrade === 5) {\n            assignChallengeInformation();\n        }\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Strength of Inflation Research '${pointer.name[upgrade]}' increased ${player.tree[stageIndex][upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(player.tree[stageIndex][upgrade])}`; }\n    }\n\n    calculateResearchCost(upgrade, stageIndex, type);\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const loadoutsLoadAuto = () => {\n    const array = [];\n    const tree = player.tree[0];\n    for (let i = 0; i < tree.length; i++) {\n        for (let r = tree[i]; r > 0; r--) { array.push(i); }\n    }\n    global.loadouts.input = array;\n    loadoutsVisual(array);\n};\n/** Returns true if refund successfull or nothing to refund */\nexport const inflationRefund = async(noConfirmation = false, loadout = false): Promise<boolean> => {\n    if (global.offline.active) { return false; }\n    const tree = player.tree[0];\n    const cosmon = player.cosmon[0];\n    if (cosmon.current === cosmon.total && tree[0] < 1) { return true; }\n    const challenge = player.challenges.active;\n    if (!noConfirmation && !await Confirm(loadout ? 'Refund Inflations before loading this loadout?' :\n        `This will force a Stage reset${challenge !== null ? ' and restart current Challenge' : ''}, continue?`)) { return loadout; }\n\n    if (challenge !== null) {\n        player.challenges.active = null;\n        challengeReset(null, challenge);\n    }\n    stageFullReset();\n    if (challenge !== null) {\n        player.challenges.active = challenge;\n        challengeReset(challenge, null);\n    }\n\n    cosmon.current = cosmon.total;\n    for (let i = 0; i < playerStart.tree[0].length; i++) {\n        tree[i] = 0;\n        calculateResearchCost(i, 0, 'inflations');\n    }\n\n    /* Special cases */\n    assignChallengeInformation();\n    for (let s = 1; s < 6; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    if (!loadout) {\n        if ((getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') {\n            global.loadouts.input = [];\n            loadoutsVisual([]);\n        }\n        numbersUpdate();\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Inflations has been refunded'; }\n    }\n    return true;\n};\n\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'strangeness' | 'inflations') => {\n    if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        if (stageIndex === 1) {\n            pointer.cost[research] = (pointer.startCost[research] as number) + (pointer.scaling[research] as number) * player[type][stageIndex][research];\n        } else {\n            (pointer.cost[research] as Overlimit).setValue(pointer.scaling[research]).power(player[type][stageIndex][research]).multiply(pointer.startCost[research]);\n        }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        pointer.cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((pointer.startCost[research] * pointer.scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    } else if (type === 'inflations') {\n        const pointer = global.treeInfo[stageIndex];\n\n        pointer.cost[research] = Math.floor(Math.round((pointer.startCost[research] + pointer.scaling[research] * player.tree[stageIndex][research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations', addAuto = false) => {\n    let max = null;\n    if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 2) {\n                max = 4;\n                if (player.strangeness[2][8] >= 1) { max += 3; }\n            } else if (research === 3) {\n                max = 4;\n                if (player.strangeness[2][8] >= 2) { max++; }\n            } else if (research === 4) {\n                max = 2;\n                if (player.strangeness[2][2] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.strangeness[2][2] >= 2) { max++; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 3 + (3 * player.researches[4][2]) + (3 * player.researches[4][3]);\n                if (player.elements[9] >= 1) { max += 12; }\n                if (player.elements[17] >= 1) { max += 24; }\n            } else if (research === 1) {\n                max = 2 + player.researchesExtra[4][2] + player.researchesExtra[4][3];\n                if (player.elements[7] >= 1) { max += 2; }\n                if (player.elements[16] >= 1) { max++; }\n                if (player.elements[20] >= 1) { max++; }\n                if (player.elements[25] >= 1) { max++; }\n                if (player.elements[28] >= 1) { max++; }\n                if (player.elements[31] >= 1) { max++; }\n                if (player.elements[34] >= 1) { max++; }\n            } else if (research === 2) {\n                max = 1;\n                if (player.elements[11] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.elements[35] >= 1) { max++; }\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0 || research === 1) {\n                max = player.inflation.vacuum ? 4 : 3;\n            } else if (research === 2 || research === 3) {\n                max = player.buildings[6][1].true >= 5 ? 8 : player.buildings[6][1].true >= 4 ? 4 : 2;\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 3) {\n            if (research === 0) {\n                max = Math.floor(14 + (2 * calculateEffects.effectiveRank()));\n                if (player.strangeness[3][2] >= 1) { max += 6; }\n            } else if (research === 1) {\n                max = 6;\n                if (player.strangeness[3][2] >= 2) { max += 2; }\n            } else if (research === 4) {\n                max = player.accretion.rank - 2;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 1) {\n                max = player.buildings[6][1].true >= 4 ? 2 : 1;\n            } else if (research === 2) {\n                max = player.buildings[6][1].true >= 5 ? 8 : 2;\n            } else if (research === 3) {\n                max = player.buildings[6][1].true >= 6 ? 3 : player.buildings[6][1].true >= 5 ? 2 : 1;\n            }\n        }\n    } else if (type === 'researchesAuto') {\n        if (research === 2) {\n            max = player.inflation.vacuum ? (player.strangeness[3][9] >= 1 ? 5 : 4) : 1;\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            max = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            max = player.inflation.vacuum ? 6 : 5;\n        } else if (stageIndex === 3) {\n            max = player.inflation.vacuum ? 5 : 4;\n        } else if (stageIndex === 4) {\n            max = player.inflation.vacuum ? 5 : 4;\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 0) {\n                max = 6;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 2) {\n            if (research === 1) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 6) {\n                max = player.inflation.vacuum || player.milestones[4][0] >= 8 || player.buildings[6][1].current.moreOrEqual('3') ? 2 : 1;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 2) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 6) {\n                max = !player.inflation.vacuum && (player.milestones[5][0] >= 8 || player.buildings[6][1].current.moreOrEqual('5')) ? 2 : 1;\n            }\n        }\n    }\n    if (max !== null) {\n        if (max < 0) { max = 0; }\n        if (type === 'inflations') {\n            global.treeInfo[stageIndex].max[research] = max;\n        } else if (type === 'researchesAuto' || type === 'ASR') {\n            global[`${type}Info`].max[type === 'ASR' ? stageIndex : research] = max;\n        } else {\n            global[`${type}Info`][stageIndex].max[research] = max;\n        }\n    }\n\n    if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(research, stageIndex, type); }\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesAddOne(type, stageIndex, research); }\n};\n\nexport const autoUpgradesSet = (which: number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const array = [];\n    const level = player.upgrades[which];\n    for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n        if (level[i] < 1) { array.push(i); }\n    }\n    if (which === 1) {\n        const startCost = global.upgradesInfo[which].startCost as number[];\n        array.sort((a, b) => startCost[a] - startCost[b]);\n    } else {\n        const startCost = global.upgradesInfo[which].startCost as Overlimit[];\n        array.sort((a, b) => compareFunc(startCost[a], startCost[b]));\n    }\n    global.automatization.autoU[which] = array;\n};\n\nconst autoUpgradesBuy = (stageIndex: number) => {\n    const auto = global.automatization.autoU[stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < 1) { return; }\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: number) => {\n    if (!player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n    const array = [];\n    const level = player[type][which];\n    const pointer = global[`${type}Info`][which];\n    for (let i = 0; i < pointer.maxActive; i++) {\n        if (level[i] < pointer.max[i]) { array.push(i); }\n    }\n    if (which === 1) {\n        const cost = pointer.cost as number[];\n        array.sort((a, b) => cost[a] - cost[b]);\n    } else {\n        const cost = pointer.cost as Overlimit[];\n        array.sort((a, b) => compareFunc(cost[a], cost[b]));\n    }\n    global.automatization[type === 'researches' ? 'autoR' : 'autoE'][which] = array;\n};\n/** Add Research if it isn't already present */\nconst autoResearchesAddOne = (type: 'researches' | 'researchesExtra', stageIndex: number, which: number) => {\n    const pointer = global[`${type}Info`][stageIndex];\n    if (player[type][stageIndex][which] >= pointer.max[which] || !player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.includes(which)) { return; }\n    const cost = pointer.cost[which] as Overlimit;\n    for (let i = 0; i < auto.length; i++) {\n        if (stageIndex === 1 ? cost < pointer.cost[auto[i]] : cost.lessThan(pointer.cost[auto[i]])) {\n            auto.splice(i, 0, which);\n            return;\n        }\n    }\n    auto.push(which);\n};\n\nconst autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < (type === 'researches' ? 2 : 3)) { return; }\n    const pointer = global[`${type}Info`][stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else if (bought) {\n            const index = i;\n            if (stageIndex === 1) {\n                while (pointer.cost[auto[index]] > pointer.cost[auto[i + 1]]) { i++; }\n            } else {\n                while ((pointer.cost[auto[index]] as Overlimit).moreThan(pointer.cost[auto[i + 1]])) { i++; }\n            }\n            if (index === i) { break; }\n            auto.splice(i, 0, auto.splice(index, 1)[0]);\n            i = index - 1;\n        } else { break; }\n    }\n};\n\nexport const autoElementsSet = () => {\n    if (!player.toggles.auto[8]) { return; }\n\n    const array = [];\n    const elements = player.elements;\n    for (let i = 1; i < (player.inflation.vacuum ? playerStart.elements.length : 29); i++) {\n        if (elements[i] < 1) { array.push(i); }\n    }\n    global.automatization.elements = array;\n};\n\nconst autoElementsBuy = () => {\n    const auto = global.automatization.elements;\n    if (auto.length < 1 || player.researchesAuto[1] < 2) { return; }\n    const elements = player.elements;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] > 0) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'buildings' | 'normal' | 'hover' | 'max' | 'auto', change = false) => {\n    const toggles = type === 'buildings' ? player.toggles.buildings[player.stage.active] : player.toggles[type];\n\n    if (change) {\n        if (global.offline.active) { return; }\n        if (type === 'buildings') {\n            const maxLength = playerStart.buildings[player.stage.active].length;\n            if (number === 0) {\n                toggles[0] = !toggles[0];\n                for (let i = 1; i < maxLength; i++) {\n                    toggles[i] = toggles[0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                if (number >= maxLength) { return; }\n\n                let anyOn = false;\n                toggles[number] = !toggles[number];\n                for (let i = 1; i <= player.ASR[player.stage.active]; i++) {\n                    if (toggles[i]) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                if (toggles[0] !== anyOn) {\n                    toggles[0] = anyOn;\n                    toggleSwap(0, 'buildings');\n                }\n            }\n        } else { toggles[number] = !toggles[number]; }\n    }\n\n    let extraText;\n    let toggleHTML;\n    if (type === 'buildings') {\n        toggleHTML = getId(`toggleBuilding${number}`);\n        extraText = number === 0 ? 'All ' : 'Auto ';\n    } else if (type === 'hover') {\n        toggleHTML = getId(`toggleHover${number}`);\n        extraText = 'Hover to create ';\n    } else if (type === 'max') {\n        toggleHTML = getId(`toggleMax${number}`);\n        extraText = 'Max create ';\n    } else if (type === 'auto') {\n        toggleHTML = getId(`toggleAuto${number}`);\n        extraText = 'Auto ';\n    } else {\n        toggleHTML = getId(`toggleNormal${number}`);\n        extraText = '';\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = `${extraText}OFF`;\n    } else {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = `${extraText}ON`;\n    }\n};\n\nexport const toggleConfirm = (number: number, change = false) => {\n    const toggles = player.toggles.confirm;\n    if (change) { toggles[number] = toggles[number] === 'Safe' ? 'None' : 'Safe'; }\n\n    const toggleHTML = getId(`toggleConfirm${number}`);\n    toggleHTML.textContent = toggles[number];\n    if (toggles[number] === 'Safe') {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n    }\n};\n\n/** Returns true for Auto only if reset happened */\nexport const stageResetCheck = (stageIndex: number, quarks = null as number | null): boolean => {\n    const allowedChallenge = player.challenges.active === null || global.challengesInfo[player.challenges.active].resetType !== 'stage';\n    if (stageIndex === 5) {\n        assignResetInformation.quarksGain(); //Also visually updates numbers\n        if (quarks !== null) {\n            if (player.elements[26] < 0.5) { return false; }\n\n            const { stage } = player;\n            const peakCheck = global.strangeInfo.quarksGain / player.time.stage;\n            if (stage.peak < peakCheck) {\n                stage.peak = peakCheck;\n                stage.peakedAt = player.time.stage;\n            }\n\n            if (player.elements[26] < 1 || !allowedChallenge) { return false; }\n            if (player.strangeness[5][8] >= 1) { gainStrange(quarks); }\n\n            if (!player.toggles.auto[0] || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2) ||\n                (stage.input[0] <= 0 && stage.input[1] <= 0) || stage.input[0] > global.strangeInfo.quarksGain || stage.input[1] > player.time.stage) { return false; }\n            stageResetReward(stageIndex);\n            return true;\n        }\n        return allowedChallenge && player.elements[26] >= 1;\n    } else if (stageIndex === 3) {\n        if (player.buildings[3][0].current.lessThan('2.45576045e31')) { return false; }\n    } else if (stageIndex === 2) {\n        if (player.buildings[2][1].current.lessThan('1.19444e29')) { return false; }\n    } else if (stageIndex === 1) {\n        if (player.buildings[1][3].current.lessThan('1.67133125e21')) { return false; }\n    } else { return false; }\n\n    if (!allowedChallenge) { return false; }\n    if (quarks !== null) { //Just checks if auto\n        if (player.strangeness[5][6] < 1) { return false; }\n        if (player.toggles.normal[2]) { //False vacuum only\n            const info = global.milestonesInfo[stageIndex];\n            const unlimitedTime = player.tree[0][4] >= 1;\n            for (let i = 0; i < info.max.length; i++) {\n                if (player.milestones[stageIndex][i] < info.max[i] && (unlimitedTime || info.time[i] >= player.time.stage)) { return false; }\n            }\n        }\n        stageResetReward(stageIndex);\n    }\n    return true;\n};\nexport const stageResetUser = async() => {\n    if (global.offline.active) { return; }\n    const active = player.inflation.vacuum || (player.stage.active === 4 && (player.stage.true >= 7 || player.event)) ? 5 : player.stage.active;\n    if (!stageResetCheck(active)) { return; }\n\n    if (player.toggles.confirm[0] !== 'None' && active === 5) {\n        const array = [];\n        if (player.upgrades[5][3] === 1) {\n            if (player.inflation.vacuum) {\n                if (calculateBuildingsCost(1, 6).toNumber() <= calculateEffects.mergeScore()) {\n                    array.push('can create an Universe');\n                }\n                if (player.merge.resets < calculateEffects.mergeMaxResets()) {\n                    array.push('still capable to do more Merge resets');\n                }\n            } else if (player.buildings[5][3].true >= 22) {\n                array.push('can Collapse Vacuum into its true state');\n            }\n        }\n        if (player.researchesExtra[5][0] >= 1) {\n            const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n            if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n                array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n            }\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Stage reset because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!stageResetCheck(active)) { return Notify('Stage reset canceled, requirements are no longer met'); }\n        }\n    }\n    if (globalSave.SRSettings[0]) {\n        let message;\n        if (player.stage.true >= 5) {\n            message = `Caused Stage reset for ${format(active >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false))} Strange quarks`;\n            const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(active >= 4, 1) : 0;\n            if (strangelets > 0) { message += ` and ${format(strangelets)} Strangelets`; }\n        } else { message = `${global.stageInfo.word[player.stage.true]} Stage ended, but new one started`; }\n        getId('SRMain').textContent = message;\n    }\n    stageResetReward(active);\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage } = player;\n\n    stage.resets++;\n    let fullReset = true;\n    let update: null | boolean = true;\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        if (stage.active === 1 || stage.active >= 6) {\n            update = false;\n        } else { setActiveStage(1); }\n        stage.current = 1;\n        if (stage.true >= 7) {\n            resetThese.push(6);\n        } else if (stage.resets < 2) { playEvent(7); }\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 4) {\n            const check = stage.current === stage.active;\n            stage.current++;\n            if (stage.current === 2 && player.milestones[2][1] >= 7) { stage.current++; }\n            if (stage.current === 3 && player.milestones[3][1] >= 7) { stage.current++; }\n            if (check) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.event = false;\n                visualTrueStageUnlocks();\n            }\n        } else {\n            stage.current = player.milestones[1][1] < 6 ? 1 : player.milestones[2][1] < 7 ? 2 : player.milestones[3][1] < 7 ? 3 : 4;\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            resetThese.unshift(4);\n        }\n        if (stage.true >= 7) { resetThese.push(6); }\n    } else {\n        update = stageIndex === stage.active ? false : null;\n        fullReset = false;\n    }\n\n    if (stage.true >= 5) {\n        const { strange } = player;\n        const exportReward = player.time.export;\n        const conversion = player.tree[0][5] / 4;\n        const quarks = stageIndex >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n        const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(stageIndex >= 4, 1) : 0;\n        strange[0].current += quarks;\n        strange[0].total += quarks;\n        if (strangelets > 0) {\n            strange[1].current += strangelets;\n            strange[1].total += strangelets;\n            assignBuildingsProduction.strange1();\n            const strangeletsTest = strangelets * conversion + exportReward[2];\n            if (strangeletsTest > strangelets) {\n                exportReward[2] = strangeletsTest;\n            } else if (strangelets > exportReward[2]) {\n                exportReward[2] = strangelets;\n            }\n        }\n        if (resetThese.includes(4)) { player.elements[26] = 0; } //Lazy fix for Strange boost\n        assignBuildingsProduction.strange0();\n        const quarksTest = quarks * conversion + exportReward[1];\n        if (quarksTest > quarks) {\n            exportReward[1] = quarksTest;\n        } else if (quarks > exportReward[1]) {\n            exportReward[1] = quarks;\n        }\n        if (stageIndex >= 4) {\n            const history = player.history.stage;\n            const storage = global.historyStorage.stage;\n            const realTime = player.time.stage;\n            storage.unshift([realTime, quarks, strangelets]);\n            if (storage.length > 100) { storage.length = 100; }\n            if (quarks / realTime > history.best[1] / history.best[0]) {\n                history.best = [realTime, quarks, strangelets];\n            }\n        }\n        addIntoLog(`${player.inflation.vacuum ? '' : `${global.stageInfo.word[stageIndex === 5 ? 4 : stageIndex]} `}Stage reset, new Strange quarks are ${format(strange[0].current, { padding: true })}`);\n    } else { addIntoLog(`${global.stageInfo.word[stageIndex]} Stage ended`); }\n\n    resetStage(resetThese, update, fullReset);\n};\n/** Challenge means all Stages reset without any rewards or logging (false default) */\nconst stageFullReset = (challenge = false) => { /* Export if required */\n    const vacuum = player.inflation.vacuum;\n    const current = vacuum ? 5 : player.stage.current;\n    if (!vacuum) {\n        if (current !== 1 && player.milestones[1][1] >= 6) {\n            if (!challenge && stageResetCheck(1)) {\n                stageResetReward(1);\n            } else {\n                resetStage([1], false, false);\n                if (!challenge) { addIntoLog(`Premature ${global.stageInfo.word[1]} Stage reset, no reward`); }\n            }\n        }\n        if (current !== 2 && player.milestones[2][1] >= 7) {\n            if (!challenge && stageResetCheck(2)) {\n                stageResetReward(2);\n            } else {\n                resetStage([2], false, false);\n                if (!challenge) { addIntoLog(`Premature ${global.stageInfo.word[2]} Stage reset, no reward`); }\n            }\n        }\n        if (current !== 3 && player.milestones[3][1] >= 7) {\n            if (!challenge && stageResetCheck(3)) {\n                stageResetReward(3);\n            } else {\n                resetStage([3], false, false);\n                if (!challenge) { addIntoLog(`Premature ${global.stageInfo.word[3]} Stage reset, no reward`); }\n            }\n        }\n    }\n\n    if (!challenge && stageResetCheck(current)) {\n        stageResetReward(current);\n    } else {\n        const resetThese = vacuum ? [1, 2, 3, 4, 5] : [current];\n        if (player.stage.true >= 7) { resetThese.push(6); }\n        let update = false;\n        if (vacuum) {\n            if (player.stage.active !== 1 && player.stage.active < 6) {\n                setActiveStage(1);\n                update = true;\n            }\n            player.stage.current = 1;\n        }\n        if (!challenge) { addIntoLog(`Premature ${vacuum ? '' : `${global.stageInfo.word[current === 5 ? 4 : current]} `}Stage reset, no reward`); }\n        resetStage(resetThese, update);\n    }\n};\n\nexport const switchStage = (stage: number, active = stage) => {\n    if (!global.stageInfo.activeAll.includes(stage) || player.stage.active === stage) {\n        if (player.stage.active === stage && global.trueActive !== stage) {\n            global.trueActive = stage;\n            getId(`stageSwitch${stage}`).style.textDecoration = 'underline';\n        }\n        if (!global.offline.active) {\n            visualUpdate();\n            numbersUpdate();\n        }\n        return;\n    }\n\n    setActiveStage(stage, active);\n    stageUpdate();\n};\n\n/** Doesn't check for Stage being unlocked, requires stageUpdate() call afterwards */\nexport const setActiveStage = (stage: number, active = stage) => {\n    getId(`stageSwitch${player.stage.active}`).style.textDecoration = '';\n    player.stage.active = stage;\n    global.trueActive = active;\n    getId(`stageSwitch${stage}`).style.textDecoration = 'underline' + (global.trueActive !== stage ? ' dashed' : '');\n\n    if (global.tab === 'inflation') {\n        if (stage !== 6) { switchTab('upgrade'); }\n    } else if (global.tab === 'Elements') {\n        if (stage !== 4 && stage !== 5) { switchTab('upgrade'); }\n    }\n    if (global.tab === 'upgrade') {\n        if (global.subtab.upgradeCurrent === 'Elements' && stage !== 4 && stage !== 5) { switchTab('upgrade', 'Upgrades'); }\n    }\n};\n\n/** Returns true for Auto only if reset happened */\nconst dischargeResetCheck = (goals = false): boolean => {\n    if (player.upgrades[1][5] !== 1) { return false; }\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n    const level = player.strangeness[1][4];\n\n    info.next = calculateEffects.dischargeCost();\n    if (goals) {\n        if (level >= 2 && info.energyTrue >= info.next) {\n            do {\n                dischargeReset(true);\n                info.next = calculateEffects.dischargeCost();\n            } while (info.energyTrue >= info.next);\n            info.total = calculateEffects.effectiveGoals();\n            if (!player.toggles.auto[1]) { return false; }\n        } else if (!player.toggles.auto[1] || (level < 1 && (player.researchesAuto[2] < 1 || (!player.inflation.vacuum && player.stage.current !== 1)))) { return false; }\n\n        if (energy >= info.energyTrue && (level >= 2 || energy < info.next)) { return false; }\n        dischargeReset();\n        return true;\n    }\n    return energy < info.energyTrue || (level < 2 && energy >= info.next);\n};\nexport const dischargeResetUser = async() => {\n    if (global.offline.active || !dischargeResetCheck()) { return; }\n\n    if (player.toggles.confirm[1] !== 'None') {\n        if (player.stage.active !== 1) {\n            if (!await Confirm(\"Prevented Discharge because current active Stage isn't Microworld\\nReset anyway?\")) { return; }\n            if (!dischargeResetCheck()) { return Notify('Discharge canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Caused Discharge to reset the spent Energy${player.strangeness[1][4] < 2 && player.discharge.energy >= global.dischargeInfo.next ? ', also reached new goal' : ''}`; }\n    dischargeReset();\n    numbersUpdate();\n};\n\nconst dischargeReset = (freeGoals = false) => {\n    const increased = freeGoals || (player.strangeness[1][4] < 2 && player.discharge.energy >= global.dischargeInfo.next);\n    if (increased) {\n        player.discharge.current++;\n        if (!freeGoals) { player.discharge.energy -= global.dischargeInfo.next; }\n    }\n    awardVoidReward(1);\n    if (!freeGoals) {\n        addIntoLog(`Discharge reset${increased ? ', Goal reached' : ''}`);\n        reset('discharge', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : [1]);\n    }\n};\n\n/** Returns true for Auto only if reset happened */\nconst vaporizationResetCheck = (clouds = null as number | null): boolean => {\n    assignResetInformation.newClouds(); //Also visually updates numbers\n    if (player.upgrades[2][2] < 1 || global.vaporizationInfo.get.lessOrEqual('0')) { return false; } //Can be negative\n\n    if (clouds !== null) {\n        const level = player.strangeness[2][4];\n        if (level >= 2) {\n            vaporizationReset(clouds);\n            if (!player.toggles.auto[2] || player.toggles.normal[1]) { return false; }\n            assignResetInformation.newClouds();\n        } else if (!player.toggles.auto[2] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 3 : (player.researchesAuto[2] < 1 || player.stage.current !== 2)))) { return false; }\n\n        const vaporization = player.vaporization;\n        if (player.inflation.vacuum && vaporization.input[1] > 0 && vaporization.clouds.moreOrEqual(vaporization.input[1])) { return false; }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan(vaporization.input[0])) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\nexport const vaporizationResetUser = async() => {\n    if (global.offline.active || !vaporizationResetCheck()) { return; }\n\n    if (player.toggles.confirm[2] !== 'None') {\n        const array = [];\n        if (player.strangeness[2][4] >= 2) {\n            array.push('already gaining Clouds without needing to reset');\n        }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n        if (calculateEffects.clouds(true).divide(calculateEffects.clouds()).multiply((rainAfter / rainNow) * storm).lessThan('2')) {\n            array.push('boost from doing it is below 2x');\n        }\n        if (player.stage.active !== 2) {\n            array.push(\"current active Stage isn't Submerged\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Vaporization because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!vaporizationResetCheck()) { return Notify('Vaporization canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        getId('SRMain').textContent = `Caused Vaporization for ${format(global.vaporizationInfo.get)} Clouds, +${format(player.vaporization.clouds.moreThan('0') ? new Overlimit(global.vaporizationInfo.get).divide(player.vaporization.clouds).multiply('1e2') : 100)}%`;\n    }\n    vaporizationReset();\n    numbersUpdate();\n};\n\nconst vaporizationReset = (autoClouds = null as number | null) => {\n    const vaporization = player.vaporization;\n\n    if (autoClouds !== null) {\n        vaporization.clouds.plus(new Overlimit(global.vaporizationInfo.get).multiply(autoClouds / 40));\n    } else {\n        vaporization.clouds.plus(global.vaporizationInfo.get);\n        addIntoLog(`Vaporization reset, new Clouds are ${format(player.vaporization.clouds, { padding: true })}`);\n        reset('vaporization', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2] : [2]);\n    }\n    if (vaporization.cloudsMax.lessThan(vaporization.clouds)) { vaporization.cloudsMax.setValue(vaporization.clouds); }\n    awardVoidReward(2);\n};\n\n/** Returns true for Auto only if reset happened */\nconst rankResetCheck = (auto = false): boolean => {\n    if (player.accretion.rank >= global.accretionInfo.maxRank || (player.buildings[3][0][player.strangeness[3][4] >= 2 ? 'total' : 'current']).lessThan(global.accretionInfo.rankCost[player.accretion.rank])) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 2 : (player.researchesAuto[2] < 1 || player.stage.current !== 3))) { return false; }\n        rankReset();\n    }\n    return true;\n};\nexport const rankResetUser = async() => {\n    if (global.offline.active || !rankResetCheck()) { return; }\n\n    if (player.toggles.confirm[3] !== 'None' && player.accretion.rank !== 0) {\n        const array = [];\n        if (player.inflation.vacuum && (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) && player.accretion.rank >= 4) {\n            array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make next Rank slow`);\n        }\n        if (player.stage.active !== 3) {\n            array.push(\"current active Stage isn't Accretion\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Rank increase because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!rankResetCheck()) { return Notify('Rank increase canceled, requirements are no longer met'); }\n        }\n    }\n\n    rankReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Rank increased to '${global.accretionInfo.rankName[player.accretion.rank]}' (Rank number is ${player.accretion.rank})`; }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        let update = false;\n        if (player.toggles.normal[0]) {\n            if (player.stage.active < 4) {\n                setActiveStage(4);\n                update = true;\n            } else if (global.trueActive < 4) {\n                global.trueActive = 4;\n            }\n        }\n        stageUpdate(update, true);\n    }\n    awardVoidReward(3);\n    //global.accretionInfo.effective = calculateEffects.effectiveRank();\n    if (player.accretion.rank > 1) { addIntoLog(`Rank reset, new Rank is \"${global.accretionInfo.rankName[player.accretion.rank]}\"`); }\n    reset('rank', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    if (player.stage.active === 3 && !global.offline.active) { visualUpdate(); }\n};\n\n/** Returns true for Auto only if reset happened */\nconst collapseResetCheck = (remnants = false): boolean => {\n    assignResetInformation.newStars(); //Also visually updates numbers\n    assignResetInformation.newMass();\n    if (player.upgrades[4][0] < 1) { return false; }\n    const info = global.collapseInfo;\n    const collapse = player.collapse;\n    const level = player.strangeness[4][4];\n\n    assignResetInformation.timeUntil();\n    if (remnants) {\n        if (level >= 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) {\n            collapseReset(true);\n            if (!player.toggles.auto[4]) { return false; }\n            //assignBuildingsProduction.S5Build3_base();\n            //effectsCache.mass = calculateEffects.mass();\n            effectsCache.star1 = calculateEffects.star[1]();\n            effectsCache.star2 = calculateEffects.star[2]();\n            assignResetInformation.newStars(true);\n            assignResetInformation.newMass();\n            assignResetInformation.timeUntil(false);\n        } else if (!player.toggles.auto[4] || (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 4 : (player.researchesAuto[2] < 1 || player.stage.current < 4)))) { return false; }\n\n        if (player.strangeness[5][4] >= 1 && player.toggles.buildings[5][3] && player.ASR[5] >= 3 && player.researchesExtra[5][0] >= 1 && calculateBuildingsCost(3, 5).toNumber() <= info.newMass) {\n            collapseReset(false, false);\n            return true;\n        }\n        if (info.timeUntil > 0 && info.timeUntil < collapse.input[1]) { return false; }\n        while (info.pointsLoop < collapse.points.length) {\n            const point = collapse.points[info.pointsLoop];\n            if (point > info.newMass || (point > 40 && player.strangeness[5][4] < 1)) { break; }\n            if (point > collapse.mass) {\n                info.pointsLoop++;\n                collapseReset();\n                return true;\n            }\n            info.pointsLoop++;\n        }\n        const massBoost = (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n        if (massBoost >= collapse.input[0]) {\n            collapseReset();\n            return true;\n        } else if (level >= 2) { return false; }\n        const calculateStar = calculateEffects.star;\n        const starProd = global.buildingsInfo.producing[4];\n        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n        if (!(massBoost * new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).toNumber() * (calculateStar[1](true) / effectsCache.star1) * (calculateStar[2](true) / effectsCache.star2) >= collapse.input[0])) { return false; } //Done this way to remove NaN\n        collapseReset();\n        return true;\n    }\n    return info.newMass > collapse.mass || (level < 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) || player.elements.includes(0.5, 1);\n};\nexport const collapseResetUser = async() => {\n    if (global.offline.active || !collapseResetCheck()) { return; }\n\n    if (player.toggles.confirm[4] !== 'None') {\n        const array = [];\n        if (player.inflation.vacuum) {\n            const unlockedG = player.researchesExtra[5][0] >= 1;\n            const cantAffordG = !unlockedG || calculateBuildingsCost(3, 5).toNumber() > global.collapseInfo.newMass;\n            if (global.collapseInfo.timeUntil > 0 && global.collapseInfo.timeUntil < 1e6 && cantAffordG) {\n                array.push(`${unlockedG ? 'will not be able to afford new Galaxy and ' : ''}Solar mass isn't hardcapped, but can be hardcapped soon`);\n            }\n            if (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds.lessOrEqual('0')) {\n                array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make recovering from Collapse really slow`);\n            }\n        }\n        if (player.stage.active !== 4 && player.stage.active !== 5) {\n            array.push(\"current active Stage isn't Interstellar\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Collapse because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!collapseResetCheck()) { return Notify('Collapse canceled, requirements are no longer met'); }\n        }\n    }\n\n    if (globalSave.SRSettings[0]) {\n        const { starCheck: newStars, newMass } = global.collapseInfo;\n        let count = 0;\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            count++;\n        }\n        const array = [];\n        if (count > 0) { array.push(`activate ${format(count)} new Elements`); }\n        if (newMass > player.collapse.mass) { array.push(`increase Solar mass to ${format(newMass)}`); }\n        let extra = '';\n        if (player.stage.active !== 5 && player.strangeness[4][4] < 2 && (newStars[0] > 0 || newStars[1] > 0 || newStars[2] > 0)) {\n            extra += array.length > 0 ? ', also gained' : 'gain';\n            if (newStars[0] > 0) { extra += ` ${format(newStars[0])} Red giants`; }\n            if (newStars[1] > 0) { extra += `, ${format(newStars[1])} Neutron stars`; }\n            if (newStars[2] > 0) { extra += `, ${format(newStars[2])} Black holes`; }\n        }\n        getId('SRMain').textContent = `Caused Collapse to ${array.join(', ')}${extra}`;\n    }\n    collapseReset();\n    numbersUpdate();\n};\n\nconst collapseReset = (noReset = false, log = true) => {\n    const collapseInfo = global.collapseInfo;\n    const collapse = player.collapse;\n\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    if (!noReset) {\n        if (collapseInfo.newMass > collapse.mass) {\n            collapse.mass = collapseInfo.newMass;\n            if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n        }\n        for (let i = 1; i < playerStart.elements.length; i++) { //Must be below mass and star checks\n            i = player.elements.indexOf(0.5, i);\n            if (i < 1) { break; }\n            buyUpgrades(i, 4, 'elements', true);\n        }\n\n        if (log) { addIntoLog(`Collapse reset, Solar mass is at ${format(collapse.mass, { padding: true })}`); }\n        reset('collapse', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3, 4] : (player.strangeness[5][3] < 1 ? [4, 5] : [4]));\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n    }\n    awardVoidReward(4);\n};\n\nconst mergeResetCheck = (auto = false): boolean => {\n    if (player.upgrades[5][3] !== 1) { return false; }\n    const galaxies = player.buildings[5][3].true;\n    if (!player.inflation.vacuum) { return galaxies >= 22; }\n    const merge = player.merge;\n    if (merge.resets >= calculateEffects.mergeMaxResets() || galaxies < 1) { return false; }\n\n    if (auto) {\n        if ((player.strangeness[5][9] < 1 && player.researchesAuto[2] < 5) || (merge.input[1] !== 0 ? merge.since < merge.input[1] : global.collapseInfo.timeUntil > 0) || galaxies < merge.input[0]) { return false; }\n        mergeReset();\n        return true;\n    }\n    return true;\n};\nexport const mergeResetUser = async() => {\n    if (global.offline.active || !mergeResetCheck()) { return; }\n\n    if (player.toggles.confirm[5] !== 'None' && player.inflation.vacuum) {\n        const array = [];\n        const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n        if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n            array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n        }\n        if (player.stage.active !== 5 && player.stage.active !== 6) {\n            array.push(\"current active Stage isn't Intergalactic\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Merging because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!mergeResetCheck()) { return Notify('Merge canceled, requirements are no longer met'); }\n        }\n    }\n\n    mergeReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) {\n        const { checkReward } = global.mergeInfo;\n        getId('SRMain').textContent = player.inflation.vacuum ? `Merged Galaxies${checkReward[0] > 0 ? `, which resulted in +${format(checkReward[0])} new Groups` : ''}` : 'Vacuum decayed into its true state';\n    }\n};\n\nconst mergeReset = () => {\n    if (!player.inflation.vacuum) { return switchVacuum(); }\n    assignResetInformation.mergeReward();\n\n    player.merge.resets++;\n    player.merge.rewards[0] += global.mergeInfo.checkReward[0];\n    addIntoLog(`Merge reset, Galaxies before reset ${format(player.buildings[5][3].current, { padding: 'exponent' })} [${format(player.buildings[5][3].true)}]`);\n    player.buildings[5][3].true = 0;\n    reset('galaxy', [1, 2, 3, 4, 5]);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n    calculateMaxLevel(5, 4, 'researches');\n    if (player.stage.current < 6) {\n        player.stage.current = 6;\n        stageUpdate(false, true);\n    }\n};\n\nexport const assignMilestoneInformation = (index: number, stageIndex: number) => {\n    const pointer = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (player.inflation.vacuum) {\n        pointer.time[index] = player.challenges.super ? 1200 : 3600;\n        if (stageIndex === 1) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e32').power(level).multiply('1e32');\n                pointer.reward[0] = 1.05 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(24000 + 24000 * level);\n                pointer.reward[1] = 1.03 ** level;\n            }\n        } else if (stageIndex === 2) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.12 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue('1e3').power(level).multiply('1e3');\n                pointer.reward[1] = 1.08 ** level;\n            }\n        } else if (stageIndex === 3) {\n            if (index === 0) {\n                pointer.need[0].setValue(1e-12 * 1e4 ** level);\n                pointer.reward[0] = 1.08 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(6 + 6 * level);\n                pointer.reward[1] = level / 4;\n            }\n        } else if (stageIndex === 4) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e6').power(level).multiply('1e6');\n                pointer.reward[0] = 1.06 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(28 + 28 * level);\n                pointer.reward[1] = 1.01 ** level;\n            }\n        } else if (stageIndex === 5) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(1 + level);\n                pointer.reward[1] = level / 100;\n            }\n        }\n    } else {\n        const percentage = level / (pointer.max[index] - 1);\n        if (stageIndex === 1) {\n            pointer.time[index] = 14400 / (percentage * (index === 1 ? 11 : 3) + 1) ** percentage;\n        } else if (stageIndex === 2) {\n            pointer.time[index] = 28800 / (percentage * (index === 1 ? 23 : 7) + 1) ** percentage;\n        } else if (stageIndex === 3) {\n            pointer.time[index] = 43200 / (percentage * (index === 1 ? 35 : 11) + 1) ** percentage;\n        } else if (stageIndex === 4) {\n            pointer.time[index] = 57600 / (percentage * (index === 1 ? 47 : 15) + 1) ** percentage;\n        } else if (stageIndex === 5) {\n            pointer.time[index] = index === 0 ? (3600 / (percentage * 2 + 1)) : 1200;\n        }\n        pointer.need[index].setValue(pointer.scaling[index][level]);\n    }\n    if (player.tree[0][0] === 1) { pointer.time[index] /= 4; }\n};\n\nconst awardMilestone = (index: number, stageIndex: number, count = 0) => {\n    if (!milestoneCheck(index, stageIndex)) {\n        if (count > 0) {\n            const maxText = !player.inflation.vacuum && player.milestones[stageIndex][index] >= global.milestonesInfo[stageIndex].max[index] ? ', maxed' : '';\n            addIntoLog(`Milestone \"${global.milestonesInfo[stageIndex].name[index]}\" new tier completed${maxText}`, count);\n            Notify(`Milestone '${global.milestonesInfo[stageIndex].name[index]}' new tier completed${maxText}`, count);\n            if (!player.inflation.vacuum) {\n                player.strange[0].current += count;\n                player.strange[0].total += count;\n                assignBuildingsProduction.strange0();\n                if (stageIndex === 4) {\n                    if (index === 0 && player.milestones[4][0] >= 8) { calculateMaxLevel(6, 4, 'strangeness', true); }\n                } else if (stageIndex === 5) {\n                    if (index === 0 && player.milestones[5][0] >= 8) { calculateMaxLevel(6, 5, 'strangeness', true); }\n                }\n            } else if (stageIndex === 3 && index === 1) {\n                global.accretionInfo.effective = calculateEffects.effectiveRank();\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n            }\n        }\n        return;\n    }\n\n    player.milestones[stageIndex][index]++;\n    assignMilestoneInformation(index, stageIndex);\n    awardMilestone(index, stageIndex, count + 1);\n};\n\n/** Also updates related information */\nexport const toggleSupervoid = (change = false) => {\n    const info = global.challengesInfo[0];\n    if (change) {\n        if (player.challenges.active === 0) { return Notify(`Can't be toggled while inside the '${info.name}'`); }\n        player.challenges.super = !player.challenges.super;\n    }\n\n    if (player.challenges.super) {\n        info.name = 'Supervoid';\n        info.resetType = 'vacuum';\n        changeRewardType(true);\n    } else {\n        info.name = 'Void';\n        info.resetType = 'stage';\n        changeRewardType(false);\n    }\n    assignChallengeInformation();\n    if (change) { numbersUpdate(); }\n};\n\n/* For now just index 0 */\nexport const assignChallengeInformation = () => {\n    let time = player.challenges.super ? 1200 : (3600 - 600 * player.tree[0][5]);\n    if (player.tree[0][0] === 1) { time /= 4; }\n    global.challengesInfo[0].time = time;\n};\n\nconst awardVoidReward = (index: number): void => {\n    const challenges = player.challenges;\n    if (challenges.active !== 0) { return; }\n    const info = global.challengesInfo[0];\n\n    let progress = 1;\n    if (index === 1) {\n        progress += player.researchesExtra[1][2];\n    } else if (index === 2) {\n        if (player.vaporization.clouds.moreThan('1e4')) { progress++; }\n        if (player.vaporization.clouds.moreThan('1e12') && player.accretion.rank <= 1) { progress++; }\n    } else if (index === 3) {\n        progress = Math.min(player.accretion.rank - 1, 6);\n    } else if (index === 4) {\n        if (player.collapse.stars[0] >= 1) { progress++; }\n        if (player.collapse.stars[1] >= 1) { progress++; }\n        if (player.collapse.stars[2] >= 1) { progress++; }\n        if (player.elements[26] >= 1) { progress++; }\n    } else if (index === 5) {\n        if (player.merge.resets >= 1) { progress++; }\n        if (player.merge.rewards[0] >= 1) { progress++; }\n    }\n    const needText = info.needText[index][progress - 1]();\n    if (needText === null) { return; }\n\n    const pointer = challenges.void;\n    if (pointer[index] < progress && player.time.stage <= info.time) {\n        pointer[index]++;\n        const excess = progress !== pointer[index];\n        if (excess) { progress = pointer[index]; }\n        if (challenges.voidCheck[index] < progress) { challenges.voidCheck[index] = progress; }\n        const totalProgress = pointer[1] + pointer[2] + pointer[3] + pointer[4] + pointer[5];\n        player.strange[0].current += totalProgress;\n        player.strange[0].total += totalProgress;\n        assignBuildingsProduction.strange0();\n\n        addIntoLog(`Completed Void reward: \"${needText}\"`);\n        Notify(`New Void reward unlocked:\\n${info.rewardText[0][index][progress - 1]}`);\n        if (index === 3) {\n            if (progress <= 4) {\n                calculateMaxLevel(0, 1, 'strangeness', true);\n                calculateMaxLevel(3, 1, 'strangeness', true);\n                calculateMaxLevel(1, 2, 'strangeness', true);\n                calculateMaxLevel(3, 2, 'strangeness', true);\n                calculateMaxLevel(0, 3, 'strangeness', true);\n                calculateMaxLevel(1, 3, 'strangeness', true);\n                calculateMaxLevel(0, 4, 'strangeness', true);\n                calculateMaxLevel(1, 4, 'strangeness', true);\n                calculateMaxLevel(2, 5, 'strangeness', true);\n            }\n        } else if (index === 4) {\n            if (progress === 1) {\n                calculateMaxLevel(4, 1, 'strangeness', true);\n                calculateMaxLevel(4, 2, 'strangeness', true);\n                calculateMaxLevel(4, 3, 'strangeness', true);\n                calculateMaxLevel(4, 4, 'strangeness', true);\n            }\n        }\n        if (excess) { return awardVoidReward(index); }\n    }\n\n    if (!challenges.super) { return; }\n    const pointer2 = challenges.supervoidMax;\n    if (pointer2[index] < progress && player.time.vacuum <= info.time) {\n        if (challenges.supervoid[index] < progress) {\n            challenges.supervoid[index]++;\n            player.cosmon[0].current++;\n            player.cosmon[0].total++;\n        }\n        pointer2[index]++;\n        const excess = progress !== pointer2[index];\n        if (excess) { progress = pointer2[index]; }\n        global.inflationInfo.totalSuper = pointer2[1] + pointer2[2] + pointer2[3] + pointer2[4] + pointer2[5];\n\n        addIntoLog(`Completed Supervoid reward: \"${needText}\"`);\n        Notify(`New Supervoid reward unlocked:\\n${info.rewardText[1][index][progress - 1]}`);\n        if (excess) { return awardVoidReward(index); }\n    }\n};\n\n/** Null means exit if possible, nothing if isn't. Entering same challenge will exit out of it */\nexport const enterExitChallengeUser = (index: number | null) => {\n    if (global.offline.active) { return; }\n    const old = player.challenges.active;\n    if (old === index || index === null) {\n        if (old === null) { return; }\n        player.challenges.active = null;\n\n        challengeReset(null, old);\n        Notify(`Left the '${global.challengesInfo[old].name}'`);\n    } else {\n        if (index === 0) {\n            if (!player.challenges.super && !player.inflation.vacuum) { return; }\n        } else if (index === 1) { return; }\n        player.challenges.active = index;\n\n        challengeReset(index, old);\n        Notify(`'${global.challengesInfo[index].name}' is now active`);\n    }\n};\nconst exitChallengeAuto = () => {\n    const old = player.challenges.active;\n    if (old === null || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2)) { return; }\n    const info = global.challengesInfo[old];\n    if (player.time[info.resetType] <= info.time) { return; }\n\n    player.challenges.active = null;\n    challengeReset(null, old);\n    Notify(`Automatically left the '${info.name}'`);\n};\n/** Handles all required resets related to challenges */\nconst challengeReset = (next: number | null, old: number | null) => {\n    if (next !== null) {\n        const resetType = global.challengesInfo[next].resetType;\n        if (old !== null) { challengeReset(null, old); }\n        cloneBeforeReset(resetType);\n        if (resetType === 'vacuum') {\n            if (player.stage.active < 6) { setActiveStage(1); }\n            if (!player.inflation.vacuum) {\n                player.inflation.vacuum = true;\n                prepareVacuum(true);\n            }\n            resetVacuum();\n        } else {\n            stageFullReset(true);\n            if (next === 0) { assignResetInformation.trueEnergy(); }\n        }\n        addIntoLog(`Entered the \"${global.challengesInfo[next].name}\"`);\n    } else if (old !== null) {\n        if (player.stage.active < 6) { setActiveStage(Math.min(player.clone.stage.current, (player.clone.depth !== 'stage' ? player.clone : player).strangeness[5][3] >= 1 ? 5 : 4)); }\n        if (player.clone.inflation?.vacuum === false) {\n            player.inflation.vacuum = false;\n            prepareVacuum(false);\n        }\n        loadFromClone();\n        addIntoLog(`Exited the \"${global.challengesInfo[old].name}\"`);\n    }\n};\n", "import { checkTab, milestoneGetValue } from './Check';\nimport { changeSubtab } from './Hotkeys';\nimport Overlimit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { effectsCache, global, player } from './Player';\nimport { MDStrangenessPage, Notify, SRHotkeysInfo, globalSave, playEvent, resetMinSizes, setTheme, specialHTML } from './Special';\nimport { calculateBuildingsCost, stageResetCheck, toggleSwap, setActiveStage, calculateEffects, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport type { gameTab } from './Types';\n\n/** Tab being null will test current tab/subtab being unlocked and updates subtab list */\nexport const switchTab = (tab = null as null | gameTab, subtab = null as null | string): void => {\n    const oldTab = global.tab;\n    if (tab === null) {\n        if (!checkTab(oldTab)) { return switchTab('stage'); }\n\n        let subtabAmount = 0;\n        for (const inside of global.tabList[`${oldTab}Subtabs`]) {\n            const unlocked = checkTab(oldTab, inside);\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = unlocked ? '' : 'none';\n            if (unlocked) {\n                subtabAmount++;\n            } else if (global.subtab[`${oldTab}Current`] === inside) {\n                switchTab(oldTab, global.tabList[`${oldTab}Subtabs`][0]);\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        if (globalSave.SRSettings[0]) {\n            const text = `Current tab is '${oldTab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${oldTab}Current`]}'` : ''}`;\n            if (getId('SRTab').textContent !== text) { getId('SRTab').textContent = text; } //Just in case to prevent unnessary calls?\n        }\n        return;\n    } else if (subtab === null) {\n        if (oldTab === tab) { return changeSubtab('up'); }\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n\n        global.tab = tab;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n\n        let subtabAmount = 0;\n        for (const inside of global.tabList[`${oldTab}Subtabs`]) {\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n        }\n        for (const inside of global.tabList[`${tab}Subtabs`]) {\n            if (checkTab(tab, inside)) {\n                getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                subtabAmount++;\n            } else if (global.subtab[`${tab}Current`] === inside) {\n                switchTab(tab, global.tabList[`${tab}Subtabs`][0]);\n            }\n        }\n        getId('subtabs').style.display = subtabAmount > 1 ? '' : 'none';\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.subtab[`${tab}Current`]}'` : ''}`; }\n    } else {\n        const oldSubtab = global.subtab[`${tab}Current`];\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.subtab[`${tab as Exclude<gameTab, 'Elements'>}Current`] = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (oldTab !== tab) { return; }\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    const active = player.stage.active;\n    if ((tab === 'upgrade' && global.subtab.upgradeCurrent === 'Elements') || tab === 'Elements') {\n        if (active !== 4 && active !== 5) {\n            if (tab === 'upgrade' && subtab === null) {\n                switchTab('upgrade', 'Upgrades');\n            } else {\n                setActiveStage(global.trueActive === 5 ? 5 : 4, global.trueActive);\n                stageUpdate();\n            }\n            return;\n        }\n    } else if (tab === 'inflation') {\n        if (active !== 6) {\n            setActiveStage(6, global.trueActive);\n            stageUpdate();\n            return;\n        }\n    } else if (global.trueActive !== active) {\n        setActiveStage(global.stageInfo.activeAll.includes(global.trueActive) ? global.trueActive : Math.min(player.stage.current, 5));\n        stageUpdate();\n        return;\n    }\n    if (!global.offline.active) {\n        visualUpdate();\n        numbersUpdate();\n    }\n};\n\nexport const numbersUpdate = () => {\n    const { tab, subtab } = global;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n    const vacuum = player.inflation.vacuum;\n\n    if (!global.debug.timeLimit) {\n        const challenge = player.challenges.active;\n        let noTime = null as boolean | null;\n        if (vacuum) {\n            if (challenge !== null) { noTime = player.time[global.challengesInfo[challenge].resetType] > global.challengesInfo[challenge].time; }\n        } else if (player.tree[0][4] < 1 && (player.stage.true >= 7 || player.stage.resets >= 4)) {\n            const s = Math.min(player.stage.current, 4);\n            const info = global.milestonesInfo;\n            let maxTime = 0;\n            for (let i = 0; i < info[s].need.length; i++) {\n                if (player.milestones[s][i] >= info[s].max[i]) {\n                    if (s === 4 && player.milestones[5][i] < info[5].max[i]) {\n                        maxTime = Math.max(info[5].time[i], maxTime);\n                    }\n                    continue;\n                }\n                maxTime = Math.max(info[s].time[i], maxTime);\n            }\n            if (maxTime > 0) { noTime = player.time.stage > maxTime; }\n        }\n\n        if (noTime) {\n            Notify(`Time limit has been reached for ${challenge !== null ? `the '${global.challengesInfo[challenge].name}'` : 'all Milestones'}`);\n            global.debug.timeLimit = true;\n        } else if (noTime === null) { global.debug.timeLimit = true; }\n    }\n\n    if (!globalSave.toggles[4]) {\n        getId('globalStat1Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n        getId('globalStat2Span').textContent = format(player.buildings[2][1].current, { padding: true });\n        getId('globalStat3Span').textContent = format(player.buildings[3][0].current, { padding: true });\n        getId('globalStat4Span').textContent = format(player.buildings[4][0].current, { padding: true });\n        getId('globalStat5Span').textContent = format(player.buildings[6][0].current, { padding: true });\n    }\n    if (active === 1) {\n        getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        getId('footerStat2Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n    } else if (active === 2) {\n        getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        getId('footerStat2Span').textContent = format(buildings[1].current, { padding: true });\n        getId('footerStat3Span').textContent = format(player.vaporization.clouds, { padding: true });\n    } else if (active === 3) {\n        getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n    } else if (active === 4 || active === 5) {\n        const stars = player.buildings[4];\n\n        getId('footerStat1Span').textContent = format(stars[0].current, { padding: true });\n        getId('footerStat2Span').textContent = format(player.collapse.mass, { padding: true });\n        if (active === 5) {\n            getId('footerStat3Span').textContent = format(new Overlimit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current), { padding: true });\n        }\n    } else if (active === 6) {\n        getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        getId('footerStat2Span').textContent = format(player.cosmon[0].current, { padding: 'exponent' });\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const { buildingsInfo } = global;\n            const producing = buildingsInfo.producing[active];\n            const howMany = global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : player.toggles.shop.input;\n            const speed = global.inflationInfo.globalSpeed;\n\n            //Visual fixes for stuff that makes no sense to assign\n            if (active === 1) {\n                if (vacuum) { assignBuildingsProduction.S1Build1(false, true); }\n            } else if (active === 2) {\n                assignBuildingsProduction.S2Build2(true);\n            } else if (active === 3) {\n                if (vacuum) { assignBuildingsProduction.stage3Cache(true); }\n                assignBuildingsProduction.S3Build1(false, true);\n                assignBuildingsProduction.S3Build2(true);\n                assignBuildingsProduction.S3Build3(true);\n            } else if (active === 6) {\n                assignBuildingsProduction.S6Build1(true);\n            }\n            const mergeScore = vacuum && active === 6 ? calculateEffects.mergeScore() : 0;\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                getId(`building${i}Cur`).textContent = format(buildings[i].current, { padding: trueCountID.style.display !== 'none' });\n                getId(`building${i}Prod`).textContent = format(buildingsInfo.type[active][i - 1] === 'producing' ? new Overlimit(producing[i]).multiply(speed) : producing[i], { padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true, { padding: 'exponent' })}]`;\n\n                let lockText;\n                if (active === 3) {\n                    if (i > 1 && player.upgrades[3][global.accretionInfo.unlockA[i - 2]] !== 1) {\n                        lockText = 'Unlocked with Upgrade';\n                    }\n                } else if (active === 4) {\n                    if (i === 5 && player.challenges.active === 0) {\n                        lockText = 'Cannot be created';\n                    } else if (player.researchesExtra[5][0] < 1 && player.collapse.mass < global.collapseInfo.unlockB[i]) {\n                        lockText = `Unlocked at ${format(global.collapseInfo.unlockB[i])} Mass`;\n                    }\n                } else if (active === 6) {\n                    if (!player.inflation.vacuum) {\n                        lockText = 'Requires true Vacuum state';\n                    }\n                }\n                if (lockText !== undefined) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = lockText;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | Overlimit;\n                let free = false;\n                let multi = true;\n                if (active === 6) { //Universe\n                    costName = 'Merge score';\n                    currency = mergeScore;\n                    multi = false;\n                } else if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                    multi = false;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 1) {\n                        if (i === 1 && vacuum) { free = player.researchesExtra[1][2] >= 1 && player.strangeness[1][8] >= 1; }\n                    } else if (active === 2) {\n                        if (i !== 1) { e = 1; }\n                    } else if (active >= 3) {\n                        e = 0;\n                        if (active === 5) { extra = 4; }\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let buy = 1;\n                const cost = calculateBuildingsCost(i, active);\n                if (howMany !== 1 && multi) {\n                    const scaling = buildingsInfo.increase[active][i];\n                    if (free) {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).divide(cost).log(scaling).toNumber()) + 1, 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy - 1)); }\n                    } else {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy).minus('1').divide(scaling - 1)); }\n                    }\n                }\n\n                getId(`building${i}`).classList[cost.lessOrEqual(currency) ? 'add' : 'remove']('availableBuilding');\n                getId(`building${i}Btn`).textContent = `Need: ${format(cost, { padding: true })} ${costName}`;\n                getId(`building${i}BuyX`).textContent = format(buy, { padding: 'exponent' });\n            }\n            if (active === 1) {\n                const { dischargeInfo } = global;\n                getId('reset1Button').textContent = `Next goal is ${format(calculateEffects.dischargeCost(), { padding: true })} Energy`;\n                getQuery('#tritiumEffect > span').textContent = format(new Overlimit(effectsCache.tritium).multiply(speed), { padding: true });\n                getQuery('#dischargeEffect > span').textContent = format(dischargeInfo.base ** dischargeInfo.total, { padding: true });\n                getQuery('#energySpent > span').textContent = format(dischargeInfo.energyTrue - player.discharge.energy, { padding: 'exponent' });\n                if (vacuum) {\n                    const preonCap = calculateEffects.preonsHardcap(calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3());\n                    getQuery('#preonCap > span').textContent = format(preonCap * speed, { padding: true });\n                    getId('preonCapRatio').textContent = format(assignBuildingsProduction.S1Build1(true) / preonCap, { padding: true });\n                }\n            } else if (active === 2) {\n                getId('reset1Button').textContent = `Reset for ${format(global.vaporizationInfo.get, { padding: true })} Clouds`;\n                getQuery('#cloudEffect > span').textContent = format(calculateEffects.clouds(), { padding: true });\n                if (vacuum) {\n                    getQuery('#molesProduction > span').textContent = format(new Overlimit(effectsCache.tritium).divide(6.02214076e23 / speed), { padding: true });\n                }\n\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#vaporizationBoostTotal > span').textContent = format(calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber() * (rainAfter / rainNow) * storm, { padding: true });\n            } else if (active === 3) {\n                getQuery('#dustSoftcap > span').textContent = format(global.accretionInfo.dustSoft);\n                if (player.accretion.rank < global.accretionInfo.maxRank && player.strangeness[3][4] >= 2) { getId('reset1Button').textContent = `Next Rank after ${format(Math.max(global.accretionInfo.rankCost[player.accretion.rank] - buildings[0].total.toNumber(), 0), { padding: true })} Mass`; }\n                if (vacuum) {\n                    getQuery('#massProduction > span').textContent = format(assignBuildingsProduction.S1Build1() * 1.78266192e-33 * speed, { padding: true });\n                    getQuery('#submersionBoost > span').textContent = format(calculateEffects.submersion(), { padding: true });\n                    if (player.researchesExtra[3][5] < 1) {\n                        const dustCap = calculateEffects.dustHardcap();\n                        getQuery('#dustCap > span').textContent = format(dustCap, { padding: true });\n                        getId('dustCapRatio').textContent = format(assignBuildingsProduction.S3Build1(true) / dustCap, { padding: true });\n                    }\n                }\n            } else if (active === 4 || active === 5) {\n                const { collapseInfo } = global;\n                const calculateStar = calculateEffects.star;\n                const starEffect = [calculateStar[0](), effectsCache.star1, effectsCache.star2];\n                const starProd = buildingsInfo.producing[4];\n                let total = (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n                if (player.strangeness[4][4] < 2) {\n                    const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                    total *= new Overlimit(starProd[2]).multiply(calculateStar[0](true) / starEffect[0]).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber() * (calculateStar[1](true) / starEffect[1]) * (calculateStar[2](true) / starEffect[2]);\n                }\n\n                if (active === 4) {\n                    getId('reset1Button').textContent = `Collapse is at ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                    getQuery('#solarMassEffect > span').textContent = format(effectsCache.mass, { padding: true });\n                    for (let i = 0; i < 3; i++) {\n                        getId(`special${i + 1}Cur`).textContent = format(player.collapse.stars[i], { padding: 'exponent' });\n                        getId(`special${i + 1}Get`).textContent = format(collapseInfo.starCheck[i], { padding: 'exponent' });\n                        getQuery(`#star${i + 1}Effect > span`).textContent = format(starEffect[i], { padding: true });\n\n                        /* Fixes text movement */\n                        const mainQuery = getQuery(`#special${i + 1} > p`);\n                        const widthTest = mainQuery.getBoundingClientRect().width;\n                        if (specialHTML.cache.innerHTML.get(mainQuery) !== widthTest) {\n                            specialHTML.cache.innerHTML.set(mainQuery, widthTest);\n                            mainQuery.style.minWidth = `${widthTest}px`;\n                        }\n                    }\n                    getQuery('#collapseBoostTotal > span').textContent = format(total, { padding: true });\n                    if (vacuum) {\n                        getQuery('#mainCap > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getId('mainCapTill').textContent = format(collapseInfo.timeUntil, { padding: true });\n                    }\n                } else if (active === 5) {\n                    const { merge } = player;\n                    if (vacuum) {\n                        const { mergeInfo } = global;\n\n                        const groupsCost = assignResetInformation.mergeReward();\n                        const mergeEffects = [calculateEffects.reward[0]()];\n                        const remaining = calculateEffects.mergeMaxResets() - merge.resets;\n                        getId('reset1Button').textContent = `Can reset ${remaining} more time${remaining !== 1 ? 's' : ''}`;\n                        for (let i = 0; i < 1; i++) {\n                            getId(`special${i + 1}Cur`).textContent = format(merge.rewards[i], { padding: 'exponent' });\n                            getId(`special${i + 1}Get`).textContent = format(mergeInfo.checkReward[i], { padding: 'exponent' });\n                            getQuery(`#merge${i + 1}Effect > span`).textContent = format(mergeEffects[i], { padding: true });\n\n                            /* Fixes text movement */\n                            const mainQuery = getQuery(`#special${i + 1} > p`);\n                            const widthTest = mainQuery.getBoundingClientRect().width;\n                            if (specialHTML.cache.innerHTML.get(mainQuery) !== widthTest) {\n                                specialHTML.cache.innerHTML.set(mainQuery, widthTest);\n                                mainQuery.style.minWidth = `${widthTest}px`;\n                            }\n                        }\n                        getQuery('#mainCapHardS5 > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getQuery('#mergeBoostTotal > span').textContent = format((buildings[3].true / (mergeInfo.galaxies + 1) + 1) * (calculateEffects.reward[0](true) / mergeEffects[0]), { padding: true });\n\n                        const groupsTotal = player.researchesExtra[5][1] >= 2;\n                        getQuery('#merge1Effect > span > span:last-of-type').textContent = `${groupsCost}`;\n                        getQuery('#merge1Effect > span > span').textContent = `${(groupsTotal ? mergeInfo.galaxies : player.buildings[5][3].true) + groupsCost - groupsCost * (mergeInfo.checkReward[0] + (groupsTotal ? merge.rewards[0] + 1 : 1))}`;\n                    }\n                    if (player.strangeness[4][4] < 2) { getQuery('#mainCapPostS5 > span').textContent = format(collapseInfo[vacuum ? 'solarCap' : 'newMass'] * (calculateStar[2](true) / starEffect[2]), { padding: true }); }\n                    getQuery('#elementsProductionS5 > span').textContent = format(new Overlimit(starProd[1]).plus(starProd[2], starProd[3], starProd[4], starProd[5]).multiply(speed), { padding: true });\n                    getQuery('#collapseBoostTotalS5 > span').textContent = format(total, { padding: true });\n                    getQuery('#mainCapS5 > span').textContent = format(collapseInfo.newMass, { padding: true });\n                    getQuery('#timeSinceGalaxy > span').textContent = format(merge.since, { type: 'time' });\n                }\n            } else if (active === 6) {\n                if (vacuum) {\n                    getId('mergeScore0Cur').textContent = format(global.mergeInfo.galaxies, { padding: 'exponent' });\n                    getId('mergeScore1Cur').textContent = format(player.merge.rewards[0] * 2, { padding: 'exponent' });\n                    getId('mergeScoreTotal').textContent = format(mergeScore, { padding: 'exponent' });\n                    const remaining = calculateEffects.mergeMaxResets() - player.merge.resets;\n                    let post = mergeScore;\n                    if (remaining > 0) {\n                        const groupsCost = assignResetInformation.mergeReward();\n                        const allowed = player.buildings[5][3].true * (remaining - 1);\n                        post += player.buildings[5][3].true + allowed + //Galaxies\n                            Math.floor(player.researchesExtra[5][1] >= 2 ? ((global.mergeInfo.galaxies + allowed) / groupsCost - player.merge.rewards[0]) : (global.mergeInfo.checkReward[0] * remaining)) * 2; //Groups\n                    }\n                    getId('mergeScoreAfter').textContent = format(post, { padding: 'exponent' });\n\n                    getQuery('#mergeResetsS6 > span').textContent = `${player.merge.resets}`;\n                    getQuery('#mergeResetsS6 > span:last-of-type').textContent = `${calculateEffects.mergeMaxResets()}`;\n                }\n                getId('inflatonGainTrue').textContent = format(buildings[1].true + 1, { padding: 'exponent' });\n                getQuery('#universeTime > span').textContent = format(player.inflation.age, { type: 'time' });\n                getQuery('#universeTimeReal > span').textContent = format(player.time.universe, { type: 'time' });\n            }\n\n            if (!vacuum && (active >= 6 ? player.stage.current : active) < 4) {\n                getId('stageReward').textContent = format(calculateEffects.strangeGain(false), { padding: true });\n                if (active < 4) { getId('stageReset').textContent = stageResetCheck(active) ? 'Requirements are met' : `Requires ${active === 3 ? `${format(2.45576045e31)} Mass` : active === 2 ? `${format(1.19444e29)} Drops` : `${format(1.67133125e21)} Molecules`}`; }\n            } else { getId('stageReward').textContent = format(global.strangeInfo.quarksGain, { padding: true }); }\n            getQuery('#stageTime > span').textContent = format(player.stage.time, { type: 'time' });\n            getQuery('#stageTimeReal > span').textContent = format(player.time.stage, { type: 'time' });\n            getQuery('#globalSpeed > span').textContent = format(global.inflationInfo.globalSpeed, { padding: true });\n            if (player.time.offline < 0) { getQuery('#gameDisabled > span').textContent = format(-player.time.offline / 1000, { type: 'time' }); }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            const last = global.lastChallenge;\n            getChallengeDescription(last[0]);\n            if (last[0] === 0) { getChallengeReward(last[1]); }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            for (let i = 0; i < global.researchesInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researches'); }\n            for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researchesExtra'); }\n            for (let i = 0; i < global.researchesAutoInfo.name.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n            visualUpdateResearches(0, active, 'ASR');\n            getUpgradeDescription(global.lastUpgrade[active][0], global.lastUpgrade[active][1]);\n        } else if (trueSubtab === 'Elements') {\n            for (let i = 0; i < global.elementsInfo.name.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n            if (global.lastElement !== 0) { getUpgradeDescription(global.lastElement, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const interstellar = vacuum || (active >= 6 ? player.stage.current : active) >= 4;\n            const quarksGain = interstellar ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n            getId('strange0Gain').textContent = format(quarksGain, { padding: true });\n            getId('strange1Gain').textContent = format(calculateEffects.strangeGain(interstellar, 1), { padding: true });\n            getId('strangeRate').textContent = format(quarksGain / player.time.stage, { type: 'income' });\n            getId('strange0Cur').textContent = format(player.strange[0].current, { padding: true });\n            getId('strange1Cur').textContent = format(player.strange[1].current, { padding: true });\n            getId('stageTimeStrangeness').textContent = format(player.time.stage, { type: 'time' });\n            getId('stageTimeBestReset').textContent = format(player.history.stage.best[0], { type: 'time' });\n            if (interstellar) {\n                getId('strangePeak').textContent = format(player.stage.peak, { type: 'income' });\n                getId('strangePeakedAt').textContent = format(player.stage.peakedAt, { type: 'time' });\n            }\n            if (getId('strange1EffectsMain').dataset.open === 'true') {\n                const information = global.strangeInfo.strangeletsInfo;\n                getId('strange1Effect1Stat0').textContent = format(information[0] * 100, { padding: true });\n                if (interstellar) { getId('strange1Effect1Stat1').textContent = format(stageResetCheck(5) ? information[0] * quarksGain / player.time.stage : 0, { type: 'income' }); }\n                getId('strange1Effect2Stat').textContent = format(information[1], { padding: true });\n            }\n            if (getId('strange0EffectsMain').dataset.open === 'true') {\n                const { stageBoost } = global.strangeInfo;\n                const { strangeness } = player;\n\n                getId('strange0Effect1Stat').textContent = format(strangeness[1][6] >= 1 ? stageBoost[1] : 1, { padding: true });\n                getId('strange0Effect2Stat').textContent = format(strangeness[2][6] >= 1 ? stageBoost[2] : 1, { padding: true });\n                getId('strange0Effect3Stat').textContent = format(strangeness[3][7] >= 1 ? stageBoost[3] : 1, { padding: true });\n                getId('strange0Effect4Stat').textContent = format(strangeness[4][7] >= 1 ? stageBoost[4] : 1, { padding: true });\n                getId('strange0Effect5Stat').textContent = format(strangeness[5][7] >= 1 ? stageBoost[5] : 1, { padding: true });\n            }\n            for (let s = 1; s < global.strangenessInfo.length; s++) {\n                for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { visualUpdateResearches(i, s, 'strangeness'); }\n            }\n            getStrangenessDescription(global.lastStrangeness[0], global.lastStrangeness[1], 'strangeness');\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            const { milestonesInfo: info } = global;\n            const time = player.time[player.challenges.active === 0 && player.challenges.super ? 'vacuum' : 'stage'];\n            const timeLimited = vacuum || player.tree[0][4] < 1;\n            for (let s = 1; s < info.length; s++) {\n                for (let i = 0; i < info[s].need.length; i++) {\n                    getId(`milestone${i + 1}Stage${s}Current`).textContent = format(milestoneGetValue(i, s), { padding: true });\n                    getId(`milestone${i + 1}Stage${s}Required`).textContent = !vacuum && player.milestones[s][i] >= info[s].max[i] ? 'Maxed' :\n                        timeLimited && time > info[s].time[i] ? 'No time' : format(info[s].need[i], { padding: true });\n                }\n            }\n            getStrangenessDescription(global.lastMilestone[0], global.lastMilestone[1], 'milestones');\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Researches') {\n            for (let s = 0; s <= 1; s++) {\n                for (let i = 0; i < global.treeInfo[s].name.length; i++) { visualUpdateResearches(i, s, 'inflations'); }\n            }\n            getStrangenessDescription(global.lastInflation[0], global.lastInflation[1], 'inflations');\n        } else if (subtab.inflationCurrent === 'Milestones') {\n            getQuery('#inflationMilestone1 > span').textContent = format(1.5);\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const exportReward = player.time.export;\n            const conversion = Math.min(exportReward[0] / 86400_000, 1);\n            getId('exportQuarks').textContent = format((exportReward[1] / 2.5 + 1) * conversion, { padding: true });\n            getId('exportStrangelets').textContent = format(exportReward[2] / 2.5 * conversion, { padding: true });\n            const lastSave = global.lastSave / 1000;\n            if (lastSave >= 1) { getId('isSaved').textContent = `${format(lastSave, { type: 'time' })} ago`; }\n        } else if (subtab.settingsCurrent === 'Stats') {\n            getId('firstPlayAgo').textContent = format((player.time.updated - player.time.started) / 1000, { type: 'time' });\n            getId('onlineTotal').textContent = format(player.time.online / 1000, { type: 'time' });\n            getQuery('#stageResets > span').textContent = `${player.stage.resets}`;\n\n            const exportReward = player.time.export;\n            getId('exportQuarksMax').textContent = format(exportReward[1] / 2.5 + 1, { padding: true });\n            getId('exportStrangeletsMax').textContent = format(exportReward[2] / 2.5, { padding: true });\n            getId('exportTimeToMax').textContent = format((86400 - exportReward[0] / 1000) * (4.8 - player.tree[0][5]) / 4.8, { type: 'time' });\n            getId('exportQuarksStorage').textContent = format(exportReward[1], { padding: true });\n            getId('exportStrangeletsStorage').textContent = format(exportReward[2], { padding: true });\n            if (active === 1) {\n                getQuery('#dischargeStat > span').textContent = format(global.dischargeInfo.total);\n                getId('dischargeStatTrue').textContent = ` [${player.discharge.current}]`;\n                getQuery('#dischargeScaleStat > span').textContent = format(calculateEffects.dischargeScaling());\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    const buildings = player.buildings[s];\n                    const energyType = global.dischargeInfo.energyType[s];\n                    getId(`energyGainStage${s}Total`).textContent = format(global.dischargeInfo.energyStage[s], { padding: 'exponent' });\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Cur`).textContent = format(energyType[i] * buildings[i as 1].true, { padding: 'exponent' });\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Per`).textContent = format(energyType[i]);\n                    }\n                }\n                getQuery('#effectiveEnergyStat > span').textContent = format(calculateEffects.effectiveEnergy(), { padding: true });\n                getQuery('#maxEnergyStat > span').textContent = format(player.discharge.energyMax, { padding: 'exponent' });\n            } else if (active === 2) {\n                const clouds = calculateEffects.clouds(true).divide(calculateEffects.clouds()).toNumber();\n                getQuery('#cloudStat > span').textContent = format(clouds, { padding: true });\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const rain = rainAfter / rainNow;\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#rainStat > span').textContent = format(rain, { padding: true });\n                getQuery('#stormStat > span').textContent = format(storm, { padding: true });\n                getId('cloudEffectTotal').textContent = format(clouds * rain * storm, { padding: true });\n                getQuery('#maxCloudStat > span').textContent = format(player.vaporization.cloudsMax, { padding: true });\n\n                if (vacuum) {\n                    buildings[0].total.setValue(player.buildings[1][5].total).divide('6.02214076e23');\n                    buildings[0].trueTotal.setValue(player.buildings[1][5].trueTotal).divide('6.02214076e23');\n                }\n            } else if (active === 3) {\n                getId('currentRank').textContent = format(global.accretionInfo.effective);\n                getId('currentRankTrue').textContent = ` [${player.accretion.rank}]`;\n                if (vacuum) {\n                    buildings[0].trueTotal.setValue(player.buildings[1][0].trueTotal).multiply('1.78266192e-33');\n                }\n            } else if (active === 4 || active === 5) {\n                getQuery('#maxSolarMassStat > span').textContent = format(player.collapse.massMax, { padding: true });\n                if (active === 4) {\n                    const auto2 = player.strangeness[4][4] >= 2;\n                    const calculateStar = calculateEffects.star;\n                    const mass = calculateEffects.mass(true) / effectsCache.mass;\n                    getQuery('#solarMassStat > span').textContent = format(mass, { padding: true });\n                    let star0 = 1;\n                    if (!auto2) {\n                        const starProd = global.buildingsInfo.producing[4];\n                        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                        star0 = new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber();\n                    }\n                    const star1 = auto2 ? 1 : calculateStar[1](true) / effectsCache.star1;\n                    const star2 = auto2 ? 1 : calculateStar[2](true) / effectsCache.star2;\n                    if (!auto2) {\n                        getQuery('#star1Stat > span').textContent = format(star0, { padding: true });\n                        getQuery('#star2Stat > span').textContent = format(star1, { padding: true });\n                        getQuery('#star3Stat > span').textContent = format(star2, { padding: true });\n                    }\n                    const gamma = calculateEffects.S4Research4(true) / calculateEffects.S4Research4();\n                    getQuery('#gammaRayStat > span').textContent = format(gamma, { padding: true });\n                    const quasar = (1 + (calculateEffects.S5Upgrade2(true) - effectsCache.S5Upgrade2) / effectsCache.galaxyBase) ** player.buildings[5][3].true;\n                    getQuery('#quasarStat > span').textContent = format(quasar, { padding: true });\n                    getId('starTotal').textContent = format(mass * star0 * star1 * star2 * gamma * (quasar ** 2), { padding: true });\n                } else if (active === 5) {\n                    getQuery('#galaxyBase > span').textContent = format(effectsCache.galaxyBase, { padding: true });\n                    getId('trueStarsStat').textContent = format(global.collapseInfo.trueStars, { padding: 'exponent' });\n                    const stars = player.buildings[4];\n                    buildings[0].current.setValue(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current);\n                    buildings[0].total.setValue(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n                    buildings[0].trueTotal.setValue(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal);\n                    if (vacuum) {\n                        getQuery('#mergeResets > span').textContent = `${player.merge.resets}`;\n                        getQuery('#mergeResets > span:last-of-type').textContent = `${calculateEffects.mergeMaxResets()}`;\n                        assignResetInformation.mergeReward();\n                        const base = buildings[3].true / (global.mergeInfo.galaxies + 1) + 1;\n                        getQuery('#mergeBaseStat > span').textContent = format(base, { padding: true });\n                        const reward1 = calculateEffects.reward[0](true) / calculateEffects.reward[0]();\n                        getQuery('#merge1Stat > span').textContent = format(reward1, { padding: true });\n                        getId('mergeTotal').textContent = format(base * reward1, { padding: true });\n                    }\n                }\n            }\n            for (let i = 0; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}StatTotal`).textContent = format(buildings[i].total, { padding: true });\n                getId(`building${i}StatTrueTotal`).textContent = format(buildings[i].trueTotal, { padding: true });\n            }\n\n            getId('strange0StatTotal').textContent = format(player.strange[0].total, { padding: true });\n            getId('strange1StatTotal').textContent = format(player.strange[1].total, { padding: true });\n            getId('inflatonStatTotal').textContent = format(player.cosmon[0].total, { padding: 'exponent' });\n        }\n    }\n};\n\nexport const visualUpdate = () => {\n    const { tab, subtab } = global;\n    const { active, true: highest } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    if (!player.event) {\n        if (highest === 7) {\n            if (vacuum && player.buildings[6][1].true >= 2) { playEvent(10, false); }\n        } else if (highest === 6) {\n            if (player.merge.resets >= 1) { playEvent(8, false); }\n        } else if (highest === 5) {\n            if (active === 5) { playEvent(5, false); }\n        } else if (highest === 4) {\n            if (player.collapse.stars[1] >= 1) { playEvent(4, false); }\n        } else if (highest === 3) {\n            if (player.buildings[3][0].current.moreOrEqual('5e29')) { playEvent(3, false); }\n        } else if (highest === 2) {\n            if (new Overlimit(assignResetInformation.newClouds()).plus(player.vaporization.clouds).moreThan('1e4')) { playEvent(2, false); }\n        } else if (highest === 1) {\n            if (player.upgrades[1][9] === 1) { playEvent(1, false); }\n        }\n    }\n\n    if (globalSave.toggles[1]) { getId('ElementsTabBtn').style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n    if (active === 1) {\n        if (highest < 2) {\n            getId('footerStat2').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n            getId('upgradeTabBtn').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n        }\n    } else if (active === 2) {\n        getId('footerStat3').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n    }\n    if (specialHTML.bigWindow === 'log') {\n        updateLog();\n    } else if (specialHTML.bigWindow === 'hotkeys') {\n        if (highest < 7) {\n            if (highest < 2) {\n                getId('stageHotkey').style.display = player.upgrades[1][9] === 1 ? '' : 'none';\n                getId('dischargeHotkey').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n            }\n            if (highest < 3) { getId('vaporizationHotkey').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n            if (highest < 5) { getId('collapseHotkey').style.display = player.upgrades[4][0] === 1 ? '' : 'none'; }\n            if (highest < 6) { getId('galaxyHotkey').style.display = player.milestones[4][1] >= 8 ? '' : 'none'; }\n            getId('exitChallengeHotkey').style.display = highest >= 6 && player.stage.resets >= 1 ? '' : 'none';\n            getId('mergeHotkey').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n        }\n    }\n    if (globalSave.MDSettings[0]) {\n        let showReset1 = tab === 'stage' || tab === 'upgrade' || tab === 'Elements' || tab === 'inflation';\n        if (active === 4) {\n            getId('resetGalaxyFooter').style.display = showReset1 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n        } else if (active === 5) {\n            getId('resetCollapseFooter').style.display = tab === 'stage' ? '' : 'none';\n        } else if (active === 6) {\n            getId('resetMergeFooter').style.display = tab === 'stage' && player.upgrades[5][3] === 1 ? '' : 'none';\n        }\n        if (showReset1) {\n            if (active === 1) {\n                showReset1 = player.upgrades[1][5] === 1;\n            } else if (active === 2) {\n                showReset1 = player.upgrades[2][2] === 1;\n            } else if (active === 4) {\n                showReset1 = player.upgrades[4][0] === 1;\n            } else if (active === 5) {\n                showReset1 = player.upgrades[5][3] === 1;\n            } else if (active === 6) {\n                showReset1 = false;\n            }\n        }\n        getId('reset1Footer').style.display = showReset1 ? '' : 'none';\n        getId('stageFooter').style.display = (tab === 'stage' && (highest >= 2 || player.upgrades[1][9] === 1)) || tab === 'strangeness' ? '' : 'none';\n    }\n\n    if (tab === 'stage') {\n        if (subtab.stageCurrent === 'Structures') {\n            const buildings = player.buildings[active];\n            const ASR = player.ASR[active];\n\n            getId('stageTimeReal').style.display = player.stage.time !== player.time.stage ? '' : 'none';\n            getId('exportMaxed').style.display = player.time.export[0] >= 86400_000 && (highest >= 7 || player.strange[0].total > 0) ? '' : 'none';\n            getId('gameDisabled').style.display = player.time.offline < 0 ? '' : 'none';\n            if (highest < 7) {\n                if (highest < 2) { getId('toggleBuilding0').style.display = ASR >= 1 ? '' : 'none'; }\n                getId('resetStage').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}True`).style.display = buildings[i].current.notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`toggleBuilding${i}`).style.display = ASR >= i ? '' : 'none';\n            }\n            if (active === 1) {\n                getId('reset1Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual(vacuum ? '5' : '18') ? '' : 'none';\n                getId('building3').style.display = buildings[2].trueTotal.moreOrEqual('2') ? '' : 'none';\n                if (vacuum) {\n                    getId('building4').style.display = buildings[3].trueTotal.moreOrEqual('18') || player.upgrades[1][2] === 1 ? '' : 'none';\n                    getId('building5').style.display = buildings[4].trueTotal.moreOrEqual('2') ? '' : 'none';\n                }\n                getId('stageInfo').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('tritiumEffect').style.display = player.upgrades[1][8] === 1 ? '' : 'none';\n                getId('energySpent').style.display = !(player.accretion.rank >= 6 && player.strangeness[1][9] >= 1) || player.discharge.energy !== global.dischargeInfo.energyTrue ? '' : 'none';\n                if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[1][5] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset1Main').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual('4e2') || buildings[1].true >= 100 ? '' : 'none';\n                getId('building3').style.display = buildings[1].trueTotal.moreOrEqual('8e6') ? '' : 'none';\n                getId('building4').style.display = buildings[1].trueTotal.moreOrEqual('8e17') ? '' : 'none';\n                getId('building5').style.display = buildings[1].trueTotal.moreOrEqual('8e22') ? '' : 'none';\n                getId('cloudEffect').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('vaporizationBoostTotal').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building6').style.display = buildings[1].trueTotal.moreOrEqual('2e25') ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[2][2] === 1 ? '' : 'none'; }\n                } else { getId('stageInfo').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n\n                getId('buildings').style.display = player.accretion.rank >= 1 ? '' : 'none';\n                getId('building2').style.display = upgrades[2] === 1 || buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 || buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building4').style.display = upgrades[8] === 1 || buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('dustSoftcap').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = upgrades[11] === 1 || buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('dustCap').style.display = player.researchesExtra[3][5] < 1 ? '' : 'none';\n                    getId('submersionBoost').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                } else { getId('stageInfo').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none'; }\n                updateRankInfo();\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('reset1Main').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('specials').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special2').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special3').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building2').style.display = nova >= 1 ? '' : 'none';\n                getId('building3').style.display = nova >= 2 ? '' : 'none';\n                getId('building4').style.display = nova >= 3 ? '' : 'none';\n                getId('star1Effect').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Effect').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Effect').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('collapseBoostTotal').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = player.elements[26] >= 1 ? '' : 'none';\n                    getId('mainCap').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n                setRemnants();\n            } else if (active === 5) {\n                getId('reset1Main').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('specials').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('mergeEffects').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('mergeBoostTotal').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                } else {\n                    getId('buildings').style.display = player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7 ? '' : 'none';\n                    getId('building1').style.display = player.milestones[2][0] >= 7 ? '' : 'none';\n                    getId('building2').style.display = player.milestones[3][0] >= 7 ? '' : 'none';\n                    if (highest < 7) { getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together to create even bigger Structures. Might have severe consequences.'; }\n                }\n                getId('building3').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('mainCapPostS5').style.display = player.strangeness[4][4] < 2 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('timeSinceGalaxy').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            } else if (active === 6) {\n                if (vacuum) {\n                    getId('mergeScore').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                    getId('mergeScore1').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('mergeResetsS6').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getQuery('#mergeResetsS6 > span').style.color = `var(--${player.merge.resets >= calculateEffects.mergeMaxResets() ? 'green' : 'red'}-text)`;\n                }\n                getId('universeTimeReal').style.display = player.inflation.age !== player.time.universe ? '' : 'none';\n            }\n        } else if (subtab.stageCurrent === 'Advanced') {\n            if (global.lastChallenge[0] === 0) {\n                const progress = player.challenges.voidCheck;\n                getId('voidRewards').style.display = '';\n                getId('voidReward2').style.display = progress[1] >= 3 ? '' : 'none';\n                getId('voidReward3').style.display = progress[1] >= 2 ? '' : 'none';\n                getId('voidReward4').style.display = progress[3] >= 5 ? '' : 'none';\n                getId('voidReward5').style.display = progress[4] >= 5 ? '' : 'none';\n            } else { getId('voidRewards').style.display = 'none'; }\n            (getId('challengeName') as HTMLButtonElement).disabled = !(global.lastChallenge[0] === 0 && (highest >= 8 || (player.event && highest === 7)));\n            getId('challengesToggles').style.display = player.strangeness[5][6] >= (vacuum ? 1 : 2) ? '' : 'none';\n            if (highest < 7) { getId('challenge1').style.display = player.stage.resets >= 1 ? '' : 'none'; }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        const trueSubtab = tab === 'Elements' ? tab : subtab.upgradeCurrent;\n        if (trueSubtab === 'Upgrades') {\n            if (vacuum) {\n                getId('researchAuto1').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                getId('researchAuto2').style.display = player.accretion.rank >= 6 ? '' : 'none';\n            }\n            if (active === 1) {\n                const superposition = player.upgrades[1][5] === 1;\n\n                getId('upgrade7').style.display = superposition ? '' : 'none';\n                getId('upgrade8').style.display = superposition ? '' : 'none';\n                getId('upgrade9').style.display = superposition ? '' : 'none';\n                getId('upgrade10').style.display = superposition ? '' : 'none';\n                getId('stageResearches').style.display = superposition ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade11').style.display = superposition && player.strangeness[5][10] >= 1 ? '' : 'none';\n                    getId('extraResearches').style.display = superposition ? '' : 'none';\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra6').style.display = player.accretion.rank >= 6 && player.strangeness[5][10] >= 1 ? '' : 'none';\n                }\n                if (highest < 7) { getId('researches').style.display = superposition ? '' : 'none'; }\n            } else if (active === 2) {\n                const buildings = player.buildings[2];\n\n                getId('upgrade2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade3').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade5').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade6').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade7').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('upgrade8').style.display = buildings[5].trueTotal.moreThan('0') && player.strangeness[2][2] >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade9').style.display = buildings[6].trueTotal.moreThan('0') && player.strangeness[2][8] >= 3 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 7 && player.strangeness[5][10] >= 2 ? '' : 'none';\n                }\n                getId('research2').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research3').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research4').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research5').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('research6').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('extraResearches').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('researchExtra3').style.display = buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n                const planetesimal = player.buildings[3][2].trueTotal.moreThan('0');\n\n                getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n                getId('upgrade4').style.display = planetesimal ? '' : 'none';\n                getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n                getId('upgrade6').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade8').style.display = rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n                getId('research3').style.display = planetesimal ? '' : 'none';\n                getId('research4').style.display = planetesimal ? '' : 'none';\n                getId('research5').style.display = rank >= 3 ? '' : 'none';\n                getId('research6').style.display = rank >= 3 ? '' : 'none';\n                getId('research7').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('research8').style.display = rank >= 4 ? '' : 'none';\n                getId('research9').style.display = rank >= 5 ? '' : 'none';\n                getId('extraResearches').style.display = rank >= 2 ? '' : 'none';\n                getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n                getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n                getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade14').style.display = rank >= 7 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                    getId('researchExtra5').style.display = rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra6').style.display = rank >= 6 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                } else {\n                    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n                    getId('stageResearches').style.display = rank >= 1 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const { strangeness } = player;\n                const stars = player.collapse.stars;\n                const galaxy = player.researchesExtra[5][0] >= 1;\n\n                getId('upgrade4').style.display = strangeness[4][2] >= 3 ? '' : 'none';\n                getId('upgrade5').style.display = strangeness[4][9] >= 1 ? '' : 'none';\n                getId('research4').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 1 ? '' : 'none';\n                getId('research5').style.display = galaxy || stars[2] > 0 ? '' : 'none';\n                getId('research6').style.display = (galaxy || stars[2] > 0) && strangeness[4][9] >= 3 ? '' : 'none';\n                getId('researchExtra2').style.display = galaxy || stars[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 2 ? '' : 'none';\n                getId('researchExtra4').style.display = (galaxy || stars[1] > 0) && strangeness[4][9] >= 2 ? '' : 'none';\n            } else if (active === 5) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (vacuum) {\n                    const protogalaxy = player.accretion.rank >= 7 && highest >= 7;\n                    getId('upgrade4').style.display = galaxy && player.accretion.rank >= 7 ? '' : 'none';\n                    getId('upgrade5').style.display = protogalaxy ? '' : 'none';\n                    getId('upgrade6').style.display = protogalaxy ? '' : 'none';\n                    getId('upgrade7').style.display = protogalaxy ? '' : 'none';\n                    getId('research3').style.display = protogalaxy ? '' : 'none';\n                    getId('research4').style.display = protogalaxy ? '' : 'none';\n                    getId('research5').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra2').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra3').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra4').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra5').style.display = protogalaxy ? '' : 'none';\n                } else {\n                    const nebula = player.milestones[2][0] >= 7;\n                    const cluster = player.milestones[3][0] >= 7;\n\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                    getId('upgrade4').style.display = galaxy && player.milestones[5][1] >= 8 ? '' : 'none';\n                    getId('stageResearches').style.display = nebula || cluster ? '' : 'none';\n                    getId('research1').style.display = nebula ? '' : 'none';\n                    getId('research2').style.display = cluster ? '' : 'none';\n                    getId('extraResearches').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                }\n                getId('upgrade3').style.display = galaxy ? '' : 'none';\n            } else if (active === 6) {\n                getId('upgrades').style.display = 'none';\n                getId('stageResearches').style.display = 'none';\n            }\n        } else if (trueSubtab === 'Elements') {\n            const upgrades = player.upgrades[4];\n            const neutron = player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1);\n\n            let columns = 18 - (upgrades[3] === 1 ? 0 : 2) - (upgrades[4] === 1 ? (player.buildings[6][1].true > 1 ? 0 : 1) : 2);\n            getId('elementsGrid').style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = neutron ? '' : 'none'; }\n            if (!neutron) {\n                columns = 8;\n            } else if (player.collapse.show < 23) { //26 - showAhead\n                for (let i = 26; i > Math.max(player.collapse.show + 3, 10); i--) { getId(`element${i}`).style.display = 'none'; }\n                columns = Math.max(player.collapse.show - 9, 8); //min + show + showAhead - 20\n            }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n            for (let i = 29; i < global.elementsInfo.name.length; i++) {\n                getId(`element${i}`).style.display = upgrades[4] === 1 && player.buildings[6][1].true >= i - 29 ? '' : 'none';\n            }\n            document.documentElement.style.setProperty('--elements-columns', `${columns}`);\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab.strangenessCurrent === 'Matter') {\n            const universes = player.buildings[6][1].current;\n            const show1 = global.sessionToggles[1] || universes.lessThan('2');\n            const show2 = global.sessionToggles[1] || universes.lessThan('3');\n            const show3 = global.sessionToggles[1] || universes.lessThan('4');\n            getId('strange1').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            getId('strange1Unlocked').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            if (vacuum) {\n                const bound = player.strangeness[5][3] >= 1;\n                const voidProgress = player.challenges.void;\n\n                getId('strange5Stage1').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange9Stage1').style.display = (universes.moreOrEqual('1') ? global.sessionToggles[1] : voidProgress[1] >= 2) ? '' : 'none';\n                getId('strange10Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage2').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange9Stage2').style.display = voidProgress[2] >= 1 ? '' : 'none';\n                getId('strange10Stage2').style.display = voidProgress[2] >= 2 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage3').style.display = voidProgress[4] >= 4 ? '' : 'none';\n                getId('strange10Stage3').style.display = voidProgress[5] >= 1 ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange10Stage4').style.display = voidProgress[4] >= 5 ? '' : 'none';\n                getId('strange1Stage5').style.display = bound ? '' : 'none';\n                getId('strange2Stage5').style.display = bound ? '' : 'none';\n                getId('strange5Stage5').style.display = (universes.moreOrEqual('2') ? show1 : voidProgress[4] >= 1) && bound ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && bound ? '' : 'none';\n                getId('strange8Stage5').style.display = bound ? '' : 'none';\n                getId('strange9Stage5').style.display = (universes.moreOrEqual('6') ? global.sessionToggles[1] : voidProgress[3] >= 5) ? '' : 'none';\n                getId('strange10Stage5').style.display = voidProgress[3] >= 6 ? '' : 'none';\n                getId('strange11Stage5').style.display = voidProgress[2] >= 3 ? '' : 'none';\n            } else {\n                const { milestones } = player;\n                const strange5 = milestones[4][0] >= 8;\n                const firstTwo = milestones[2][0] >= 7 || milestones[3][0] >= 7;\n\n                getId('strange5Stage1').style.display = show3 ? '' : 'none';\n                getId('strange7Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 ? '' : 'none';\n                getId('strange7Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 ? '' : 'none';\n                getId('strange8Stage4').style.display = strange5 ? '' : 'none';\n                getId('strange1Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange2Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange3Stage5').style.display = milestones[5][0] >= 8 ? '' : 'none';\n                getId('strange4Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange5Stage5').style.display = show1 && milestones[4][1] >= 8 ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && firstTwo ? '' : 'none';\n                getId('strange9Stage5').style.display = universes.moreOrEqual('6') ? '' : 'none';\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}5`).style.display = strange5 ? '' : 'none';\n                if (globalSave.MDSettings[0] && (global.debug.MDStrangePage === 5 ? !strange5 : (highest < 6 && player.stage.resets < global.debug.MDStrangePage + 3))) { MDStrangenessPage(1); }\n            }\n            getId('strange6Stage1').style.display = show1 ? '' : 'none';\n            getId('strange6Stage2').style.display = show1 ? '' : 'none';\n            getId('strange6Stage3').style.display = show1 ? '' : 'none';\n            getId('strange7Stage3').style.display = show2 ? '' : 'none';\n            getId('strange6Stage4').style.display = show1 ? '' : 'none';\n            getId('strange7Stage4').style.display = show2 ? '' : 'none';\n            getId('strange7Stage5').style.display = global.sessionToggles[1] || universes.lessThan('5') ? '' : 'none';\n        } else if (subtab.strangenessCurrent === 'Milestones') {\n            if (!vacuum) {\n                const milestonesS4 = player.milestones[4];\n                getId('milestone1Stage5Div').style.display = milestonesS4[0] >= 8 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = milestonesS4[1] >= 8 ? '' : 'none';\n                if (global.stageInfo.activeAll.includes(4)) { getId('milestonesStage5Main').style.display = milestonesS4[0] >= 8 ? '' : 'none'; }\n                if (global.stageInfo.activeAll.includes(5)) { getId('milestone2Stage5Main').style.display = milestonesS4[1] >= 8 ? '' : 'none'; }\n            }\n        }\n    } else if (tab === 'inflation') {\n        if (subtab.inflationCurrent === 'Researches') {\n            const supervoid = player.challenges.supervoid;\n            getId('inflation6Tree1').style.display = supervoid[3] >= 3 ? '' : 'none';\n            getId('inflationsTree2').style.display = supervoid[1] >= 1 ? '' : 'none';\n            getId('inflation1Tree2').style.display = supervoid[1] >= 1 ? '' : 'none';\n        } else if (subtab.inflationCurrent === 'Milestones') {\n            const universes = player.buildings[6][1].current;\n            const supervoid = player.challenges.supervoid;\n            getId('inflationSupervoid1').style.display = supervoid[1] >= 2 ? '' : 'none';\n            getId('inflationSupervoid2').style.display = supervoid[3] >= 1 ? '' : 'none';\n            getId('inflationSupervoid3').style.display = supervoid[3] >= 2 ? '' : 'none';\n            for (let i = 1; i <= 6; i++) {\n                getId(`inflationMilestone${i}`).classList[universes.moreOrEqual(i) ? 'remove' : 'add']('uncompleted');\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab.settingsCurrent === 'Settings') {\n            const { researchesAuto, strangeness } = player;\n\n            getQuery('#exportReward > span:last-of-type').style.display = player.challenges.active !== null && global.challengesInfo[player.challenges.active].resetType !== 'stage' ? '' : 'none';\n            getId('collapsePointsMax').textContent = strangeness[5][4] >= 1 ? 'There is no maximum value' : 'Maximum value is 40';\n            getId('exportStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            getId('toggleAuto0').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            getId('toggleAuto0Main').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            if (!vacuum) { getId('stageAutoInterstellar').style.display = strangeness[5][6] >= 2 ? '' : 'none'; }\n            getId('autoTogglesUpgrades').style.display = researchesAuto[0] >= 1 || researchesAuto[1] >= 2 ? '' : 'none';\n            getId('autoToggle5').style.display = researchesAuto[0] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[0] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('autoToggle8').style.display = researchesAuto[1] >= 2 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][4] >= 1 || (researchesAuto[2] >= 1 && (vacuum || player.stage.current === 1)) ? '' : 'none';\n            const showAuto2 = strangeness[2][4] >= 1 || (vacuum ? researchesAuto[2] >= 3 : (researchesAuto[2] >= 1 && player.stage.current === 2));\n            getId('toggleAuto2').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto2Main').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 || (vacuum ? researchesAuto[2] >= 2 : (researchesAuto[2] >= 1 && player.stage.current === 3)) ? '' : 'none';\n            const showAuto4 = strangeness[4][4] >= 1 || (vacuum ? researchesAuto[2] >= 4 : (researchesAuto[2] >= 1 && player.stage.current >= 4));\n            getId('toggleAuto4').style.display = showAuto4 ? '' : 'none';\n            getId('toggleAuto4Main').style.display = showAuto4 ? '' : 'none';\n            const showAuto5 = strangeness[5][9] >= 1 || researchesAuto[2] >= 5;\n            getId('toggleAuto9').style.display = showAuto5 ? '' : 'none';\n            getId(vacuum ? 'toggleAuto9Main' : 'mergeToggleReset').style.display = showAuto5 ? '' : 'none';\n            if (highest < 7) {\n                if (highest < 2) { getId('resetToggles').style.display = player.upgrades[1][5] === 1 ? '' : 'none'; }\n                if (highest < 3) { getId('vaporizationToggleReset').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n                if (highest < 5) {\n                    getId('collapseToggleReset').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    getId('elementsAsTab').style.display = player.upgrades[4][1] === 1 ? '' : 'none';\n                }\n                if (highest < 6) { getId('saveFileNameGalaxy').style.display = player.milestones[4][1] >= 8 ? '' : 'none'; }\n                getId('stageToggleReset').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                getId('vaporizationExtra').style.display = player.challenges.void[4] >= 1 ? '' : 'none';\n                getId('exportReward').style.display = player.strange[0].total > 0 ? '' : 'none';\n                getId('mergeToggleReset').style.display = vacuum && player.upgrades[5][3] === 1 ? '' : 'none';\n            }\n        } else if (subtab.settingsCurrent === 'History') {\n            updateStageHistory();\n            updateVacuumHistory();\n        } else if (subtab.settingsCurrent === 'Stats') {\n            const { strangeness } = player;\n            const buildings = player.buildings[active];\n\n            getId('firstPlay').textContent = new Date(player.time.started).toLocaleString();\n            getId('exportStatsStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            if (highest < 7) {\n                getId('stageResets').style.display = player.stage.resets >= 1 ? '' : 'none';\n                getId('exportStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal.moreThan('0') ? '' : 'none';\n            }\n            getId('strangeAllStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            getId('strange1Stats').style.display = player.strange[1].total > 0 ? '' : 'none';\n\n            getId('maxSolarMassStat').style.display = active === 4 || active === 5 ? '' : 'none';\n            if (active === 1) {\n                getId('dischargeStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('dischargeStatTrue').style.display = player.discharge.current !== global.dischargeInfo.total ? '' : 'none';\n                getId('dischargeScaleStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    let anyUnlocked = false;\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        const unlocked = player.buildings[s][i].trueTotal.moreThan('0');\n                        if (!anyUnlocked) { anyUnlocked = unlocked; }\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}`).style.display = unlocked ? '' : 'none';\n                    }\n                    getId(s === 1 ? 'energyGainStats' : `energyGainStage${s}`).style.display = anyUnlocked ? '' : 'none';\n                }\n                getId('effectiveEnergyStat').style.display = calculateEffects.effectiveEnergy() !== player.discharge.energy ? '' : 'none';\n                if (highest < 2) {\n                    getId('maxEnergyStat').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                    getId('energyGainStats').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                getId('vaporizationBoost').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rainStat').style.display = player.researchesExtra[2][1] >= 1 ? '' : 'none';\n                getId('stormStat').style.display = player.researchesExtra[2][2] >= 1 ? '' : 'none';\n                getId('maxCloudStat').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                getId('currentRankTrue').style.display = global.accretionInfo.effective !== player.accretion.rank ? '' : 'none';\n                if (vacuum) {\n                    getId('rankStat0').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n                }\n                for (let i = 1; i < global.accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = player.accretion.rank >= i ? '' : 'none'; }\n            } else if (active === 4) {\n                const auto2 = strangeness[4][4] >= 2;\n                getId('star1Stat').style.display = !auto2 && buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Stat').style.display = !auto2 && buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Stat').style.display = !auto2 && buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('gammaRayStat').style.display = player.researchesExtra[5][0] >= 1 || player.collapse.stars[2] >= 1 ? '' : 'none';\n                getId('quasarStat').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n            } else if (active === 5) {\n                getId('galaxyBase').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('mergeResets').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getQuery('#mergeResets > span').style.color = `var(--${player.merge.resets >= calculateEffects.mergeMaxResets() ? 'green' : 'red'}-text)`;\n                    getId('mergeBoost').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('merge1Stat').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                }\n            }\n        }\n    }\n};\nexport const visualTrueStageUnlocks = () => {\n    const highest = player.stage.true;\n    const superUnlocked = highest >= 8 || (player.event && highest === 7);\n\n    getId('stageRewardOld').style.display = highest < 5 ? '' : 'none';\n    getId('stageRewardNew').style.display = highest >= 5 ? '' : 'none';\n    getId('autoWaitMain').style.display = highest >= 3 ? '' : 'none';\n    getId('researchAuto3').style.display = highest >= 7 ? '' : 'none';\n    getId(globalSave.MDSettings[0] ? 'toggleHover0' : 'researchToggles').style.display = highest >= 2 ? '' : 'none';\n    getId('toggleMax0').style.display = highest >= 4 ? '' : 'none';\n    getId('globalSpeed').style.display = highest >= 7 ? '' : 'none';\n    (getId('rewardsType') as HTMLButtonElement).disabled = !superUnlocked;\n    getId('strange1GlobalSpeedInfo').style.display = highest >= 7 ? '' : 'none';\n    getQuery('#strangenessHeader > span:last-of-type').style.display = highest >= 7 ? '' : 'none';\n    getId('inflation4Tree1').style.display = superUnlocked ? '' : 'none';\n    getId('inflation5Tree1').style.display = superUnlocked ? '' : 'none';\n    getId('inflationPermanent').style.display = superUnlocked ? '' : 'none';\n    getQuery('#resetToggles > h2 > span').style.display = highest >= 5 ? '' : 'none';\n    getId('themeArea').style.display = highest >= 2 || globalSave.theme !== null ? '' : 'none';\n    getId('switchTheme2').style.display = highest >= 2 ? '' : 'none';\n    getId('switchTheme3').style.display = highest >= 3 ? '' : 'none';\n    getId('switchTheme4').style.display = highest >= 4 ? '' : 'none';\n    getId('switchTheme5').style.display = highest >= 5 ? '' : 'none';\n    getId('switchTheme6').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameStrange').style.display = highest >= 5 ? '' : 'none';\n    getId('saveFileNameVacuum').style.display = highest >= 6 ? '' : 'none';\n    getId('saveFileNameUniverse').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameInflaton').style.display = highest >= 7 ? '' : 'none';\n    getId('autoStageSwitch').style.display = highest >= 5 ? '' : 'none';\n    getId('inflatonStat').style.display = highest >= 7 ? '' : 'none';\n    getId('vacuumHistory').style.display = highest >= 7 ? '' : 'none';\n    if (highest >= 2) {\n        getId('toggleBuilding0').style.display = '';\n        getId('resetToggles').style.display = '';\n        getId('maxEnergyStat').style.display = '';\n        getId('upgradeTabBtn').style.display = '';\n    }\n    if (highest >= 5) {\n        getId('elementsAsTab').style.display = '';\n    }\n    if (highest >= 6) {\n        getId('dischargeToggleReset').style.display = '';\n        getId('saveFileNameGalaxy').style.display = '';\n        for (let s = 2; s <= 4; s++) {\n            getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            getId(`milestone2Stage${s}Div`).style.display = '';\n        }\n    }\n    if (highest >= 7) {\n        getId('stageSelect').style.display = '';\n        getId('resets').style.display = '';\n        getId('resetStage').style.display = '';\n        getId('challenge1').style.display = '';\n        getId('researches').style.display = '';\n        getId('vaporizationExtra').style.display = '';\n        getId('stageToggleReset').style.display = '';\n        getId('vaporizationToggleReset').style.display = '';\n        getId('rankToggleReset').style.display = '';\n        getId('collapseToggleReset').style.display = '';\n        getId('strangenessTabBtn').style.display = '';\n        getId('stageResets').style.display = '';\n        getId('exportReward').style.display = '';\n        getId('exportStats').style.display = '';\n        if (!globalSave.toggles[4]) {\n            getId('globalStats').style.display = '';\n            getId('hideGlobalStats').style.display = '';\n        }\n    }\n\n    if (specialHTML.bigWindow === 'hotkeys') {\n        getId('stageRightHotkey').style.display = highest >= 5 ? '' : 'none';\n        getId('stageLeftHotkey').style.display = highest >= 5 ? '' : 'none';\n        if (globalSave.MDSettings[0]) { getId('stageSwipe').style.display = highest >= 5 ? '' : 'none'; }\n        if (highest >= 2) { getId('stageHotkey').style.display = ''; }\n        if (highest >= 7) { getId('exitChallengeHotkey').style.display = ''; }\n    }\n};\n\nexport const getUpgradeDescription = (index: number | null, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements') => {\n    if (type === 'elements') {\n        if (index === null) {\n            getId('elementText').textContent = 'Hover to see.';\n            getId('elementEffect').textContent = 'Hover to see.';\n            getId('elementCost').textContent = 'Stardust.';\n            return;\n        }\n        const pointer = global.elementsInfo;\n\n        getId('elementText').textContent = `${pointer.name[index]}.`;\n        getId('elementEffect').textContent = player.elements[index] > 0 || (player.collapse.show >= index && index !== 0) ? pointer.effectText[index]() : 'Effect is not yet known.';\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' :\n            player.elements[index] > 0 ? 'Awaiting Collapse.' :\n            index === 0 ? 'Unknown.' : `${format(pointer.startCost[index])} Stardust.${globalSave.MDSettings[0] ? ' (Hold to create)' : ''}`;\n        return;\n    }\n\n    const stageIndex = player.stage.active;\n    if (index === null) {\n        getId('upgradeText').textContent = 'Hover to see.';\n        getId('upgradeEffect').textContent = 'Hover to see.';\n        getId('upgradeCost').textContent = `${global.stageInfo.costName[stageIndex]}.`;\n        return;\n    }\n    if (type === 'upgrades') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const notEnoughUniverses = stageIndex === 5 && global.mergeInfo.unlockU[index] > player.buildings[6][1].true;\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = notEnoughUniverses ? 'Effect will be revealed once requirements are met.' : pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] === 1 ? 'Created.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 && ((index === 3 || index === 4) && player.buildings[1][(player.inflation.vacuum ? 4 : 2) + (index === 3 ? 0 : 1)].total.equal('0')) ? `Requires any amount of ${index === 3 ? 'Atoms' : 'Molecules'} to create.` :\n            stageIndex === 2 && index === 0 && player.buildings[2][1].true < 1 && player.buildings[2][2].true < 1 ? 'Requires any amount of self-made Drops to create.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass && player.researchesExtra[5][0] < 1 ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            notEnoughUniverses ? `Unlocked at ${global.mergeInfo.unlockU[index]} self-made Universes.` :\n            `${format(pointer.startCost[index])} ${global.stageInfo.costName[stageIndex]}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex][index];\n        if (type === 'researchesExtra' && stageIndex === 4 && index === 0) { pointer.name[0] = ['Nova', 'Supernova', 'Hypernova'][Math.min(level, 2)]; }\n        const notEnoughUniverses = stageIndex === 5 && global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index] > player.buildings[6][1].true;\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = notEnoughUniverses ? 'Effect will be revealed once requirements are met.' : pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else if (stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass && player.researchesExtra[5][0] < 1) {\n            getId('upgradeCost').textContent = `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.`;\n        } else if (notEnoughUniverses) {\n            getId('upgradeCost').textContent = `Unlocked at ${global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index]} self-made Universes.`;\n        } else {\n            let newLevels = 1;\n            let cost: number | Overlimit = pointer.cost[index] as number;\n            if (player.toggles.max[0] && pointer.max[index] > 1) {\n                const scaling = pointer.scaling[index] as number;\n                if (stageIndex === 1) {\n                    if (player.accretion.rank >= 6 && player.strangeness[1][9] >= 1) {\n                        newLevels = Math.min(Math.max(Math.floor((player.discharge.energy - cost) / scaling + 1), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost += (newLevels - 1) * scaling; }\n                    } else {\n                        const simplify = cost - scaling / 2;\n                        newLevels = Math.min(Math.max(Math.floor(((simplify ** 2 + 2 * scaling * player.discharge.energy) ** 0.5 - simplify) / scaling), 1), pointer.max[index] - level);\n                        if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                    }\n                } else {\n                    const minusOne = typeof scaling === 'string' ? scaling : scaling - 1;\n                    const currency = stageIndex === 2 ? player.buildings[2][1].current : stageIndex === 3 ? player.buildings[3][0].current : player.buildings[4][0].current;\n                    newLevels = Math.min(Math.max(Math.floor(new Overlimit(currency).multiply(minusOne).divide(cost).plus('1').log(scaling).toNumber()), 1), pointer.max[index] - level);\n                    if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(minusOne).multiply(cost); }\n                }\n            }\n\n            getId('upgradeCost').textContent = `${format(cost)} ${global.stageInfo.costName[stageIndex]}.${newLevels > 1 ? ` [x${newLevels}]` : ''}`;\n        }\n    } else if (type === 'researchesAuto') {\n        const pointer = global.researchesAutoInfo;\n        let level = player.researchesAuto[index];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else {\n            const autoStage = pointer.autoStage[index][level];\n            if (index === 1) { //Level from here can only be used for cost\n                if (player.strangeness[4][6] >= 1) { level--; }\n            } else if (index === 2) {\n                if (player.strangeness[1][4] >= 1) { level--; }\n                if (player.strangeness[2][4] >= 1) { level--; }\n                if (player.strangeness[3][4] >= 1) { level--; }\n                if (player.strangeness[4][4] >= 1) { level--; }\n                if (player.strangeness[5][9] >= 1) { level--; }\n            }\n            if (index === 1 && player.strangeness[4][6] >= 1) { level = Math.max(level - 1, 0); }\n            getId('upgradeCost').textContent = !(autoStage === stageIndex || (stageIndex === 5 && autoStage === 4)) ? `This level can only be created within '${global.stageInfo.word[autoStage]}'.` :\n                `${format(pointer.costRange[index][Math.max(level, 0)])} ${global.stageInfo.costName[stageIndex]}.`;\n        }\n    } else if (type === 'ASR') {\n        const pointer = global.ASRInfo;\n        const level = player.ASR[stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name}. (Level ${level} out of ${pointer.max[stageIndex]})`;\n        getId('upgradeEffect').textContent = pointer.effectText();\n        getId('upgradeCost').textContent = level >= pointer.max[stageIndex] ? 'Maxed.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 ? \"Cannot be created without 'Superposition' Upgrade\" :\n            stageIndex === 3 && player.accretion.rank < 1 ? \"Cannot be created at 'Ocean world' Rank.\" :\n            `${format(pointer.costRange[stageIndex][level])} ${global.stageInfo.costName[stageIndex]}.`;\n    }\n};\n\nexport const getStrangenessDescription = (index: number | null, stageIndex: number, type: 'strangeness' | 'milestones' | 'inflations') => {\n    if (type === 'inflations') {\n        if (index === null) {\n            getId('inflationText').textContent = 'Hover to see.';\n            getId('inflationEffect').textContent = 'Hover to see.';\n            getId('inflationCost').textContent = 'Inflatons.';\n            return;\n        }\n        const pointer = global.treeInfo[stageIndex];\n        const level = player.tree[stageIndex][index];\n\n        getId('inflationText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('inflationEffect').textContent = pointer.effectText[index]();\n        getId('inflationCost').textContent = `${level >= pointer.max[index] ? 'Fully activated' : pointer.cost[index] === 0 ? 'None' : `${format(pointer.cost[index])} Inflatons`}.`;\n        return;\n    }\n    const stageText = getId(`${type}Stage`);\n    if (index !== null) {\n        stageText.style.color = `var(--${global.stageInfo.textColor[stageIndex]}-text)`;\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n    } else { stageText.textContent = ''; }\n    if (type === 'strangeness') {\n        if (index === null) {\n            getId('strangenessText').textContent = 'Hover to see.';\n            getId('strangenessEffect').textContent = 'Hover to see.';\n            getId('strangenessCost').textContent = 'Strange quarks.';\n            return;\n        }\n        const pointer = global.strangenessInfo[stageIndex];\n        const level = player.strangeness[stageIndex][index];\n\n        getId('strangenessText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('strangenessEffect').textContent = pointer.effectText[index]();\n        getId('strangenessCost').textContent = level >= pointer.max[index] ? 'Maxed.' : `${format(pointer.cost[index])} Strange quarks.`;\n    } else {\n        let text;\n        if (index === null) {\n            getId('milestonesText').textContent = 'Hover to see.';\n            text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"blueText\">Time limit: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"darkvioletText\">${player.inflation.vacuum ? 'Effect' : 'Unlock'}: <span class=\"greenText\">Hover to see.</span></p>`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n            const level = player.milestones[stageIndex][index];\n            getId('milestonesText').textContent = `${pointer.name[index]}. (Tier ${level}${player.inflation.vacuum ? '' : ` out of ${pointer.max[index]}`})`;\n            if (player.inflation.vacuum) {\n                const isActive = player.challenges.active === 0 && player.tree[0][4] >= 1;\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive ? player.time[player.challenges.super ? 'vacuum' : 'stage'] : 0), { type: 'time' })} ${isActive ? 'remains ' : ''}to increase this tier within ${player.challenges.super ? 'Supervoid' : 'Void'}.</span></p>\n                <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span>${player.tree[0][4] < 1 ? ' <span class=\"redText\">(Disabled)</span>' : ''}</p>`;\n            } else if (level < pointer.max[index]) {\n                const isActive = global.stageInfo.activeAll.includes(Math.min(stageIndex, 4));\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.time[index] - (isActive && player.tree[0][4] < 1 ? player.time.stage : 0), { type: 'time' })} ${isActive && player.tree[0][4] < 1 ? 'remains ' : ''}to complete this tier within ${isActive ? 'current' : global.stageInfo.word[index === 0 && stageIndex === 5 ? 4 : stageIndex]} Stage.</span></p>\n                <p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Main reward unlocked after ${pointer.max[index] - level} more completions.</span></p>`;\n            } else { text = `<p class=\"darkvioletText\">Reward: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n        }\n\n        const multilineID = getId('milestonesMultiline');\n        if (specialHTML.cache.innerHTML.get(multilineID) !== text) {\n            specialHTML.cache.innerHTML.set(multilineID, text);\n            multilineID.innerHTML = text;\n        }\n        const container = multilineID.parentElement as HTMLElement;\n        const heightTest = container.getBoundingClientRect().height;\n        if (specialHTML.cache.innerHTML.get(container) !== heightTest) {\n            specialHTML.cache.innerHTML.set(container, heightTest);\n            container.style.minHeight = `${heightTest}px`;\n        }\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    const info = global.challengesInfo[index as 0];\n    const isActive = player.challenges.active === index;\n    const nameID = getId('challengeName');\n    nameID.textContent = info.name;\n    nameID.style.color = `var(--${info.color}-text)`;\n    getId('challengeActive').style.display = isActive ? '' : 'none';\n\n    let text;\n    if (index === 1) {\n        const gain = player.inflation.vacuum ? player.buildings[6][1].true + 1 : 1;\n        text = `<p class=\"orchidText\">Vacuum state: <span class=\"${player.inflation.vacuum ? 'greenText\">true' : 'redText\">false'}</span> | Resets: <span class=\"darkorchidText\">${player.inflation.resets}</span></p>\n        ${player.stage.true >= 7 || player.event ? `<p class=\"darkvioletText\">Current Inflatons gain: <span class=\"${player.inflation.vacuum ? 'green' : 'red'}Text\">${format(gain, { padding: 'exponent' })}</span> | Rate: <span class=\"${player.inflation.vacuum ? 'green' : 'red'}Text\">${format(gain / player.time.vacuum, { type: 'income' })}</span></p>` : ''}\n        <p class=\"orchidText\">Time since last reset: <span class=\"darkorchidText\">${format(player.inflation.time, { type: 'time' })}</span>${player.inflation.time !== player.time.vacuum ? ` (Real: <span class=\"darkorchidText\">${format(player.time.vacuum, { type: 'time' })}</span>)` : ''}</p>`;\n    } else {\n        text = `<p class=\"whiteText\">${info.description()}</p>\n        <div><h4 class=\"${info.color}Text bigWord\">Effect:</h4>\n        <div>${info.effectText()}</div>\n        <p class=\"blueText\">${isActive ? 'Remaining time' : 'Time limit'} is <span class=\"cyanText\">${format(info.time - (isActive ? player.time[info.resetType] : 0), { type: 'time' })}</span></p></div>`;\n    }\n\n    if (specialHTML.cache.innerHTML.get('challengeMultiline') !== text) {\n        specialHTML.cache.innerHTML.set('challengeMultiline', text);\n        getId('challengeMultiline').innerHTML = text;\n    }\n};\n\n/** Void only at the moment */\nexport const getChallengeReward = (index: number) => {\n    const supervoid = global.sessionToggles[0];\n    const info = global.challengesInfo[0];\n    const reward = info.rewardText[supervoid ? 1 : 0][index];\n    const current = player.challenges[supervoid ? 'supervoidMax' : 'void'][index];\n    const best = player.challenges[supervoid ? 'supervoid' : 'voidCheck'][index];\n    const arrayMax = player.challenges[supervoid ? 'supervoid' : 'void'];\n    const total = 1 + arrayMax[1] + arrayMax[2] + arrayMax[3] + arrayMax[4] + arrayMax[5];\n    let text = `<p class=\"greenText center\">All unlocks are related to ${supervoid ? 'Inflations' : 'Strangeness'}<br>Also gain ${supervoid ? `a single Inflaton after unlocking ${total - global.inflationInfo.totalSuper} more` : `${total} Strange quarks, which is equal to total`} rewards</p>`;\n    for (let i = 0; i < reward.length; i++) {\n        const needText = info.needText[index][i]();\n        if (needText === null) { continue; }\n        const unlocked = current > i;\n        let failText;\n        if (!unlocked && player.challenges.active === 0) {\n            if (supervoid && !player.challenges.super) {\n                failText = 'Supervoid only';\n            } else if (player.time[supervoid ? 'vacuum' : 'stage'] > info.time) {\n                failText = 'Out of time';\n            } else if (index === 2 && i === 2 && player.accretion.rank > 1) {\n                failText = 'Failed';\n            }\n        }\n        text += `<div><p><span class=\"${unlocked ? 'greenText' : 'redText'}\">\u2192</span> ${needText}${failText !== undefined ? ` <span class=\"redText\">(${failText})</span>` : ''}</p>\n        <p><span class=\"${unlocked ? 'greenText' : 'redText'}\">Reward:</span> ${best > i ? `${reward[i]}${!unlocked && globalSave.SRSettings[0] ? ' (not unlocked)' : ''}` : 'Not yet unlocked'}</p></div>`;\n    }\n    if (specialHTML.cache.innerHTML.get('voidRewards') !== text) {\n        specialHTML.cache.innerHTML.set('voidRewards', text);\n        getId('voidRewardsMultiline').innerHTML = text;\n    }\n};\n\nconst visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = '';\n        const image = getId(`upgrade${index + 1}`);\n        if (player.upgrades[stageIndex][index] === 1) {\n            if (stageIndex === 1) {\n                color = 'green';\n            } else if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            }\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else { image.tabIndex = 0; }\n        image.style.backgroundColor = color;\n    } else if (type === 'elements') {\n        const image = getId(`element${index}`);\n        if (player.elements[index] >= 1) {\n            image.classList.remove('awaiting');\n            image.classList.add('created');\n            if (index > 0) { image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1; }\n        } else {\n            image.classList[player.elements[index] > 0 ? 'add' : 'remove']('awaiting');\n            image.classList.remove('created');\n            if (index > 0) { image.tabIndex = 0; }\n        }\n    }\n};\n\nconst visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    let image: HTMLElement;\n    let mainQuery: HTMLElement | undefined;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researches' ? '' : 'Extra';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n        image = getId(`research${extra}${index + 1}Image`);\n        mainQuery = getQuery(`#research${type === 'researchesExtra' ? 'Extra' : ''}${index + 1} > p`);\n    } else if (type === 'researchesAuto') {\n        max = global.researchesAutoInfo.max[index];\n        level = player.researchesAuto[index];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        getId(`researchAuto${index + 1}Max`).textContent = `${max}`;\n        image = getId(`researchAuto${index + 1}Image`);\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n        image = getId('ASRImage');\n    } else if (type === 'strangeness') {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n        image = getId(`strange${index + 1}Stage${stageIndex}Image`);\n    } else /*if (type === 'inflations')*/ {\n        max = global.treeInfo[stageIndex].max[index];\n        level = player.tree[stageIndex][index];\n\n        upgradeHTML = getId(`inflation${index + 1}Tree${stageIndex + 1}Level`);\n        getId(`inflation${index + 1}Tree${stageIndex + 1}Max`).textContent = `${max}`;\n        image = getId(`inflation${index + 1}Tree${stageIndex + 1}Image`);\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.style.color = 'var(--green-text)';\n        image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n    } else if (level === 0) {\n        upgradeHTML.style.color = 'var(--red-text)';\n        image.tabIndex = 0;\n    } else {\n        upgradeHTML.style.color = 'var(--orchid-text)';\n        image.tabIndex = 0;\n    }\n\n    /** Fixes text movement */\n    if (mainQuery !== undefined) {\n        const widthTest = mainQuery.getBoundingClientRect().width;\n        if (specialHTML.cache.innerHTML.get(mainQuery) !== widthTest) {\n            specialHTML.cache.innerHTML.set(mainQuery, widthTest);\n            mainQuery.style.minWidth = `${widthTest}px`;\n        }\n    }\n};\n\nconst updateRankInfo = () => {\n    const rank = player.accretion.rank;\n    if (global.debug.rankUpdated === rank) { return; }\n    const rankInfo = global.accretionInfo;\n    const name = getId('rankName');\n\n    getId('reset1Button').textContent = rank >= rankInfo.maxRank ? 'Max Rank achieved' : `Next Rank is ${format(rankInfo.rankCost[rank])} Mass`;\n    (getId('rankImage') as HTMLImageElement).src = `Used_art/${rankInfo.rankImage[rank]}`;\n    name.textContent = rankInfo.rankName[rank];\n    name.style.color = `var(--${rankInfo.rankColor[rank]}-text)`;\n    global.debug.rankUpdated = rank;\n};\n\nconst setRemnants = () => {\n    if (player.stage.active === 4) {\n        const whiteDwarf = player.researchesExtra[4][2] >= 1;\n        const src1 = whiteDwarf ? 'White%20dwarf' : 'Red%20giant';\n        if (specialHTML.cache.innerHTML.get('#special1 > img') !== src1) {\n            specialHTML.cache.innerHTML.set('#special1 > img', src1);\n            (getQuery('#special1 > img') as HTMLImageElement).src = `Used_art/${src1}.png`;\n            getId('special1').title = whiteDwarf ? 'White dwarfs (Red giants)' : 'Red giants';\n            getId('special1Cur').style.color = `var(--${whiteDwarf ? 'cyan' : 'red'}-text)`;\n        }\n\n        const quarkStar = player.researchesExtra[4][3] >= 1;\n        const src2 = quarkStar ? 'Quark%20star' : 'Neutron%20star';\n        if (specialHTML.cache.innerHTML.get('#special2 > img') !== src2) {\n            specialHTML.cache.innerHTML.set('#special2 > img', src2);\n            (getQuery('#special2 > img') as HTMLImageElement).src = `Used_art/${src2}.png`;\n            getId('special2').title = quarkStar ? 'Quark stars (Neutron stars)' : 'Neutron stars';\n            getQuery('#star2Effect > span.info').textContent = `Boost${quarkStar ? ' and cost decrease' : ''} to all Stars`;\n        }\n\n        getQuery('#star3Effect > span.info').textContent = `Boost to the Solar mass gain${player.elements[33] >= 1 ? ', Quasi-stars strength' : ''}${player.inflation.vacuum ? ' and delay to the Preons hardcap' : ''}`;\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Stars remnants'; }\n    } else if (player.stage.active === 5) {\n        specialHTML.cache.innerHTML.set('#special1 > img', 'Galaxy%20group');\n        (getQuery('#special1 > img') as HTMLImageElement).src = 'Used_art/Galaxy%20group.png';\n        getId('special1').title = 'Galaxy groups';\n        getId('special1Cur').style.color = 'var(--gray-text)';\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Merge results'; }\n    }\n};\n\nconst updateStageHistory = () => {\n    if (global.debug.historyStage === player.stage.resets) { return; }\n    const list = global.historyStorage.stage;\n    const length = Math.min(list.length, player.history.stage.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(list[i][1], { padding: true })} Strange quarks</span>${list[i][2] > 0 ? `, <span class=\"greenText\">${format(list[i][2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][1] / list[i][0], { type: 'income' })}</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('stageHistoryList').innerHTML = text;\n\n    const best = player.history.stage.best;\n    getId('stageHistoryBest').innerHTML = `<span class=\"greenText\">${format(best[1], { padding: true })} Strange quarks</span>${best[2] > 0 ? `, <span class=\"greenText\">${format(best[2], { padding: true })} Strangelets</span>` : ''}, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[1] / best[0], { type: 'income' })}</span>`;\n    global.debug.historyStage = player.stage.resets;\n};\nconst updateVacuumHistory = () => {\n    if (global.debug.historyVacuum === player.inflation.resets) { return; }\n    const list = global.historyStorage.vacuum;\n    const length = Math.min(list.length, player.history.vacuum.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"darkvioletText\">${format(list[i][2], { padding: true })} Inflatons</span>, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(list[i][2] / list[i][0], { type: 'income' })}</span>, <span class=\"${list[i][1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('vacuumHistoryList').innerHTML = text;\n\n    const best = player.history.vacuum.best;\n    getId('vacuumHistoryBest').innerHTML = `<span class=\"darkvioletText\">${format(best[2], { padding: true })} Inflatons</span>, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>, <span class=\"darkorchidText\">${format(best[2] / best[0], { type: 'income' })}</span>, <span class=\"${best[1] ? 'greenText\">true' : 'redText\">false'} Vacuum</span>`;\n    global.debug.historyVacuum = player.inflation.resets;\n};\n\nexport const addIntoLog = (text: string, count = 1) => {\n    const add = global.log.add;\n    if (add.length < 1) {\n        const lastHTML = global.log.lastHTML;\n        if (lastHTML[0] === text) {\n            lastHTML[1] += count;\n            lastHTML[3] = true;\n        } else { add.push([text, count, player.time.updated]); }\n    } else if (add[add.length - 1][0] === text) {\n        add[add.length - 1][1] += count;\n    } else {\n        add.push([text, count, player.time.updated]);\n        if (add.length >= 1000) { add.shift(); }\n    }\n};\nconst updateLog = () => {\n    const { add, lastHTML } = global.log;\n    if (add.length < 1 && !lastHTML[3]) { return; }\n\n    const mainHTML = getId('logMain');\n    const children = mainHTML.children;\n    if (lastHTML[3]) {\n        add.unshift([lastHTML[0], lastHTML[1], lastHTML[2]]);\n        children[0].remove();\n    }\n\n    const prepend = [];\n    const timeFormat = new Intl.DateTimeFormat(undefined, { timeStyle: 'medium' }).format;\n    for (let i = add.length - 1; i >= 0; i--) {\n        const li = document.createElement('li');\n        li.innerHTML = `<span class=\"whiteText\">${timeFormat(new Date(add[i][2]))}</span> \u2012 <span class=\"whiteText\">${add[i][0]}</span>${add[i][1] > 1 ? ` | x${add[i][1]}` : ''}`;\n        prepend.push(li);\n    }\n    const last = add[add.length - 1];\n    lastHTML[0] = last[0];\n    lastHTML[1] = last[1];\n    lastHTML[2] = last[2];\n    lastHTML[3] = false;\n    add.length = 0;\n    mainHTML.prepend(...prepend);\n\n    for (let i = children.length - 1; i >= 1000; i--) { children[i].remove(); }\n};\n\n/** @param padding 'exponent' value will behave as true, but only after number turns into its shorter version */\nexport const format = (input: number | Overlimit, settings = {} as { type?: 'number' | 'input' | 'time' | 'income', padding?: boolean | 'exponent' }): string => {\n    if (typeof input === 'object') { return input?.format(settings as any); }\n    const type = settings.type ?? 'number';\n    let padding = settings.padding;\n\n    let extra;\n    if (type === 'income') { //1.2345e6 per second\n        const inputAbs = Math.abs(input);\n        if (inputAbs >= 1) {\n            extra = 'per second';\n        } else if (inputAbs >= 1 / 60) {\n            input *= 60;\n            extra = 'per minute';\n        } else if (inputAbs >= 1 / 3600) {\n            input *= 3600;\n            extra = 'per hour';\n        } else if (inputAbs >= 1 / 86400) {\n            input *= 86400;\n            extra = 'per day';\n        } else if (inputAbs >= 1 / 31556952) {\n            input *= 31556952;\n            extra = 'per year';\n        } else if (inputAbs >= 1 / 3.1556952e10) {\n            input *= 3.1556952e10;\n            extra = 'per millennium';\n        } else if (inputAbs >= 1 / 3.1556952e13) {\n            input *= 3.1556952e13;\n            extra = 'per megaannum';\n        } else {\n            input *= 3.1556952e16;\n            extra = 'per eon';\n        }\n\n        if (padding === undefined) { padding = true; }\n    } else if (type === 'time') { //12 Minutes 34 Seconds\n        const inputAbs = Math.abs(input);\n        if (inputAbs < 60) {\n            extra = 'seconds';\n        } else if (inputAbs < 3600) {\n            const minutes = Math.trunc(input / 60);\n            const seconds = Math.trunc(input - minutes * 60);\n            if (padding === false && seconds === 0) { return `${minutes} minutes`; }\n            return `${minutes} minutes ${seconds} seconds`;\n        } else if (inputAbs < 86400) {\n            const hours = Math.trunc(input / 3600);\n            const minutes = Math.trunc(input / 60 - hours * 60);\n            if (padding === false && minutes === 0) { return `${hours} hours`; }\n            return `${hours} hours ${minutes} minutes`;\n        } else if (inputAbs < 31556952) {\n            const days = Math.trunc(input / 86400);\n            const hours = Math.trunc(input / 3600 - days * 24);\n            if (padding === false && hours === 0) { return `${days} days`; }\n            return `${days} days ${hours} hours`;\n        } else if (inputAbs < 3.1556952e10) {\n            const years = Math.trunc(input / 31556952);\n            const days = Math.trunc(input / 86400 - years * 365.2425);\n            if (padding === false && days === 0) { return `${years} years`; }\n            return `${years} years ${days} days`;\n        } else if (inputAbs < 3.1556952e13) {\n            input /= 3.1556952e10;\n            extra = 'millenniums';\n        } else if (inputAbs < 3.1556952e16) {\n            input /= 3.1556952e13;\n            extra = 'megaannums';\n        } else {\n            input /= 3.1556952e16;\n            extra = 'eons';\n        }\n\n        if (padding === undefined) { padding = true; }\n    }\n    if (!isFinite(input)) { return extra !== undefined ? `${input} ${extra}` : `${input}`; }\n\n    const inputAbs = Math.abs(input);\n    if (inputAbs >= 1e6 || (inputAbs < 1e-4 && inputAbs > 0)) { //1.23e123 (-1.23e-123)\n        if (padding === 'exponent') { padding = true; }\n\n        let digits = Math.floor(Math.log10(inputAbs));\n        let precision = 3 - Math.floor(Math.log10(Math.abs(digits)));\n        let result = Math.round(input / 10 ** (digits - precision)) / 10 ** precision;\n        if (Math.abs(result) === 10) { //To remove rare bugs\n            result /= 10;\n            digits++;\n            if (digits === -4) { return format(1e-4 * result, settings); }\n            if (padding) { precision = 3 - Math.floor(Math.log10(Math.abs(digits))); }\n        }\n\n        let formated = padding ? result.toFixed(precision) : `${result}`;\n        if (type === 'input') { return `${formated}e${digits}`; }\n        formated = `${formated.replace('.', globalSave.format[0])}e${digits}`;\n        return extra !== undefined ? `${formated} ${extra}` : formated;\n    }\n\n    //12345 (-12345)\n    let precision = inputAbs < 10 ? 5 : (5 - Math.floor(Math.log10(inputAbs)));\n    const result = Math.round(input * 10 ** precision) / 10 ** precision;\n\n    const resultAbs = Math.abs(result); //To remove rare bugs\n    if (resultAbs === 1e6) { return format(result, settings); }\n    if (padding === 'exponent') {\n        padding = false;\n    } else if (padding) { precision = resultAbs < 10 ? 5 : (5 - Math.floor(Math.log10(resultAbs))); }\n\n    let formated = padding ? result.toFixed(precision) : `${result}`;\n    if (type === 'input') { return formated; }\n    formated = formated.replace('.', globalSave.format[0]);\n    if (result >= 1e3) { formated = formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]); }\n    return extra !== undefined ? `${formated} ${extra}` : formated;\n};\n\n/** @param offline used to return early if game is paused due to calculating offline, requires another call after calculations are done */\nexport const stageUpdate = (changed = true, offline = false) => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest } = player.stage;\n    const activeAll = stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n    const challenge = player.challenges.active;\n\n    activeAll.length = 0;\n    if (vacuum) {\n        activeAll.push(1);\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (current >= 2) { activeAll.push(3); } //player.researchesExtra[1][2] >= 1\n        if (current >= 4) { activeAll.push(4); } //player.accretion.rank >= 6\n        if (current >= 5 && player.strangeness[5][3] >= 1) { activeAll.push(5); } //player.elements[26] >= 1\n    } else {\n        if (current === 1 || player.milestones[1][1] >= 6) { stageInfo.activeAll.push(1); }\n        if (current === 2 || player.milestones[2][1] >= 7) { stageInfo.activeAll.push(2); }\n        if (current === 3 || player.milestones[3][1] >= 7) { stageInfo.activeAll.push(3); }\n        if (current >= 4) { activeAll.push(4); }\n        if (current >= 5) { activeAll.push(5); } //player.elements[26] >= 1\n    }\n    if (highest >= 7 || (player.event && highest === 6)) { activeAll.push(6); }\n    if (offline && global.offline.active) {\n        if (!global.offline.stageUpdate) { global.offline.stageUpdate = changed; }\n        return;\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) { element.style.display = active === s ? '' : 'none'; }\n        for (const element of getClass(`stage${s}Include`)) { element.style.display = activeAll.includes(s) ? '' : 'none'; }\n    }\n\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = `var(--${stageInfo.textColor[current]}-text)`;\n    if ((challenge !== null && global.challengesInfo[challenge].resetType === 'stage') || (!vacuum && active >= 6)) {\n        getId('stageReset').textContent = 'No Stage resets available';\n    } else if (vacuum || active >= 4) {\n        getId('stageReset').textContent = highest >= 6 || (player.event && highest === 5) ? (current >= 5 ? 'Requirements are met' : \"Requires '[26] Iron' Element\") : 'Requirements are unknown';\n    }\n    if (challenge !== null) {\n        getId('currentChallenge').style.display = '';\n        const currentID = getQuery('#currentChallenge > span');\n        currentID.textContent = global.challengesInfo[challenge].name;\n        currentID.style.color = `var(--${global.challengesInfo[challenge].color}-text)`;\n    } else { getId('currentChallenge').style.display = 'none'; }\n\n    if (highest < 7) {\n        getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n        const showAll = vacuum && player.stage.resets >= 1;\n        if (highest < 6) { getId('dischargeToggleReset').style.display = activeAll.includes(1) ? '' : 'none'; }\n        getId('vaporizationToggleReset').style.display = showAll || activeAll.includes(2) ? '' : 'none';\n        getId('rankToggleReset').style.display = showAll || activeAll.includes(3) ? '' : 'none';\n        getId('collapseToggleReset').style.display = showAll || activeAll.includes(4) ? '' : 'none';\n        getId('strangenessTabBtn').style.display = player.strange[0].total > 0 || (vacuum && current >= 5) ? '' : 'none';\n        getId('inflationTabBtn').style.display = 'none';\n        if (changed) {\n            getId('resets').style.display = '';\n            getId('researches').style.display = '';\n        }\n        if (!globalSave.toggles[4]) {\n            const unlocked = vacuum && (player.stage.resets >= 1 || player.stage.current >= 2);\n            getId('globalStats').style.display = unlocked ? '' : 'none';\n            getId('hideGlobalStats').style.display = unlocked ? '' : 'none';\n        }\n    }\n    if (vacuum) {\n        getId('milestonesProgressArea').style.display = challenge === 0 && player.tree[0][4] >= 1 ? '' : 'none';\n    } else {\n        const interstellar = (active >= 6 ? current : active) >= 4;\n        getId('strangePeakAllowed').style.display = interstellar ? '' : 'none';\n        getId('strangePeakDisabled').style.display = !interstellar ? '' : 'none';\n        getId('strange1Effect1Allowed').style.display = interstellar ? '' : 'none';\n        getId('strange1Effect1Disabled').style.display = !interstellar ? '' : 'none';\n        if (highest < 6) {\n            for (let s = 2; s <= 4; s++) {\n                const unlocked = player.stage.resets >= s + 3;\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = unlocked ? '' : 'none';\n                getId(`milestone1Stage${s}Div`).style.display = unlocked ? '' : 'none';\n                getId(`milestone2Stage${s}Div`).style.display = unlocked ? '' : 'none';\n            }\n        }\n    }\n\n    if (!changed) {\n        visualUpdate();\n        numbersUpdate();\n        return;\n    }\n    const extraText = `${['Energy', 'Clouds', 'Rank', 'Collapse', 'Galaxy', ''][active - 1]} Researches (Special)`;\n    if (globalSave.MDSettings[0]) {\n        getId('reset1Footer').textContent = specialHTML.resetHTML[active];\n    }\n    if (globalSave.SRSettings[0]) {\n        SRHotkeysInfo(true);\n        for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n            getId(`building${i}`).ariaDescription = `Hotkeys are ${i} and Shift ${i})`;\n        }\n        getId('extraResearches').ariaLabel = extraText;\n        getId('SRStage').textContent = `Current active Stage is '${stageInfo.word[active]}'${active !== global.trueActive ? `, will be changed to '${stageInfo.word[global.trueActive]}' after changing tab` : ''}`;\n    }\n\n    const upgradesInfo = global.upgradesInfo[active];\n    const researchesInfo = global.researchesInfo[active];\n    const researchesExtraInfo = global.researchesExtraInfo[active];\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = upgradesInfo.maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesInfo.maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesExtraInfo.maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = footerStatsHTML.length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(2, 3, 4, 5);\n        showR.push(0, 1, 2, 3, 4, 5);\n        showF.push(0, 1, 2);\n        getId('specials').style.display = 'none';\n        if (vacuum) {\n            showU.push(0, 1);\n            showRE.push(0, 2);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearches').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(0);\n        showR.push(0, 1);\n        showRE.push(0, 1);\n        showF.push(0, 1);\n        getId('specials').style.display = 'none';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 3) {\n        showU.push(0, 1);\n        showR.push(0, 1);\n        showRE.push(0);\n        showF.push(0);\n        global.debug.rankUpdated = null;\n        getId('specials').style.display = 'none';\n        getId('reset1Main').style.display = '';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 4) {\n        showU.push(0, 1, 2);\n        showR.push(0, 1, 2);\n        showRE.push(0);\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('extraResearches').style.display = '';\n    } else if (active === 5) {\n        showRE.push(0);\n        showF.push(0, 1, 2);\n        getId('stageInfo').style.display = '';\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(0, 1);\n            showR.push(0, 1);\n            getId('extraResearches').style.display = '';\n            getId('special2').style.display = 'none';\n            getId('special3').style.display = 'none';\n        } else {\n            getId('reset1Button').textContent = 'Requires 22 Galaxies';\n            getId('specials').style.display = 'none';\n        }\n        setRemnants();\n    } else if (active === 6) {\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('reset1Main').style.display = 'none';\n        getId('specials').style.display = 'none';\n        getId('extraResearches').style.display = 'none';\n    }\n    getId('buildings').style.display = '';\n    getId('building1').style.display = '';\n    getId('upgrades').style.display = '';\n    getId('stageResearches').style.display = '';\n    (getId('autoWaitInput') as HTMLInputElement).value = format(player.toggles.shop.wait[active], { type: 'input' });\n    resetMinSizes(false);\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    const buildingName = buildingsInfo.name[active];\n    const buildingType = buildingsInfo.type[active];\n    const buildingHoverText = buildingsInfo.hoverText[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        (getQuery(`#building${i} > img`) as HTMLImageElement).src = `Used_art/${buildingHTML[i - 1]}`;\n        getQuery(`#building${i}Stats > h4`).textContent = buildingName[i];\n        getId(`building${i}Name`).textContent = buildingName[i];\n        getQuery(`#building${i}ProdDiv > span`).textContent = buildingType[i - 1];\n        getId(`building${i}ProdDiv`).title = buildingHoverText[i - 1];\n        toggleSwap(i, 'buildings');\n    }\n    getQuery('#building0Stats > h4').textContent = buildingName[0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < upgradesInfo.maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i]}`;\n        image.alt = upgradesInfo.name[i];\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < researchesInfo.maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i)) { main.style.display = ''; }\n        main.className = researchHTML[i][1];\n        const image = getId(`research${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchesInfo.name[i];\n    }\n\n    const researchExtraHTML = specialHTML.researchExtraHTML[active];\n    for (let i = 0; i < researchesExtraInfo.maxActive; i++) {\n        const main = getId(`researchExtra${i + 1}`);\n        if (showRE.includes(i)) { main.style.display = ''; }\n        main.className = researchExtraHTML[i][1];\n        const image = getId(`researchExtra${i + 1}Image`) as HTMLInputElement;\n        image.src = `Used_art/${researchExtraHTML[i][0]}`;\n        image.alt = researchesExtraInfo.name[i];\n    }\n    getQuery('#extraResearches > div').className = `researchesDiv ${specialHTML.researchExtraDivHTML[active][1]}`;\n    const extraImgId = getQuery('#extraResearches > img') as HTMLImageElement;\n    extraImgId.src = `Used_art/${specialHTML.researchExtraDivHTML[active][0]}`;\n    extraImgId.title = extraText;\n\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        (getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement).src = `Used_art/${footerStatsHTML[i][0]}`;\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][1];\n        getQuery(`#footerStat${i + 1} span`).textContent = footerStatsHTML[i][2];\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--stage-text', `var(--${stageInfo.textColor[active]}-text)`);\n    body.setProperty('--stage-button-border', stageInfo.buttonBorder[active]);\n    body.setProperty('--stage-image-borderColor', stageInfo.imageBorderColor[active]);\n    body.setProperty('--image-border', `url(\"Used_art/Stage${active} border.png\")`);\n\n    visualUpdate();\n    numbersUpdate();\n    if (globalSave.theme === null) { setTheme(); }\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { switchTab } from './Update';\nimport { buyBuilding, collapseResetUser, dischargeResetUser, enterExitChallengeUser, mergeResetUser, rankResetUser, stageResetUser, switchStage, toggleSwap, vaporizationResetUser } from './Stage';\nimport { buyAll, pauseGameUser } from './Main';\nimport { SRHotkeysInfo, globalSave, specialHTML } from './Special';\nimport type { hotkeysList } from './Types';\n\nexport const hotkeys = {} as Record<string, hotkeysList>;\nconst hotkeyFunction = {\n    makeAll: () => buyAll(),\n    stage: (event) => {\n        if (event.repeat && (player.inflation.vacuum || player.stage.active >= 4)) { return; }\n        void stageResetUser();\n    },\n    discharge: () => void dischargeResetUser(),\n    vaporization: (event) => {\n        if (event.repeat) { return; }\n        void vaporizationResetUser();\n    },\n    rank: () => void rankResetUser(),\n    collapse: (event) => {\n        if (event.repeat) { return; }\n        void collapseResetUser();\n    },\n    galaxy: () => buyBuilding(3, 5),\n    pause: (event) => {\n        if (event.repeat) { return; }\n        pauseGameUser();\n    },\n    toggleAll: (event) => {\n        if (event.repeat) { return; }\n        toggleSwap(0, 'buildings', true);\n    },\n    merge: (event) => {\n        if (event.repeat) { return; }\n        void mergeResetUser();\n    },\n    universe: () => buyBuilding(1, 6),\n    exitChallenge: () => enterExitChallengeUser(null),\n    tabRight: (event) => {\n        if (event.repeat) { return; }\n        changeTab('right');\n    },\n    tabLeft: (event) => {\n        if (event.repeat) { return; }\n        changeTab('left');\n    },\n    subtabUp: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('up');\n    },\n    subtabDown: (event) => {\n        if (event.repeat) { return; }\n        changeSubtab('down');\n    },\n    stageRight: (event) => {\n        if (event.repeat) { return; }\n        changeStage('right');\n    },\n    stageLeft: (event) => {\n        if (event.repeat) { return; }\n        changeStage('left');\n    }\n} as Record<hotkeysList, (event: KeyboardEvent) => void>;\n\n/** Will remove identical hotkeys from globalSave */\nexport const assignHotkeys = () => {\n    for (const key in hotkeys) { delete hotkeys[key]; } //Don't know better way for now\n    const index = globalSave.toggles[0] ? 0 : 1;\n    for (const key in globalSave.hotkeys) {\n        const hotkey = globalSave.hotkeys[key as hotkeysList][index];\n        if (hotkey === '' || hotkey == null) { continue; }\n        if (hotkeys[hotkey] !== undefined) {\n            globalSave.hotkeys[key as hotkeysList] = [];\n        } else { hotkeys[hotkey] = key as hotkeysList; }\n    }\n    if (globalSave.SRSettings[0]) { SRHotkeysInfo(); }\n};\n\n/** Removes hotkey if exist, returns name of removed hotkey */\nexport const removeHotkey = (remove: string): string | null => {\n    const test = hotkeys[remove];\n    if (test === undefined) { return null; }\n    globalSave.hotkeys[test] = [];\n    return test;\n};\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    let { shiftKey } = check;\n    const { key, code } = check;\n    if (shiftKey) { global.hotkeys.shift = true; }\n    if (check.ctrlKey) { global.hotkeys.ctrl = true; }\n    if (code === 'Tab' || code === 'Enter' || code === 'Space') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        if (code === 'Tab') { global.hotkeys.tab = true; }\n        document.body.classList.remove('noFocusOutline');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.body.classList.add('noFocusOutline');\n    }\n    if (global.hotkeys.disabled) { return; }\n\n    if (code === 'Escape') {\n        if (check.metaKey || check.ctrlKey || shiftKey || check.altKey ||\n            specialHTML.alert[0] !== null || specialHTML.bigWindow !== null) { return; }\n        const notification = specialHTML.notifications[0];\n        if (notification !== undefined) { notification[1](true); }\n        return;\n    }\n\n    const numberKey = Number(code.replace('Digit', '').replace('Numpad', ''));\n    if (!isNaN(numberKey) && code !== '') {\n        if (check.metaKey || check.ctrlKey || check.altKey) { return; }\n        if (isNaN(Number(key))) {\n            if (!shiftKey) { //Numpad\n                shiftKey = true;\n                check.preventDefault();\n            }\n        }\n\n        if (shiftKey) {\n            if (check.repeat) { return; }\n            toggleSwap(numberKey, 'buildings', true);\n        } else if (numberKey !== 0) {\n            buyBuilding(numberKey, player.stage.active);\n        } else { buyAll(); }\n    } else {\n        let name = check.metaKey ? 'Meta ' : '';\n        if (check.ctrlKey) { name += 'Ctrl '; }\n        if (shiftKey) { name += 'Shift '; }\n        if (check.altKey) { name += 'Alt '; }\n        name += globalSave.toggles[0] ?\n            (key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')) :\n            (key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow '));\n        const functionTest = hotkeyFunction[hotkeys[name]];\n        if (functionTest !== undefined) {\n            functionTest(check);\n            check.preventDefault();\n        }\n    }\n};\n\nconst changeTab = (direction: 'left' | 'right') => {\n    const tabs = global.tabList.tabs;\n    let index = tabs.indexOf(global.tab);\n\n    if (direction === 'left') {\n        do {\n            if (index <= 0) {\n                index = tabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tabs[index]));\n    } else {\n        do {\n            if (index >= tabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tabs[index]));\n    }\n    switchTab(tabs[index]);\n};\n\n/** Through a hotkey */\nexport const changeSubtab = (direction: 'down' | 'up') => {\n    const tab = global.tab;\n    const subtabs = global.tabList[`${tab}Subtabs`] as string[];\n    if (subtabs.length < 2) { return; } //To remove never[]\n    let index = subtabs.indexOf(global.subtab[`${tab}Current`]);\n\n    if (direction === 'down') {\n        do {\n            if (index <= 0) {\n                index = subtabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tab, subtabs[index]));\n    } else {\n        do {\n            if (index >= subtabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tab, subtabs[index]));\n    }\n    switchTab(tab, subtabs[index]);\n};\n\nconst changeStage = (direction: 'left' | 'right') => {\n    const activeAll = global.stageInfo.activeAll;\n    if (activeAll.length === 1) { return; }\n    let index = activeAll.indexOf(player.stage.active);\n\n    if (direction === 'left') {\n        if (index <= 0) {\n            index = activeAll.length - 1;\n        } else { index--; }\n    } else {\n        if (index >= activeAll.length - 1) {\n            index = 0;\n        } else { index++; }\n    }\n    switchStage(activeAll[index]);\n};\n\n/* preventDefault should not be used here */\nexport const handleTouchHotkeys = (event: TouchEvent) => {\n    if (event.changedTouches.length > 1) { return; }\n    const horizontal = event.changedTouches[0].clientX - specialHTML.mobileDevice.start[0];\n    const vertical = event.changedTouches[0].clientY - specialHTML.mobileDevice.start[1];\n\n    const horizontalAbs = Math.abs(horizontal);\n    if (horizontalAbs < 100) { return; }\n    if (Math.abs(vertical) >= 100) {\n        changeSubtab(vertical > 0 ? 'up' : 'down');\n    } else if (horizontalAbs >= 250) {\n        changeStage(horizontal > 0 ? 'left' : 'right');\n    } else {\n        changeTab(horizontal > 0 ? 'left' : 'right');\n    }\n};\n", "import { assignHotkeys, removeHotkey } from './Hotkeys';\nimport { getId, getQuery, globalSaveStart, pauseGame } from './Main';\nimport { deepClone, global, player } from './Player';\nimport { assignResetInformation } from './Stage';\nimport type { globalSaveType, hotkeysList } from './Types';\nimport { format, stageUpdate, visualTrueStageUnlocks, visualUpdate } from './Update';\n\nexport const globalSave: globalSaveType = {\n    intervals: {\n        offline: 20,\n        numbers: 80,\n        visual: 800,\n        autoSave: 20000\n    },\n    hotkeys: {\n        stage: ['S', 'S'],\n        discharge: ['D', 'D'],\n        vaporization: ['V', 'V'],\n        rank: ['R', 'R'],\n        collapse: ['C', 'C'],\n        galaxy: ['G', 'G'],\n        pause: ['P', 'P'],\n        makeAll: ['M', 'M'],\n        toggleAll: ['Shift A', 'Shift A'],\n        merge: ['Shift M', 'Shift M'],\n        universe: ['Shift U', 'Shift U'],\n        exitChallenge: ['Shift E', 'Shift E'],\n        tabRight: ['Arrow Right', 'Arrow Right'],\n        tabLeft: ['Arrow Left', 'Arrow Left'],\n        subtabUp: ['Arrow Up', 'Arrow Up'],\n        subtabDown: ['Arrow Down', 'Arrow Down'],\n        stageRight: ['Shift Arrow Right', 'Shift Arrow Right'],\n        stageLeft: ['Shift Arrow Left', 'Shift Arrow Left']\n    },\n    toggles: [false, false, false, false, false],\n    format: ['.', ''],\n    theme: null,\n    fontSize: 16,\n    MDSettings: [false, false, false],\n    SRSettings: [false, false, false],\n    developerMode: false\n};\n\nexport const saveGlobalSettings = (noSaving = false): string => {\n    const hotkeysClone = deepClone(globalSave.hotkeys);\n    const encoder = new TextEncoder();\n    for (const key in hotkeysClone) {\n        const array = hotkeysClone[key as hotkeysList];\n        for (let i = 0; i < array.length; i++) {\n            array[i] = String.fromCharCode(...encoder.encode(array[i]));\n        }\n    }\n    const clone = { ...globalSave };\n    clone.hotkeys = hotkeysClone;\n    const save = btoa(JSON.stringify(clone));\n    if (!noSaving) { localStorage.setItem(specialHTML.localStorage.settings, save); }\n    return save;\n};\n\nexport const toggleSpecial = (number: number, type: 'global' | 'mobile' | 'reader', change = false, reload = false) => {\n    let toggles;\n    if (type === 'mobile') {\n        toggles = globalSave.MDSettings;\n    } else if (type === 'reader') {\n        toggles = globalSave.SRSettings;\n    } else {\n        toggles = globalSave.toggles;\n    }\n\n    if (change) {\n        if (reload) {\n            return void (async() => {\n                if (!await Confirm('Changing this setting will reload the page, confirm?\\n(Game will not autosave)')) { return; }\n                pauseGame();\n                toggles[number] = !toggles[number];\n                saveGlobalSettings();\n                window.location.reload();\n                void Alert('Awaiting game reload');\n            })();\n        } else {\n            toggles[number] = !toggles[number];\n            saveGlobalSettings();\n        }\n    }\n\n    let toggleHTML;\n    if (type === 'mobile') {\n        toggleHTML = getId(`MDToggle${number}`);\n    } else if (type === 'reader') {\n        toggleHTML = getId(`SRToggle${number}`);\n    } else {\n        toggleHTML = getId(`globalToggle${number}`);\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = 'OFF';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'ON';\n    }\n};\n\nexport const specialHTML = { //Images here are from true vacuum for easier cache\n    /** [textContent] */\n    resetHTML: ['', 'Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge', ''],\n    longestBuilding: 7, //+1\n    /** [src] */\n    buildingHTML: [\n        [],\n        ['Preon.png', 'Quarks.png', 'Particle.png', 'Atom.png', 'Molecule.png'],\n        ['Drop.png', 'Puddle.png', 'Pond.png', 'Lake.png', 'Sea.png', 'Ocean.png'],\n        ['Cosmic%20dust.png', 'Planetesimal.png', 'Protoplanet.png', 'Natural%20satellite.png', 'Subsatellite.png'],\n        ['Brown%20dwarf.png', 'Orange%20dwarf.png', 'Red%20supergiant.png', 'Blue%20hypergiant.png', 'Quasi%20star.png'],\n        ['Nebula.png', 'Star%20cluster.png', 'Galaxy.png'],\n        ['Universe.png']\n    ],\n    longestUpgrade: 14,\n    /** [src] */\n    upgradeHTML: [\n        [], [\n            'UpgradeQ1.png',\n            'UpgradeQ2.png',\n            'UpgradeQ3.png',\n            'UpgradeQ4.png',\n            'UpgradeQ5.png',\n            'UpgradeQ6.png',\n            'UpgradeQ7.png',\n            'UpgradeQ8.png',\n            'UpgradeQ9.png',\n            'UpgradeQ10.png',\n            'UpgradeQ11.png'\n        ], [\n            'UpgradeW1.png',\n            'UpgradeW2.png',\n            'UpgradeW3.png',\n            'UpgradeW4.png',\n            'UpgradeW5.png',\n            'UpgradeW6.png',\n            'UpgradeW7.png',\n            'UpgradeW8.png',\n            'UpgradeW9.png'\n        ], [\n            'UpgradeA1.png',\n            'UpgradeA2.png',\n            'UpgradeA3.png',\n            'UpgradeA4.png',\n            'UpgradeA5.png',\n            'UpgradeA6.png',\n            'UpgradeA7.png',\n            'UpgradeA8.png',\n            'UpgradeA9.png',\n            'UpgradeA10.png',\n            'UpgradeA11.png',\n            'UpgradeA12.png',\n            'UpgradeA13.png',\n            'UpgradeA14.png'\n        ], [\n            'UpgradeS1.png',\n            'UpgradeS2.png',\n            'UpgradeS3.png',\n            'UpgradeS4.png',\n            'UpgradeS5.png'\n        ], [\n            'UpgradeG1.png',\n            'UpgradeG2.png',\n            'UpgradeG3.png',\n            'UpgradeG4.png',\n            'UpgradeG5.png',\n            'UpgradeG6.png',\n            'Missing.png'\n        ], []\n    ],\n    longestResearch: 9,\n    /** [src, className] */\n    researchHTML: [\n        [], [\n            ['ResearchQ1.png', 'stage1borderImage'],\n            ['ResearchQ2.png', 'stage1borderImage'],\n            ['ResearchQ3.png', 'stage1borderImage'],\n            ['ResearchQ4.png', 'stage4borderImage'],\n            ['ResearchQ5.png', 'stage4borderImage'],\n            ['ResearchQ6.png', 'stage4borderImage']\n        ], [\n            ['ResearchW1.png', 'stage2borderImage'],\n            ['ResearchW2.png', 'stage2borderImage'],\n            ['ResearchW3.png', 'stage2borderImage'],\n            ['ResearchW4.png', 'stage2borderImage'],\n            ['ResearchW5.png', 'stage2borderImage'],\n            ['ResearchW6.png', 'stage2borderImage']\n        ], [\n            ['ResearchA1.png', 'stage3borderImage'],\n            ['ResearchA2.png', 'stage2borderImage'],\n            ['ResearchA3.png', 'stage3borderImage'],\n            ['ResearchA4.png', 'stage3borderImage'],\n            ['ResearchA5.png', 'stage3borderImage'],\n            ['ResearchA6.png', 'stage3borderImage'],\n            ['ResearchA7.png', 'stage1borderImage'],\n            ['ResearchA8.png', 'redBorderImage'],\n            ['ResearchA9.png', 'stage1borderImage']\n        ], [\n            ['ResearchS1.png', 'stage5borderImage'],\n            ['ResearchS2.png', 'stage5borderImage'],\n            ['ResearchS3.png', 'redBorderImage'],\n            ['ResearchS4.png', 'stage5borderImage'],\n            ['ResearchS5.png', 'stage6borderImage'],\n            ['ResearchS6.png', 'stage4borderImage']\n        ], [\n            ['ResearchG1.png', 'stage1borderImage'],\n            ['ResearchG2.png', 'stage6borderImage'],\n            ['ResearchG3.png', 'stage6borderImage'],\n            ['ResearchG4.png', 'stage4borderImage'],\n            ['Missing.png', 'redBorderImage']\n        ], []\n    ],\n    longestResearchExtra: 6,\n    /** [src, className] */\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'stage4borderImage'],\n        ['Cloud%20Researches.png', 'stage2borderImage'],\n        ['Rank%20Researches.png', 'stage6borderImage'],\n        ['Collapse%20Researches.png', 'stage6borderImage'],\n        ['Galaxy%20Researches.png', 'stage3borderImage'],\n        ['Missing.png', 'redBorderImage']\n    ],\n    /** [src, className] */\n    researchExtraHTML: [\n        [], [\n            ['ResearchEnergy1.png', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'stage6borderImage'],\n            ['ResearchEnergy6.png', 'stage1borderImage']\n        ], [\n            ['ResearchClouds1.png', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'stage4borderImage'],\n            ['ResearchClouds4.png', 'stage2borderImage'],\n            ['ResearchClouds5.png', 'stage2borderImage']\n        ], [\n            ['ResearchRank1.png', 'stage3borderImage'],\n            ['ResearchRank2.png', 'stage3borderImage'],\n            ['ResearchRank3.png', 'stage3borderImage'],\n            ['ResearchRank4.png', 'stage2borderImage'],\n            ['ResearchRank5.png', 'stage2borderImage'],\n            ['ResearchRank6.png', 'stage6borderImage']\n        ], [\n            ['ResearchCollapse1.png', 'stage6borderImage'],\n            ['ResearchCollapse2.png', 'redBorderImage'],\n            ['ResearchCollapse3.png', 'stage1borderImage'],\n            ['ResearchCollapse4.png', 'stage6borderImage']\n        ], [\n            ['ResearchGalaxy1.png', 'stage3borderImage'],\n            ['Missing.png', 'stage3borderImage'],\n            ['ResearchGalaxy3.png', 'stage3borderImage'],\n            ['ResearchGalaxy4.png', 'brownBorderImage'],\n            ['Missing.png', 'redBorderImage']\n        ], []\n    ],\n    longestFooterStats: 3,\n    /** [src, className, textcontent] */\n    footerStatsHTML: [\n        [], [\n            ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Energy.png', 'stage4borderImage orangeText', 'Energy']\n        ], [\n            ['Water.png', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'stage2borderImage blueText', 'Drops'],\n            ['Clouds.png', 'stage3borderImage grayText', 'Clouds']\n        ], [\n            ['Mass.png', 'stage3borderImage grayText', 'Mass']\n        ], [\n            ['Elements.png', 'stage4borderImage orangeText', 'Stardust'],\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass']\n        ], [\n            ['Elements.png', 'stage4borderImage orangeText', 'Stardust'],\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Stars.png', 'redBorderImage redText', 'Stars']\n        ], [\n            ['Dark%20matter.png', 'stage3borderImage grayText', 'Matter'],\n            ['Missing.png', 'stage6borderImage darkvioletText', 'Inflatons']\n        ]\n    ],\n    mobileDevice: { //All browsers that I tested didn't properly detected more than 1 touch\n        /** [X, Y] */\n        start: [0, 0]\n    },\n    localStorage: {\n        /** Index for game's primary save slot */\n        main: 'testing_save',\n        /** Index for global game settings */\n        settings: 'fundamentalSettings'\n    },\n    cache: {\n        imagesDiv: document.createElement('div'), //Saved just in case\n        /** Lazy way to optimize HTML, without it can't properly detect changes */\n        innerHTML: new Map<string | HTMLElement, string | number>(),\n        idMap: new Map<string, HTMLElement>(),\n        classMap: new Map<string, HTMLCollectionOf<HTMLElement>>(),\n        queryMap: new Map<string, HTMLElement>()\n    },\n    errorCooldowns: [] as string[],\n    /** [text, true ? incrementFunc : closeFunc] */\n    notifications: [] as Array<[string, (instantClose?: boolean) => void]>,\n    /** [priority, closeFunc] */\n    alert: [null, null] as [number | null, (() => void) | null],\n    bigWindow: null as 'version' | 'hotkeys' | 'log' | null,\n    styleSheet: document.createElement('style') //Secondary\n};\n\nexport const preventImageUnload = (): void => {\n    if (global.offline.active || global.paused) { return void (global.offline.cacheUpdate = true); }\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n\n    let images = '';\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 1) { continue; } //Drops\n            } else if (s === 5 && i < 2) { continue; } //Solar mass and Stardust\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`;\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    for (const text of global.accretionInfo.rankImage) { //Already cached in Accretion stats, this only refreshes it\n        images += `<img src=\"Used_art/${text}\" loading=\"lazy\">`;\n    }\n    for (const text of ['Red%20giant', 'White%20dwarf', 'Neutron%20star', 'Quark%20star', 'Galaxy%20group']) { //Galaxy%20cluster\n        images += `<img src=\"Used_art/${text}.png\" loading=\"lazy\">`;\n    }\n    specialHTML.cache.imagesDiv.innerHTML = images;\n\n    setTimeout(preventImageUnload, 3600_000);\n};\n\n/** Not providing value for 'theme' will make it use one from globalSave and remove all checks */\nexport const setTheme = (theme = 'current' as 'current' | number | null) => {\n    if (theme !== 'current') {\n        if (theme !== null) {\n            if (player.stage.true < theme) { theme = null; }\n            if (theme === 6 && player.stage.true < 7) { theme = null; }\n        }\n        getId(`switchTheme${globalSave.theme ?? 0}`).style.textDecoration = '';\n\n        globalSave.theme = theme;\n        saveGlobalSettings();\n        getId('currentTheme').textContent = theme === null ? 'Default' : global.stageInfo.word[theme];\n        getId(`switchTheme${theme ?? 0}`).style.textDecoration = 'underline';\n    } else { theme = globalSave.theme; }\n\n    const upgradeTypes = ['upgrade', 'element', 'inflation'];\n    const properties = {\n        '--background-color': '#030012',\n        '--window-color': '#12121c',\n        '--window-border': 'cornflowerblue',\n        '--footer-color': 'darkblue',\n        '--button-color': 'mediumblue',\n        '--button-border': 'darkcyan',\n        '--button-hover': '#2626ff',\n        '--building-afford': '#a90000',\n        '--tab-active': '#8b00c5',\n        '--tab-elements': '#9f6700',\n        '--tab-strangeness': '#00b100',\n        '--tab-inflation': '#6c1ad1',\n        '--hollow-hover': '#170089',\n        '--footerButton-hover': '#181818',\n        '--input-border': '#831aa5',\n        '--input-text': '#cf71ff',\n        '--button-text': '#e3e3e3',\n        '--main-text': 'var(--cyan-text)',\n        '--white-text': 'white',\n        //'--cyan-text': '#03d3d3',\n        '--blue-text': 'dodgerblue',\n        '--orange-text': 'darkorange',\n        '--gray-text': '#8f8f8f',\n        '--orchid-text': '#e14bdb',\n        '--darkorchid-text': '#bd24ef',\n        '--darkviolet-text': '#8b3cec',\n        //'--brown-text': '#9b7346',\n        '--red-text': '#eb0000',\n        '--green-text': '#00e900',\n        '--yellow-text': '#fafa00'\n    };\n\n    /* Many of these colors will need to be changed in other places (find them with quick search, there are too many of them) */\n    switch (theme ?? player.stage.active) {\n        case 1:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--darkorchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--blue-text)';\n                getId(`${text}Cost`).style.color = 'var(--orange-text)';\n            }\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            break;\n        case 2:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--white-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#070026';\n            properties['--window-color'] = '#000052';\n            properties['--window-border'] = 'blue';\n            properties['--footer-color'] = '#0000db';\n            properties['--button-color'] = '#0000eb';\n            properties['--button-border'] = '#386cc7';\n            properties['--button-hover'] = '#2929ff';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#990000';\n            properties['--hollow-hover'] = '#2400d7';\n            properties['--input-border'] = '#4747ff';\n            properties['--input-text'] = 'dodgerblue';\n            properties['--main-text'] = 'var(--blue-text)';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#8766ff';\n            properties['--green-text'] = '#82cb3b';\n            properties['--red-text'] = '#f70000';\n            break;\n        case 3:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--blue-text)';\n                getId(`${text}Cost`).style.color = 'var(--green-text)';\n            }\n            properties['--background-color'] = '#000804';\n            properties['--window-color'] = '#2e1200';\n            properties['--window-border'] = '#31373e';\n            properties['--footer-color'] = '#221a00';\n            properties['--button-color'] = '#291344';\n            properties['--button-border'] = '#424242';\n            properties['--button-hover'] = '#382055';\n            properties['--building-afford'] = '#9e0000';\n            properties['--tab-active'] = '#8d4c00';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#5a2100';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#8b4a00';\n            properties['--input-text'] = '#e77e00';\n            properties['--main-text'] = 'var(--gray-text)';\n            properties['--white-text'] = '#dfdfdf';\n            properties['--orange-text'] = '#f58600';\n            properties['--green-text'] = '#00db00';\n            break;\n        case 4:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--blue-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#140e04';\n            properties['--window-color'] = '#4e0000';\n            properties['--window-border'] = '#894800';\n            properties['--footer-color'] = '#4e0505';\n            properties['--button-color'] = '#6a3700';\n            properties['--button-border'] = '#a35700';\n            properties['--button-hover'] = '#8a4700';\n            properties['--building-afford'] = '#007f95';\n            properties['--tab-active'] = '#008297';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--tab-strangeness'] = '#00a500';\n            properties['--hollow-hover'] = '#605100';\n            properties['--footerButton-hover'] = '#212121';\n            properties['--input-border'] = '#008399';\n            properties['--input-text'] = '#05c3c3';\n            properties['--button-text'] = '#d9d900';\n            properties['--main-text'] = 'var(--orange-text)';\n            properties['--white-text'] = '#e5e500';\n            properties['--blue-text'] = '#2e96ff';\n            properties['--gray-text'] = '#8b8b8b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#9457ff';\n            properties['--red-text'] = 'red';\n            properties['--green-text'] = '#00e600';\n            properties['--yellow-text'] = 'var(--green-text)';\n            break;\n        case 5:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = '#060010';\n            properties['--window-color'] = '#001d42';\n            properties['--window-border'] = '#35466e';\n            properties['--footer-color'] = '#2f005c';\n            properties['--button-color'] = '#4a008f';\n            properties['--button-border'] = '#8f004c';\n            properties['--button-hover'] = '#6800d6';\n            properties['--building-afford'] = '#8603ff';\n            properties['--tab-active'] = '#8500ff';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#3b0080';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#3656a1';\n            properties['--input-text'] = '#6a88cd';\n            properties['--button-text'] = '#fc9cfc';\n            properties['--main-text'] = 'var(--darkorchid-text)';\n            properties['--white-text'] = '#ff79ff';\n            properties['--orchid-text'] = '#ff00f4';\n            properties['--darkorchid-text'] = '#c000ff';\n            properties['--darkviolet-text'] = '#8861ff';\n            properties['--yellow-text'] = 'var(--darkviolet-text)';\n            break;\n        case 6:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--orange-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = 'black';\n            properties['--window-color'] = '#01003c';\n            properties['--window-border'] = '#7100ff';\n            properties['--footer-color'] = '#00007a';\n            properties['--button-color'] = '#2b0095';\n            properties['--button-border'] = '#6c1ad1';\n            properties['--button-hover'] = '#3d00d6';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#8d0000';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#490070';\n            properties['--input-border'] = '#a50000';\n            properties['--input-text'] = 'red';\n            properties['--button-text'] = '#bfbdff';\n            properties['--main-text'] = 'var(--darkviolet-text)';\n            properties['--white-text'] = '#aba8ff';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkviolet-text'] = '#8157ff';\n            properties['--red-text'] = 'red';\n            properties['--yellow-text'] = 'var(--green-text)';\n    }\n\n    const body = document.documentElement.style;\n    body.setProperty('--transition-all', '800ms');\n    body.setProperty('--transition-buttons', '600ms');\n    for (const property in properties) { body.setProperty(property, properties[property as '--main-text']); }\n\n    setTimeout(() => {\n        body.setProperty('--transition-all', '0ms');\n        body.setProperty('--transition-buttons', '100ms');\n    }, 800);\n};\n\nexport const Alert = async(text: string, priority = 0): Promise<void> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve();\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        const key = async(event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                confirm.focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve();\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string, priority = 0): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(false);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        let result = false;\n        const yes = () => {\n            result = true;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                if (event.shiftKey || document.activeElement === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                event.preventDefault();\n                (document.activeElement === cancel ? confirm : cancel).focus();\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\nexport const Prompt = async(text: string, placeholder = '', priority = 0): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(null);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.body;\n        const blocker = getId('alertMain');\n        const input = getId('alertInput') as HTMLInputElement;\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        body.classList.remove('noTextSelection');\n        input.placeholder = placeholder;\n        input.value = '';\n        const oldFocus = document.activeElement as HTMLElement | null;\n        input.focus();\n\n        let result: null | string = null;\n        const yes = () => {\n            result = input.value === '' ? input.placeholder : input.value;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (event.shiftKey) { return; }\n                event.preventDefault();\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                const active = document.activeElement;\n                if (event.shiftKey || (code === 'Space' && active === input) || active === cancel) { return; }\n                event.preventDefault();\n                yes();\n            } else if (code === 'Tab') {\n                if (event.shiftKey && document.activeElement === input) {\n                    event.preventDefault();\n                    cancel.focus();\n                } else if (!event.shiftKey && document.activeElement === cancel) {\n                    event.preventDefault();\n                    input.focus();\n                }\n            }\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\n/** Start will make it behave as if X duplicates have been detected */\nexport const Notify = (text: string, start = 1) => {\n    const { notifications } = specialHTML;\n\n    let index;\n    for (let i = 0; i < notifications.length; i++) {\n        if (notifications[i][0] === text) {\n            index = i;\n            break;\n        }\n    }\n\n    if (index === undefined) {\n        let count = start;\n        let timeout: number;\n\n        const html = document.createElement('p');\n        html.textContent = `${text}${count > 1 ? ` | x${count}` : ''}`;\n        html.style.animation = 'hideX 800ms ease-in-out reverse';\n        html.style.pointerEvents = 'none';\n        if (globalSave.SRSettings[0]) { html.role = 'alert'; }\n        getId('notifications').append(html);\n\n        const pointer = notifications[notifications.push([text, (instantClose = false) => {\n            if (instantClose) {\n                if (html.style.animation === '') { remove(); }\n                return;\n            }\n            html.textContent = `${text} | x${++count}`;\n            if (timeout === undefined) { return; } //Required to make it work properly if call happened too early\n            clearTimeout(timeout);\n            timeout = setTimeout(remove, 7200);\n        }]) - 1];\n        const remove = () => {\n            const index = notifications.indexOf(pointer);\n            if (index !== -1) { notifications.splice(index, 1); }\n            html.removeEventListener('click', remove);\n            html.style.animation = 'hideX 800ms ease-in-out forwards';\n            html.style.pointerEvents = 'none';\n            setTimeout(() => html.remove(), 800);\n            clearTimeout(timeout);\n        };\n        setTimeout(() => {\n            html.style.animation = '';\n            html.style.pointerEvents = '';\n            timeout = setTimeout(remove, 7200);\n            html.addEventListener('click', remove);\n        }, 800);\n    } else { notifications[index][1](); }\n};\n\n/** Notify about error in the code with a cooldown of 20 seconds */\nexport const errorNotify = (text: string) => {\n    const { errorCooldowns } = specialHTML;\n    if (errorCooldowns.includes(text)) { return; }\n\n    Notify(text);\n    errorCooldowns.push(text);\n    setTimeout(() => {\n        const index = errorCooldowns.indexOf(text);\n        if (index !== -1) { errorCooldowns.splice(index, 1); }\n    }, 2e4);\n};\n\nexport const resetMinSizes = (full = true) => {\n    for (let i = 1; i <= 3; i++) {\n        const element = getQuery(`#special${i} > p`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n    for (let i = 0; i < global.researchesInfo[player.stage.active].maxActive; i++) {\n        const element = getQuery(`#research${i + 1} > p`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n    for (let i = 0; i < global.researchesExtraInfo[player.stage.active].maxActive; i++) {\n        const element = getQuery(`#researchExtra${i + 1} > p`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n\n    if (!full) { return; }\n    const mile = getId('milestonesMultiline').parentElement as HTMLElement;\n    specialHTML.cache.innerHTML.set(mile, '');\n    mile.style.minHeight = '';\n};\n\nexport const changeFontSize = (initial = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    const size = Math.min(Math.max(initial ? globalSave.fontSize : (input.value === '' ? 16 : Math.floor(Number(input.value) * 100) / 100), 12), 24);\n    if (!initial) {\n        globalSave.fontSize = size;\n        saveGlobalSettings();\n        resetMinSizes();\n    }\n\n    document.documentElement.style.fontSize = size === 16 ? '' : `${size}px`;\n    input.value = `${size}`;\n    adjustCSSRules(initial);\n};\n/* Only decent work around media not allowing var() and rem units being bugged */\nconst adjustCSSRules = (initial: boolean) => {\n    const styleSheet = (getId('primaryRules') as HTMLStyleElement).sheet;\n    if (styleSheet == null) { //Safari doesn't wait for CSS to load even if script is defered\n        if (initial) {\n            return getId('primaryRules').addEventListener('load', () => {\n                adjustCSSRules(false);\n            }, { once: true });\n        }\n        return Notify(`Due to '${styleSheet}' related Error some font size features will not work`);\n    }\n    const styleLength = styleSheet.cssRules.length - 1;\n    const fontRatio = globalSave.fontSize / 16;\n    const rule1 = styleSheet.cssRules[styleLength - 1] as CSSMediaRule; //Primary phone size\n    const rule2 = styleSheet.cssRules[styleLength] as CSSMediaRule; //Tiny phone size\n    styleSheet.deleteRule(styleLength);\n    styleSheet.deleteRule(styleLength - 1);\n    styleSheet.insertRule(rule1.cssText.replace(rule1.conditionText, `screen and (max-width: ${893 * fontRatio + 32}px)`), styleLength - 1);\n    styleSheet.insertRule(rule2.cssText.replace(rule2.conditionText, `screen and (max-width: ${362 * fontRatio + 32}px)`), styleLength);\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    let value = htmlInput.value.replace(' ', '\u00A0'); //No break space\n    const allowed = ['.', '\u00B7', ',', '\u00A0', '_', \"'\", '\"', '`', '|'].includes(value);\n    if (!allowed || globalSave.format[point ? 1 : 0] === value) {\n        if (point && globalSave.format[1] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            globalSave.format[1] = '';\n        }\n        value = point ? '.' : '';\n        htmlInput.value = value;\n    }\n    globalSave.format[point ? 0 : 1] = value;\n    saveGlobalSettings();\n};\n\n/** Short is only for hotkeys that can change */\nexport const SRHotkeysInfo = (short = false) => {\n    const index = globalSave.toggles[0] ? 0 : 1;\n    const resetName = specialHTML.resetHTML[player.stage.active];\n    const resetHotkey = globalSave.hotkeys[resetName.toLowerCase() as hotkeysList];\n    const list = [resetHotkey !== undefined ? resetHotkey[index] : ''];\n    if (!short) {\n        list.push(\n            globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index],\n            globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index],\n            globalSave.hotkeys.stageLeft[index], globalSave.hotkeys.stageRight[index],\n            globalSave.hotkeys.stage[index],\n            globalSave.hotkeys.makeAll[index],\n            globalSave.hotkeys.toggleAll[index]\n        );\n    }\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n    }\n    const reset1Id = getId('reset1Main');\n    reset1Id.ariaLabel = `${resetName} reset`;\n    reset1Id.ariaDescription = `Hotkey is ${list[0]}`;\n    if (short) { return; }\n    getQuery('#footerMain > nav').ariaDescription = `Hotkeys are ${list[1]} and ${list[2]}`;\n    getId('subtabs').ariaDescription = `Hotkeys are ${list[3]} and ${list[4]}`;\n    getId('stageSelect').ariaDescription = `Hotkeys are ${list[5]} and ${list[6]}`;\n    getId('resetStage').ariaDescription = `Hotkey is ${list[7]}`;\n    getId('makeAllStructures').ariaDescription = `Hotkey is ${list[8]}`;\n    getId('toggleBuilding0').ariaDescription = `Hotkey is ${list[9]}`;\n};\n\nexport const MDStrangenessPage = (stageIndex: number) => {\n    getId(`strangenessSection${global.debug.MDStrangePage}`).style.display = 'none';\n    getId(`strangenessSection${stageIndex}`).style.display = '';\n    global.debug.MDStrangePage = stageIndex;\n};\n\nexport const replayEvent = async() => {\n    let last;\n    if (player.stage.true >= 7) {\n        last = player.event ? 10 : 9;\n    } else if (player.stage.true === 6) {\n        last = player.event ? 8 : player.stage.resets >= 1 ? 7 : 6;\n    } else {\n        last = player.stage.true - (player.event ? 0 : 1);\n        if (last < 1) { return void Alert('There are no unlocked events'); }\n    }\n\n    let text = 'Which event do you want to see again?\\nEvent 1: Stage reset';\n    if (last >= 2) { text += '\\nEvent 2: Clouds softcap'; }\n    if (last >= 3) { text += '\\nEvent 3: New Rank'; }\n    if (last >= 4) { text += '\\nEvent 4: New Elements'; }\n    if (last >= 5) { text += '\\nEvent 5: Intergalactic'; }\n    if (last >= 6) { text += '\\nEvent 6: True Vacuum'; }\n    if (last >= 7) { text += '\\nEvent 7: Void unlocked'; }\n    if (last >= 8) { text += '\\nEvent 8: First Merge'; }\n    if (last >= 9) { text += '\\nEvent 9: Inflation'; }\n    if (last >= 10) { text += '\\nEvent 10: Supervoid'; }\n\n    const event = Number(await Prompt(text, `${last}`));\n    if (event <= 0 || !isFinite(event)) { return; }\n    if (event > last) { return void Alert('That event is not unlocked'); }\n    playEvent(event);\n};\n\n/** Sets player.event to true if replay is false */\nexport const playEvent = (event: number, replay = true) => {\n    if (global.offline.active || specialHTML.alert[0] !== null) { return; }\n    if (!replay) { player.event = true; }\n\n    let text = 'No such event';\n    if (event === 1) {\n        text = 'A new reset tier has been unlocked. It will allow the creation of higher tier Structures, but for the price of everything else';\n    } else if (event === 2) {\n        text = `Cloud density is too high... Any new Clouds past ${format(1e4)} will be weaker due to the softcap`;\n    } else if (event === 3) {\n        if (!replay) {\n            assignResetInformation.maxRank();\n            global.debug.rankUpdated = null;\n        }\n        text = 'Cannot gain any more Mass with current Rank. A new one has been unlocked, but reaching it will softcap the Mass production';\n    } else if (event === 4) {\n        text = 'That last explosion not only created the first Neutron stars, but also unlocked new Elements through Supernova nucleosynthesis';\n    } else if (event === 5) {\n        if (!replay) { stageUpdate(false); }\n        text = \"There are no Structures in Intergalactic yet, but knowledge for their creation can be found within previous Stages. Stage resets and exports will now award Strange quarks, '[26] Iron' Element will use new effect to improve Stage reset reward.\\n(Stars in Intergalactic are just Stars from Interstellar)\";\n    } else if (event === 6) {\n        text = 'As Galaxies began to Merge, their combined Gravity pushed Vacuum out of its local minimum into a more stable global minimum. New forces and Structures are expected within this new and true Vacuum state';\n    } else if (event === 7) {\n        text = \"With Vacuum decaying, the remaining matter had rearranged itself, which had lead to the formation of the 'Void'. Check it out in the 'Advanced' subtab\";\n    } else if (event === 8) {\n        if (!replay) { stageUpdate(false); }\n        text = \"As Galaxies began to Merge, their combined Gravity started forming an even bigger Structure - the 'Universe'. Will need to maximize Galaxies before every Merge to get enough Score to create it.\\n(Merge reset can only be done a limited amount of times per Stage reset)\";\n    } else if (event === 9) {\n        text = \"Now that the first Universe is finished, it's time to Inflate a new one and so to unlock the Inflation tab, new Upgrades and more Void rewards to complete\\n(Also improve 'Nucleosynthesis' effect to unlock more Elements based on self-made Universes)\";\n    } else if (event === 10) {\n        if (!replay) { visualTrueStageUnlocks(); }\n        text = \"Now that there was even more matter to rearrange \u2012 the 'Supervoid' was formed. Check it out by clicking on the Void name in the 'Advanced' subtab.\\n(Also unlocked 2 new Inflations, Supervoid unlocks are kept through Universe reset)\";\n    }\n    if (!replay) { text += \"\\n\\n(Can be viewed again with 'Events' button in Settings tab)\"; }\n    return void Alert(text);\n};\n\nconst buildBigWindow = (subWindow: string): null | HTMLElement => {\n    if (getId('closeBigWindow', true) === null) {\n        getId('bigWindow').innerHTML = '<div role=\"dialog\" aria-modal=\"false\"><button type=\"button\" id=\"closeBigWindow\">Close</button></div>';\n        specialHTML.styleSheet.textContent += `#bigWindow > div { display: flex; flex-direction: column; align-items: center; width: clamp(20vw, 38em, 80vw); height: clamp(18vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em; }\n            #bigWindow > div > button { flex-shrink: 0; border-radius: 4px; width: 6em; font-size: 0.92em; }\n            #bigWindow > div > div { width: 100%; height: 100%; overflow-y: auto; overscroll-behavior-y: none; }`;\n    }\n\n    if (getId(subWindow, true) !== null) { return null; }\n    const mainHTML = document.createElement('div');\n    getQuery('#bigWindow > div').prepend(mainHTML);\n    mainHTML.id = subWindow;\n    mainHTML.role = 'dialog';\n    return mainHTML;\n};\nconst addCloseEvents = (sectionHTML: HTMLElement, firstTargetHTML = null as HTMLElement | null) => {\n    const closeButton = getId('closeBigWindow');\n    const windowHMTL = getId('bigWindow');\n    if (firstTargetHTML === null) { firstTargetHTML = closeButton; }\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) { return; }\n        const code = event.code;\n        if (firstTargetHTML === closeButton ? (code === 'Escape' || code === 'Enter' || code === 'Space') :\n            ((!global.hotkeys.disabled && code === 'Escape') || ((code === 'Enter' || code === 'Space') && document.activeElement === closeButton))) {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        sectionHTML.style.display = 'none';\n        document.body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    document.body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    sectionHTML.style.display = '';\n    windowHMTL.style.display = '';\n    firstTargetHTML.focus();\n};\n\nexport const openVersionInfo = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('versionHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h6>v0.2.5</h6><p>- Will be added later\\n<a href=\"https://docs.google.com/document/d/1O8Zz1f7Ez2HsfTVAxG_V2t9-yC77-mJuEru15HeDy0U/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Full changelog</a></p>\n        <h6>v0.2.4</h6><p>- Offline ticks are now as effective as Online\\n- Inflation loadouts\\n\\n- Added the log\\n- Minor Strangeness rebalance</p>\n        <h6>v0.2.3</h6><p>- Small amount of new content\\n- Supervoid rework\\n- Abyss small rebalance</p>\n        <h6>v0.2.2</h6><p>- New content (Supervoid)\\n- Better Offline calculation and more options related to it\\n- Entering Void now saves the game to load it after exiting</p>\n        <h6>v0.2.1</h6><p>- New content (Abyss)\\n- Full game rebalance\\n- Custom hotkeys\\n- Updated supports\\n- Many small changes and additions</p>\n        <h6>v0.2.0</h6><p>- Reworked balance for all Stages past first reset cycle\\n- Many quality of life additions\\n- Most of settings are now saved separate from save file\\n- Some more work on Mobile device support</p>\n        <h6>v0.1.9</h6><p>- More true Vacuum balance\\n- Reworked time related formats\\n- Warp and Offline time usage reworked</p>\n        <h6>v0.1.8</h6><p>- True Vacuum small balance changes\\n- Upgrades and Researches merged\\n- Added copy to the clipboard, load from string save file options</p>\n        <h6>v0.1.7</h6><p>- New content (Void)\\n- Further balance changes</p>\n        <h6>v0.1.6</h6><p>- Massive rebalance and reworks for all Stages</p>\n        <h6>v0.1.5</h6><p>- True Vacuum minor balance\\n- Images no longer unload\\n- Screen reader support reworked</p>\n        <h6>v0.1.4</h6><p>- Custom scrolls\\n- Notifications</p>\n        <h6>v0.1.3</h6><p>- True Vacuum balance changes\\n- Submerged Stage minor balance\\n- Replay event button\\n\\n- History for Stage resets</p>\n        <h6>v0.1.2</h6><p>- New content (Vacuum)\\n- Offline time reworked\\n- Added version window (removed change log on game load)\\n- Permanently removed text movement</p>\n        <h6>v0.1.1</h6><p>- More balance changes for late game</p>\n        <h6>v0.1.0</h6><p>- New content (Intergalactic)\\n- Balance changes for late game</p>\n        <h6>v0.0.9</h6><p>- New content (Milestones)\\n- More Interstellar and late game balance</p>\n        <h6>v0.0.8</h6><p>- Minor speed up to all Stages past Microworld</p>\n        <h6>v0.0.7</h6><p>- New content (Strangeness)\\n- Microworld Stage rework\\n\\n- Added stats for Save file name</p>\n        <h6>v0.0.6</h6><p>- Added hotkeys list\\n\\n- Option to remove text movement\\n- Ability to rename the save file</p>\n        <h6>v0.0.5</h6><p>- New content (Interstellar)\\n- Basic loading screen\\n\\n- Added hotkeys</p>\n        <h6>v0.0.4</h6><p>- Speed up to all Stages\\n- Added events\\n\\n- Added numbers format</p>\n        <h6>v0.0.3</h6><p>- New content (Accretion)\\n- Submerged Stage extended\\n- Offline time calculated better</p>\n        <h6>v0.0.2</h6><p>- Stats subtab</p>\n        <h6>v0.0.1</h6><p>- Submerged Stage rework\\n- Added change log on game load\\n\\n- Mobile device support</p>\n        <h6>v0.0.0</h6><p>- First published version\\n\\n- Submerged Stage placeholder</p>`;\n        mainHTML.ariaLabel = 'Versions menu';\n        specialHTML.styleSheet.textContent += `#versionHTML h6 { font-size: 1.18em; }\n            #versionHTML p { line-height: 1.3em; white-space: pre-line; color: var(--white-text); margin-top: 0.2em; margin-bottom: 1.4em; }\n            #versionHTML p:last-of-type { margin-bottom: 0; }`;\n    }\n\n    specialHTML.bigWindow = 'version';\n    addCloseEvents(getId('versionHTML'));\n};\n\nexport const openHotkeys = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('hotkeysHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h3 id=\"hotkeysMessage\" class=\"bigWord\" aria-live=\"assertive\">Some hotkeys can be changed by clicking on them</h3>\n        ${globalSave.MDSettings[0] ? `<p>Left or Right swipe \u2012 <span class=\"whiteText\">change current tab</span></p>\n        <p>Diagonal Down or Up swipe \u2012 <span class=\"whiteText\">change current subtab</span></p>\n        <p id=\"stageSwipe\">Long Left or Right swipe \u2012 <span class=\"whiteText\">change current active Stage</span></p>` : ''}\n        <label id=\"tabRightHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change tab to the next one</span></label>\n        <label id=\"tabLeftHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change tab to the previous one</span></label>\n        <label id=\"subtabUpHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change subtab to the next one</span></label>\n        <label id=\"subtabDownHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change subtab to the previous one</span></label>\n        <label id=\"stageRightHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change active Stage to the next one</span></label>\n        <label id=\"stageLeftHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change active Stage to the previous one</span></label>\n        <p>Numbers \u2012 <span class=\"whiteText\">make a Structure</span></p>\n        <label id=\"makeAllHotkey\">0 <span class=\"whiteText\">or</span> <button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">make all Structures</span></label>\n        <p>Shift Numbers \u2012 <span class=\"whiteText\">toggle auto Structure</span></p>\n        <label id=\"toggleAllHotkey\">Shift 0 <span class=\"whiteText\">or</span> <button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">toggle all auto Structures</span></label>\n        <label id=\"exitChallengeHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Exit out of current Challenge</span></label>\n        <div>\n            <label id=\"stageHotkey\" class=\"stageText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Stage reset</span></label>\n            <label id=\"dischargeHotkey\" class=\"orangeText stage1Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Discharge</span></label>\n            <label id=\"vaporizationHotkey\" class=\"blueText stage2Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Vaporization</span></label>\n            <label id=\"rankHotkey\" class=\"darkorchidText stage3Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Rank</span></label>\n            <label id=\"collapseHotkey\" class=\"orchidText stage4Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Collapse</span></label>\n            <label id=\"galaxyHotkey\" class=\"grayText stage5Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Galaxy</span></label>\n            <label id=\"mergeHotkey\" class=\"darkvioletText stage5Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Merge</span></label>\n            <label id=\"universeHotkey\" class=\"darkvioletText stage6Include\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Universe</span></label>\n            <label id=\"pauseHotkey\" class=\"grayText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">pause</span></label>\n        </div>\n        <p>Enter <span class=\"whiteText\">or</span> Space \u2012 <span class=\"whiteText\">click selected HTML Element or confirm Alert</span></p>\n        <p>Escape \u2012 <span class=\"whiteText\">cancel changing hotkey, close Alert or Notification</span></p>\n        <p>Tab <span class=\"whiteText\">and</span> Shift Tab \u2012 <span class=\"whiteText\">select another HTML Element</span></p>\n        <p>Holding Enter on last selected button will repeatedly press it, also works with Mouse and Touch events on some buttons</p>\n        <label id=\"hotkeysToggleLabel\" title=\"Turn ON, if using non-QWERTY layout keyboard\">Language dependant hotkeys </label>\n        <button type=\"button\" id=\"restoreHotkeys\" class=\"selectBtn\">Restore default hotkeys values</button>`; //Spacebar at the end of label is required\n        mainHTML.ariaLabel = 'Hotkeys menu';\n        const toggle = getId('globalToggle0');\n        toggle.style.display = '';\n        getId('hotkeysToggleLabel').append(toggle);\n        specialHTML.styleSheet.textContent += `#hotkeysHTML { display: flex; flex-direction: column; align-items: center; row-gap: 0.2em; }\n            #hotkeysHTML > div { display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%; gap: 0.3em; }\n            #hotkeysHTML > div label { justify-self: center; width: max-content; }`;\n\n        const changeHotkey = async(disableFirstUp = false): Promise<string[] | null> => {\n            return await new Promise((resolve) => {\n                getId('hotkeysMessage').textContent = 'Awaiting new value for the hotkey';\n                const body = document.body;\n                let result: null | string[] = null;\n                const prevent = (event: KeyboardEvent) => {\n                    const code = event.code;\n                    if (code === 'Tab') { return; }\n                    event.preventDefault();\n                    if (code === 'Escape' || ((code === 'Enter' || code === 'Space') && document.activeElement === getId('closeBigWindow'))) {\n                        finish();\n                    }\n                };\n                const detect = async(event: KeyboardEvent) => {\n                    if (disableFirstUp) { return void (disableFirstUp = false); }\n                    const { key, code } = event;\n                    if (code === 'Tab' || code === 'Escape') { return; }\n                    let prefix = event.metaKey ? 'Meta ' : '';\n                    if (event.ctrlKey) { prefix += 'Ctrl '; }\n                    if (event.shiftKey) { prefix += 'Shift '; }\n                    if (event.altKey) { prefix += 'Alt '; }\n                    if ((!isNaN(Number(code.replace('Digit', '').replace('Numpad', ''))) && code !== '') ||\n                        key === 'Meta' || key === 'Control' || key === 'Shift' || key === 'Alt' || code === 'Enter' || code === 'Space') {\n                        getId('hotkeysMessage').textContent = `Value '${prefix}${globalSave.toggles[0] ? key : code}' for hotkeys isn't allowed`;\n                        return;\n                    }\n                    result = [`${prefix}${key.length === 1 ? key.toUpperCase() : key.replace('Arrow', 'Arrow ')}`,\n                        `${prefix}${key.length === 1 ? code.replace('Key', '') : code.replace('Arrow', 'Arrow ')}`];\n                    finish();\n                };\n                const finish = () => {\n                    body.removeEventListener('keydown', prevent);\n                    body.removeEventListener('keyup', detect);\n                    body.removeEventListener('click', finish, { capture: true });\n                    global.hotkeys.disabled = false;\n                    resolve(result);\n                };\n                global.hotkeys.disabled = true;\n                body.addEventListener('keydown', prevent);\n                body.addEventListener('keyup', detect);\n                body.addEventListener('click', finish, { capture: true });\n            });\n        };\n        const index = globalSave.toggles[0] ? 0 : 1;\n        for (const key in globalSaveStart.hotkeys) {\n            const button = getQuery(`#${key}Hotkey > button`) as HTMLButtonElement;\n            const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n            button.textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n            button.type = 'button';\n            button.addEventListener('click', async(event) => {\n                const button = getQuery(`#${key}Hotkey > button`);\n                button.style.borderBottomStyle = 'dashed';\n                const newHotkey = await changeHotkey(event.clientX === 0); //Check if click was caused by pressing Enter\n                if (newHotkey !== null) {\n                    const index = globalSave.toggles[0] ? 0 : 1;\n                    const removed = removeHotkey(newHotkey[index]);\n                    if (removed !== null && removed !== key) { getQuery(`#${removed}Hotkey > button`).textContent = 'None'; }\n                    button.textContent = newHotkey[index];\n                    globalSave.hotkeys[key as hotkeysList] = newHotkey;\n                    assignHotkeys();\n                    saveGlobalSettings();\n                }\n                button.style.borderBottomStyle = '';\n                getId('hotkeysMessage').textContent = 'Some hotkeys can be changed by clicking on them';\n            });\n        }\n        getId('restoreHotkeys').addEventListener('click', () => {\n            globalSave.hotkeys = deepClone(globalSaveStart.hotkeys);\n            const index = globalSave.toggles[0] ? 0 : 1;\n            for (const key in globalSave.hotkeys) {\n                getQuery(`#${key}Hotkey > button`).textContent = globalSave.hotkeys[key as hotkeysList][index] as string;\n            }\n            assignHotkeys();\n            saveGlobalSettings();\n        });\n    }\n\n    specialHTML.bigWindow = 'hotkeys';\n    addCloseEvents(getId('hotkeysHTML'), getQuery('#tabRightHotkey > button'));\n    stageUpdate(false);\n    visualTrueStageUnlocks();\n};\n\nexport const openLog = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('logHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h2 class=\"whiteText\"><span class=\"biggerWord mainText\">Log</span> | <button type=\"button\" id=\"logOrder\" class=\"selectBtn mainText\">Entries on top are newer</button></h2>\n        <ul id=\"logMain\"><li></li></ul>`; //Empty <li> is required\n        mainHTML.ariaLabel = 'Versions menu';\n        specialHTML.styleSheet.textContent += `#logHTML { display: flex; flex-direction: column; }\n            #logMain { display: flex; flex-direction: column; text-align: start; border-top: 2px solid; border-bottom: 2px solid; height: 100%; padding: 0.2em 0.4em; margin-top: 0.4em; overflow-y: scroll; overscroll-behavior-y: none; }\n            #logMain > li { list-style: inside \"\u2012 \"; }\n            #logMain.bottom { flex-direction: column-reverse; } /* Cheap way to change the order */\n            #logMain.bottom > li:first-of-type { margin-bottom: auto; }`;\n        getId('logOrder').addEventListener('click', () => {\n            const bottom = getId('logMain').classList.toggle('bottom');\n            getId('logOrder').textContent = `Entries on ${bottom ? 'bottom' : 'top'} are newer`;\n        });\n    }\n\n    specialHTML.bigWindow = 'log';\n    addCloseEvents(getId('logHTML'));\n    visualUpdate();\n};\n", "import { globalSave } from './Special';\n\ntype allowedTypes = string | number | bigint | [number, number] | Overlimit;\n/* This is version has all settings (and other stuff) removed (for better speed) */\n/** To test number for being Overlimit can use: typeof number === 'object'; Array.isArray(number); number instanceof Overlimit\n * @param number allowed types are string, number, bigint, Overlimit and [number, number]; If Array is used, then must not contain any mistakes (example and proper way: [11, 0] > [1.1, 1]; [1, NaN] > [NaN, NaN]; [1, 1.4] > [1, 1])\n */\nexport default class Overlimit extends Array<number> {\n    constructor(number: allowedTypes) {\n        const post = technical.convert(number);\n        super(post[0], post[1]);\n    }\n    get mantissa() { return this[0]; }\n    get exponent() { return this[1]; }\n\n    /** Can be used inside native sorting function, equal to a - b. First variable must be Overlimit, doesn't require cloning, example: [1, '2', new Overlimit(3)].sort((a, b) => Overlimit.compareFunc(new Overlimit(b), a)) */\n    static compareFunc(left: Overlimit, right: allowedTypes): 1 | 0 | -1 {\n        return left.moreThan(right) ? 1 : left.notEqual(right) ? -1 : 0;\n    }\n\n    /** Creates new Overlimit */\n    clone(): Overlimit { return new Overlimit(this); }\n    setValue(newValue: allowedTypes) { return this.privateSet(technical.convert(newValue)); }\n\n    /** Not for use, sets formatted value to Overlimit */\n    privateSet(newValue: [number, number] | Overlimit) {\n        this[0] = newValue[0];\n        this[1] = newValue[1];\n        return this;\n    }\n\n    /** Can take any amount of arquments */\n    plus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.add(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    minus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.sub(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    multiply(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.mult(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    divide(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.div(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Power must be a number */\n    power(power: number) { return this.privateSet(technical.pow(this, power)); }\n    /** Root must be a number, default value is 2 */\n    root(root = 2) { return this.privateSet(technical.pow(this, 1 / root)); }\n    /** Default value is Math.E */\n    log(base?: allowedTypes) { return this.privateSet(technical.log(this, base === undefined ? [2.718281828459045, 0] : technical.convert(base))); }\n\n    abs() {\n        this[0] = Math.abs(this[0]);\n        return this;\n    }\n\n    trunc() { return this.privateSet(technical.trunc(this)); }\n    floor() { return this.privateSet(technical.floor(this)); }\n    ceil() { return this.privateSet(technical.ceil(this)); }\n    round() { return this.privateSet(technical.round(this)); }\n\n    /** Doesn't check exponent, since exponent being NaN while mantissa isn't would be a bug */\n    isNaN(): boolean { return isNaN(this[0])/* || isNaN(this[1])*/; }\n    /** Will set new value to the provided one, but only if current one is NaN */\n    replaceNaN(replaceWith: allowedTypes): Overlimit { return isNaN(this[0]) ? this.privateSet(technical.convert(replaceWith)) : this; }\n    /** Doesn't check exponent, since exponent being Infinity while mantissa isn't would be a bug */\n    isFinite(): boolean { return isFinite(this[0])/* && isFinite(this[1])*/; }\n\n    lessThan(compare: allowedTypes): boolean { return technical.less(this, technical.convert(compare)); }\n    lessOrEqual(compare: allowedTypes): boolean { return technical.lessOrEqual(this, technical.convert(compare)); }\n    moreThan(compare: allowedTypes): boolean { return technical.more(this, technical.convert(compare)); }\n    moreOrEqual(compare: allowedTypes): boolean { return technical.moreOrEqual(this, technical.convert(compare)); }\n    notEqual(compare: allowedTypes): boolean { return technical.notEqual(this, technical.convert(compare)); }\n    /** Can take any amount of arquments; Returns true if no arquments provided */\n    equal(...compare: allowedTypes[]): boolean {\n        let previous: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const next = technical.convert(compare[i]);\n            if (technical.notEqual(previous, next)) { return false; }\n            previous = next;\n        }\n\n        return true;\n    }\n\n    /** Set original number to the biggest of provided arguments */\n    max(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.privateSet([NaN, NaN]); }\n\n            if (technical.less(result, after)) { result = after; }\n        }\n\n        return this.privateSet(result);\n    }\n    /** Set original number to the smallest of provided arguments */\n    min(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.privateSet([NaN, NaN]); }\n\n            if (technical.more(result, after)) { result = after; }\n        }\n\n        return this.privateSet(result);\n    }\n\n    /** Returns formatted string, takes object as arqument\n     * @param type \"number\" is default, \"input\" will make formatted number to be usable in Overlimit\n     * @param padding should zeros be added past point, if below max digits. 'exponent' value will behave as true, but only after number turns to power version or above\n     */\n    format(settings = {} as { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string { return technical.format(this, settings); }\n    /** Returns value as Number, doesn't change original number */\n    toNumber(): number { return Number(technical.turnString(this)); }\n    /** Same as .toNumber, but also converts Infinity (and NaN; can use replaceNaN before calling this function) to Number.MAX_VALUE */\n    toSafeNumber(): number {\n        const result = Number(technical.turnString(this));\n        if (isFinite(result)) { return result; }\n        return Number.MAX_VALUE * (result < 0 ? -1 : 1);\n    }\n    /** Returns value as String, doesn't change original number */\n    toString(): string { return technical.turnString(this); }\n    /** Returns value as Array, doesn't change original number */\n    toArray(): [number, number] { return [this[0], this[1]]; }\n    /** Automatically called with JSON.stringify. It will call toString to preserve NaN and Infinity */\n    toJSON(): string { return technical.turnString(this); }\n}\n\n/** Private Overlimit functions */\nconst technical = {\n    convert: (number: allowedTypes): [number, number] | Overlimit => {\n        if (typeof number === 'object' && number !== null) { return number; } //Readonly Array\n        if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n        const index = number.indexOf('e'); //Array.split is 3 times slower\n        const result: [number, number] = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n\n        if (!isFinite(result[0]) || !isFinite(result[1])) {\n            if (result[0] === 0 || result[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(result[0]) || isNaN(result[1])) { return [NaN, NaN]; }\n            return [result[0] < 0 ? -Infinity : Infinity, Infinity];\n        }\n\n        const after = Math.abs(result[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after < 1 || after >= 10) {\n            const digits = Math.floor(Math.log10(after));\n            result[0] /= 10 ** digits;\n            result[1] += digits;\n\n            if (Math.abs(result[0]) < 1) { //Important\n                result[0] *= 10;\n                result[1]--;\n            }\n        }\n\n        //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n        result[0] = Math.round(result[0] * 1e14) / 1e14;\n        if (Math.abs(result[0]) === 10) {\n            result[0] /= 10;\n            result[1]++;\n        }\n\n        return result;\n    },\n    /* Number is readonly */\n    turnString: (number: [number, number] | Overlimit): string => number[1] === 0 || !isFinite(number[0]) ? `${number[0]}` : `${number[0]}e${number[1]}`,\n    /* Right is readonly */\n    add: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return left; }\n        if (left[0] === 0) { return [right[0], right[1]]; }\n        if (!isFinite(left[0]) || !isFinite(right[0])) {\n            const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n            return isNaN(check) ? [NaN, NaN] : [check, Infinity];\n        }\n\n        const difference = left[1] - right[1];\n        if (Math.abs(difference) >= 16) { return difference > 0 ? left : [right[0], right[1]]; }\n\n        if (difference === 0) {\n            left[0] += right[0];\n        } else if (difference > 0) {\n            left[0] += right[0] / 10 ** difference;\n        } else {\n            left[0] = right[0] + (left[0] * 10 ** difference);\n            left[1] = right[1];\n        }\n\n        const after = Math.abs(left[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        } else if (after < 1) {\n            const digits = -Math.floor(Math.log10(after));\n            left[0] *= 10 ** digits;\n            left[1] -= digits;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly, its quite a lazy function... */\n    sub: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => technical.add(left, [-right[0], right[1]]),\n    /* Right is readonly */\n    mult: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n        left[1] += right[1];\n        left[0] *= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly */\n    div: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return [NaN, NaN]; }\n        if (left[0] === 0) { return [0, 0]; }\n\n        left[1] -= right[1];\n        left[0] /= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) < 1) {\n            left[0] *= 10;\n            left[1]--;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    pow: (left: [number, number] | Overlimit, power: number): [number, number] | Overlimit => {\n        if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n        if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n        if (!isFinite(power)) {\n            if ((left[1] === 0 && left[0] === 1) || left[0] < 0) { return left[0] === 1 ? [1, 0] : [NaN, NaN]; }\n            if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n            return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n        if (negative !== null) { //Complex numbers are not supported\n            if (Math.floor(power) !== power) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const base10 = power * (Math.log10(left[0]) + left[1]);\n        if (!isFinite(base10)) {\n            if (base10 === -Infinity) { return [0, 0]; }\n            if (isNaN(left[0])) { return [NaN, NaN]; }\n            return [negative === 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n\n        if (negative === 1) { left[0] *= -1; }\n        return left;\n    },\n    /* Base is readonly */\n    log: (left: [number, number] | Overlimit, base: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (base[0] === 0 || (base[1] === 0 && Math.abs(base[0]) === 1)) { return [NaN, NaN]; }\n        if (left[1] === 0 && Math.abs(left[0]) === 1) { return left[0] === 1 ? [0, 0] : [NaN, NaN]; }\n        if (left[0] === 0) { return isNaN(base[0]) ? [NaN, NaN] : [Math.abs(base[0]) > 1 ? -Infinity : Infinity, Infinity]; }\n        if (!isFinite(base[0])) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n        if (!isFinite(left[0])) {\n            if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n            return [Math.abs(base[0]) < 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0;\n        if (negative) { //Complex numbers are not supported\n            if (base[0] > 0) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const tooSmall = left[1] < 0; //Minor issue with negative power\n        const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        if (tooSmall) { left[0] *= -1; } //Already can be negative\n        if (base[1] !== 1 || base[0] !== 1) {\n            left[0] /= Math.log10(Math.abs(base[0])) + base[1];\n\n            const after = Math.abs(left[0]);\n            if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                left[0] /= 10 ** digits;\n                left[1] += digits;\n            }\n        }\n\n        if (base[0] < 0 || negative) { //Special test for negative numbers\n            if (left[1] < 0) { return [NaN, NaN]; }\n            //Due to floats (1.1 * 100 !== 110), test is done in this way (also we assume that big numbers are never uneven)\n            const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n            if (base[0] < 0 && !negative) {\n                if (test !== 0) { return [NaN, NaN]; } //Result must be even\n            } else { //base < 0 && negative\n                if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n            }\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Left and right are readonly */\n    less: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    lessOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    more: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    moreOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    notEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        return left[1] !== right[1] || left[0] !== right[0];\n    },\n    trunc: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.trunc(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        return left;\n    },\n    floor: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? -1 : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.floor(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === -10) {\n            left[0] = -1;\n            left[1]++;\n        }\n        return left;\n    },\n    ceil: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? 0 : 1, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.ceil(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n        return left;\n    },\n    round: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.round(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n        return left;\n    },\n    /* Left is readonly */\n    format: (left: [number, number] | Overlimit, settings: { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string => {\n        const [base, power] = left;\n        if (!isFinite(base)) { return `${base}`; }\n        const type = settings.type ?? 'number';\n        let padding = settings.padding;\n\n        if (power >= 1e4 || power <= -1e4) { //e1.23e123 (-e-1.23e123)\n            if (padding === 'exponent') { padding = true; }\n            let exponent = power;\n            let inputBase = base;\n            if (Math.abs(Math.round(inputBase)) === 10) { //Probably not required, but just in case\n                inputBase /= 10;\n                exponent++;\n                if (exponent < 0 && exponent > -1e4) { return technical.format([inputBase, exponent], settings); }\n            }\n\n            exponent = Math.floor(Math.log10(Math.abs(exponent)));\n            let digits = 2 - Math.floor(Math.log10(exponent));\n            let mantissa = Math.round(power / 10 ** (exponent - digits)) / 10 ** digits;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (padding) { digits = 2 - Math.floor(Math.log10(exponent)); }\n            }\n\n            if (type !== 'input') { mantissa = Math.abs(mantissa); }\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${inputBase}e${formated}e${exponent}` :\n                `${base < 0 ? '-' : ''}${formated.replace('.', globalSave.format[0])}e${power < 0 ? '-' : ''}e${exponent}`; //1.23ee123 (-1.23e-e123)\n        }\n\n        if (power >= 6 || power < -4) { //1.23e123 (-1.23e-123)\n            if (padding === 'exponent') { padding = true; }\n\n            let digits = 3 - Math.floor(Math.log10(Math.abs(power)));\n            let mantissa = Math.round(base * 10 ** digits) / 10 ** digits;\n            let exponent = power;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (exponent === -4 || exponent === 1e4) { return technical.format([mantissa, exponent], settings); }\n                if (padding) { digits = 3 - Math.floor(Math.log10(Math.abs(exponent))); }\n            }\n\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${formated}e${exponent}` : `${formated.replace('.', globalSave.format[0])}e${exponent}`;\n        }\n\n        //12345 (-12345)\n        let digits = power < 1 ? 5 : (5 - power);\n        const mantissa = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n\n        const powerCheck = Math.floor(Math.log10(Math.abs(mantissa))); //To remove rare bugs\n        if (powerCheck === 6) { return technical.format([base < 0 ? -1 : 1, powerCheck], settings); }\n        if (padding === 'exponent') {\n            padding = false;\n        } else if (padding && powerCheck !== power) { digits = powerCheck < 1 ? 5 : (5 - powerCheck); }\n\n        let formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n        if (type === 'input') { return formated; }\n        let ending = ''; //Being lazy\n        const index = formated.indexOf('.');\n        if (index !== -1) { //For some reason this replaces dot 2 times faster (?), also fixes spaces after dot (not required)\n            ending = `${globalSave.format[0]}${formated.slice(index + 1)}`;\n            formated = formated.slice(0, index);\n        }\n        return `${mantissa >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]) : formated}${ending}`;\n    }\n};\n\nexport const { compareFunc } = Overlimit;\n", "import Overlimit from './Limit';\nimport { getId, loadoutsRecreate, updateCollapsePointsText } from './Main';\nimport { calculateMaxLevel, assignMilestoneInformation, toggleConfirm, toggleSwap, calculateEffects, autoUpgradesSet, autoResearchesSet, autoElementsSet, toggleSupervoid, assignBuildingsProduction, assignResetInformation, loadoutsLoadAuto } from './Stage';\nimport type { globalType, playerType } from './Types';\nimport { format, switchTab, visualTrueStageUnlocks } from './Update';\nimport { prepareVacuum } from './Vacuum';\n\nexport const player: playerType = {\n    version: 'v0.2.5b',\n    fileName: 'Fundamental, [dateD.M.Y] [timeH-M-S], [stage]',\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        time: 0,\n        peak: 0,\n        peakedAt: 0,\n        input: [0, 0]\n    },\n    discharge: {\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: {\n        clouds: new Overlimit('0'),\n        cloudsMax: new Overlimit('0'),\n        input: [3, 0]\n    },\n    accretion: {\n        rank: 0\n    },\n    collapse: {\n        mass: 0.01235,\n        massMax: 0.01235,\n        stars: [0, 0, 0],\n        show: 0,\n        maxElement: 0,\n        input: [2, 1e6],\n        points: []\n    },\n    merge: {\n        rewards: [0, 0, 0, 0],\n        resets: 0,\n        input: [0, 0],\n        since: 0\n    },\n    inflation: {\n        loadouts: {},\n        vacuum: false,\n        resets: 0,\n        time: 0,\n        age: 0\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        export: [0, 0, 0],\n        offline: 0,\n        online: 0,\n        stage: 0,\n        vacuum: 0,\n        universe: 0\n    },\n    buildings: [\n        [] as unknown as playerType['buildings'][0], [ //Stage 1\n            {\n                current: new Overlimit('3'),\n                total: new Overlimit('3'),\n                trueTotal: new Overlimit('3')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 2\n            {\n                current: new Overlimit('2.7753108348135e-3'),\n                total: new Overlimit('2.7753108348135e-3'),\n                trueTotal: new Overlimit('2.7753108348135e-3')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 3\n            {\n                current: new Overlimit('1e-19'),\n                total: new Overlimit('1e-19'),\n                trueTotal: new Overlimit('1e-19')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 4\n            {\n                current: new Overlimit('1'),\n                total: new Overlimit('1'),\n                trueTotal: new Overlimit('1')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 5\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ], [ //Stage 6\n            {\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }, {\n                true: 0,\n                current: new Overlimit('0'),\n                total: new Overlimit('0'),\n                trueTotal: new Overlimit('0')\n            }\n        ]\n    ],\n    strange: [\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    cosmon: [{\n        current: 0,\n        total: 0\n    }, {\n        current: 0,\n        total: 0\n    }],\n    /* Because I'm lazy to write 50+ 0's, all empty [] auto added */\n    upgrades: [],\n    researches: [],\n    researchesExtra: [],\n    researchesAuto: [],\n    ASR: [],\n    elements: [],\n    strangeness: [],\n    milestones: [],\n    tree: [],\n    challenges: {\n        active: null,\n        super: false,\n        void: [0, 0, 0, 0, 0, 0],\n        voidCheck: [0, 0, 0, 0, 0, 0],\n        supervoid: [0, 0, 0, 0, 0, 0],\n        supervoidMax: [0, 0, 0, 0, 0, 0]\n    },\n    toggles: {\n        normal: [], //class 'toggleNormal'\n        confirm: [], //Class 'toggleConfirm'\n        buildings: [], //Class 'toggleBuilding'\n        hover: [], //Class 'toggleHover'\n        max: [], //Class 'toggleMax'\n        auto: [], //Class 'toggleAuto'\n        shop: {\n            input: 0,\n            wait: [2]\n        }\n    },\n    history: {\n        stage: {\n            best: [3.1556952e16, 0, 0],\n            list: [],\n            input: [20, 100]\n        },\n        vacuum: {\n            best: [3.1556952e16, false, 0],\n            list: [],\n            input: [20, 100]\n        }\n    },\n    event: false,\n    clone: {}\n};\n\nexport const global: globalType = {\n    tab: 'stage',\n    subtab: {\n        stageCurrent: 'Structures',\n        settingsCurrent: 'Settings',\n        upgradeCurrent: 'Upgrades',\n        strangenessCurrent: 'Matter',\n        inflationCurrent: 'Researches'\n    } as globalType['subtab'],\n    tabList: { //Order comes from footer\n        tabs: ['stage', 'upgrade', 'strangeness', 'inflation', 'settings'],\n        stageSubtabs: ['Structures', 'Advanced'],\n        settingsSubtabs: ['Settings', 'History', 'Stats'],\n        upgradeSubtabs: ['Upgrades', 'Elements'],\n        strangenessSubtabs: ['Matter', 'Milestones'],\n        inflationSubtabs: ['Researches', 'Milestones']\n    } as globalType['tabList'],\n    debug: {\n        timeLimit: false,\n        rankUpdated: null,\n        historyStage: null,\n        historyVacuum: null\n    } as globalType['debug'],\n    offline: {\n        active: true,\n        speed: 0.2,\n        cacheUpdate: true,\n        stageUpdate: null\n    },\n    paused: false,\n    trueActive: 1,\n    lastSave: 0,\n    log: {\n        add: [],\n        lastHTML: ['Start of the log', 1, 0, true]\n    },\n    hotkeys: {\n        disabled: true,\n        tab: false,\n        shift: false,\n        ctrl: false\n    },\n    lastUpgrade: [[null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades'], [null, 'upgrades']],\n    lastElement: null,\n    lastStrangeness: [null, 0],\n    lastInflation: [null, 0],\n    lastMilestone: [null, 0],\n    lastChallenge: [1, 1],\n    sessionToggles: [false, false],\n    automatization: {\n        autoU: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoR: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        autoE: [\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ],\n        elements: []\n    },\n    dischargeInfo: {\n        energyType: [[]],\n        energyStage: [0],\n        energyTrue: 0,\n        next: 1,\n        total: 0,\n        base: 1\n    },\n    vaporizationInfo: {\n        S2Research0: 0,\n        S2Research1: 0,\n        S2Extra1: 0,\n        get: new Overlimit('0')\n    },\n    accretionInfo: {\n        unlockA: [2, 4, 8, 11],\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 7],\n        rankR: [1, 1, 2, 2, 3, 3, 3, 4, 5],\n        rankE: [2, 3, 4, 5, 3, 6],\n        rankCost: [5.9722e27, 1e-7, 1e10, 1e24, 5e29, 2.45576045e31, 1.98847e40],\n        rankColor: ['blue', 'cyan', 'gray', 'gray', 'gray', 'darkviolet', 'orange', 'gray'],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar', 'Protogalaxy'],\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png', 'Protogalaxy.png'],\n        maxRank: 4,\n        effective: 1,\n        disableAuto: false,\n        dustSoft: 1\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000],\n        unlockU: [0.01235, 0.076, 1.3, 10, 40],\n        unlockR: [0.18, 0.3, 0.8, 1.3, 40, 1000],\n        newMass: 0,\n        starCheck: [0, 0, 0],\n        trueStars: 0,\n        pointsLoop: 0, //Micro optimization\n        solarCap: 0.01235,\n        timeUntil: Infinity\n    },\n    mergeInfo: {\n        unlockU: [0, 0, 0, 0, 1, 1, 3],\n        unlockR: [0, 0, 3, 3, 6],\n        unlockE: [0, 2, 4, 4, 6],\n        S5Extra2: 0,\n        checkReward: [0, 0, 0, 0],\n        galaxies: 0\n    },\n    inflationInfo: {\n        globalSpeed: 1,\n        totalSuper: 0\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined,\n        mouseRepeat: undefined\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Abyss'],\n        textColor: ['', 'cyan', 'blue', 'gray', 'orange', 'darkorchid', 'darkviolet'],\n        buttonBorder: ['', 'darkcyan', '#386cc7', '#424242', '#a35700', '#8f004c', '#6c1ad1'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        costName: ['', 'Energy', 'Drops', 'Mass', 'Stardust', 'Stardust', 'Dark matter'],\n        activeAll: [1]\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4, 2],\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Stardust', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi-stars'],\n            ['Stars', 'Nebulas', 'Star clusters', 'Galaxies'],\n            ['Dark matter', 'Universes']\n        ],\n        hoverText: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms'],\n            ['Tritium', 'Drops', 'Puddles', 'Puddles', 'Puddles', 'Puddles'],\n            ['Preons hardcap', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites'],\n            ['Stardust', 'Stardust', 'Stardust', 'Stardust', 'Stardust'],\n            ['Interstellar Stars', 'Interstellar Stars', 'Nebulas and Star clusters'],\n            ['Dark matter']\n        ],\n        type: [\n            [],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'producing', 'improving', 'improving', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'improving', 'improving'],\n            ['producing']\n        ],\n        startCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 2.7753108348135e-3, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e15, 1e27, 1e50],\n            [0, 1e50, 1e54, 1e5],\n            [0, 120]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.15, 1.2, 1.25, 1.35, 1.4, 4],\n            [0, 1.15, 1.25, 1.35, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 2, 2, 1.11],\n            [0, 1.5]\n        ],\n        producing: []\n    },\n    strangeInfo: {\n        name: ['Strange quarks', 'Strangelets'],\n        stageBoost: [1, 1, 1, 1, 1, 1],\n        strangeletsInfo: [0, 1],\n        quarksGain: 0\n    },\n    upgradesInfo: [\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Electrons',\n                'Protons',\n                'Neutrons',\n                'Superposition',\n                'Protium',\n                'Deuterium',\n                'Tritium',\n                'Nuclear fusion',\n                'Nuclear fission'\n            ],\n            effectText: [\n                () => 'Particles will produce 8 times more Quarks.',\n                () => 'Gluons will be able to bind Quarks into Particles, which will make Particles 16 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particles'} will be 8 times cheaper.`,\n                () => `Atoms will produce ${player.inflation.vacuum ? 6 : 4} times more Particles.`,\n                () => 'Molecules will produce 4 times more Atoms.',\n                () => `Ability to regain spent Energy and if had enough Energy, it will also boost production of all ${player.inflation.vacuum ? 'Microworld ' : ''}Structures by ${format(global.dischargeInfo.base, { padding: true })}.${player.inflation.vacuum ? `\\n(In true Vacuum it will also reset resources and all non-self-made Structures from all Stages${player.stage.true >= 7 ? ' before Abyss' : ''}, and enough self-made Structures to fully regain spent Energy)` : ''}`,\n                () => `Decrease Structures cost scaling by -${format(calculateEffects.S1Upgrade6() / 100)}.`,\n                () => `Make self-made Structures boost themselves by ${format(calculateEffects.S1Upgrade7())}.${player.inflation.vacuum ? `\\n(Self-made Preons boost themselves by ${format(calculateEffects.S1Upgrade7(true), { padding: true })} instead, softcaps instantly and gets completely disabled after ${format(1001)} Preons)` : ''}`,\n                () => `Molecules will produce Molecules, at a reduced rate.\\n(${format(new Overlimit(effectsCache.tritium).multiply(global.inflationInfo.globalSpeed), { padding: true })} Molecules per second)`,\n                () => `Unspent Energy ${player.upgrades[1][10] === 1 ? '' : `^${format(0.5)}`} will boost 'Tritium' production of Molecules.\\n(Boost: ${format(calculateEffects.S1Upgrade9(), { padding: true })})`,\n                () => \"Unlock the full strength of 'Nuclear fusion' and increase effective Energy by 2.\"\n            ],\n            startCost: [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000, 2.4e6],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Water spread',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} ${format(player.inflation.vacuum ? 1.02 : 1.04)} times ${player.inflation.vacuum ? 'more' : 'faster'} for every self-made Drop.`,\n                () => `Spread water faster with every Puddle, current formula is ${format(1.02)} ^ effective Puddles.\\nPuddles after 200 and non-self-made ones are raised to the power of ${format(0.7)}.\\n(Total effect: ${format(calculateEffects.S2Upgrade1(), { padding: true })})`,\n                () => { //[2]\n                    const softcap = format(calculateEffects.cloudsGain());\n                    return `Gain ability to convert Drops into Clouds. Cloud gain formula: (Clouds ^ (1 / ${softcap}) + (Drops / ${format(calculateEffects.S2Upgrade2())})) ^ ${softcap} - Clouds.`;\n                },\n                () => `Puddles will get a boost based on Moles ^${format(calculateEffects.S2Upgrade3_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade3(), { padding: true })})`,\n                () => `Puddles will get a boost based on Drops ^${format(calculateEffects.S2Upgrade4_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade4(), { padding: true })})`,\n                () => `Ponds will increase current Puddle amount. (${1 + player.researches[2][4]} extra Puddles per Pond)`,\n                () => `Lakes will increase current Pond amount. (${1 + player.researches[2][5]} extra Ponds per Lake)`,\n                () => 'Spreads enough water to make Seas increase current Lake amount. (1 extra Lakes per Sea)',\n                () => 'Spreads water too fast. 1 extra Seas per Ocean.\\nIt will also improve Oceans effect scaling.'\n            ],\n            startCost: [10, 1e6, 1e10, 1e3, 1e4, 2e9, 5e20, 1e28, 2e48],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Satellite system',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system',\n                'Self-gravity'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Cosmic dust will ${player.inflation.vacuum ? 'delay Preons hardcap even more' : 'produce even more Mass'}.\\n(By ${format(calculateEffects.S3Upgrade0())} per self-made Cosmic dust)`,\n                () => `A new substance for the Accretion, it will provide boost to Cosmic dust based on its quantity.\\n(Formula: ((self-made + 1) * current) ^${format(calculateEffects.S3Upgrade1_power())} | Boost: ${format(calculateEffects.S3Upgrade1(), { padding: true })})`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come.\\n(Unlock a new Structure and get 2x boost to Cosmic dust)',\n                () => `Small bodies will spontaneously concentrate into clumps.\\n(Self-made Planetesimals will boost each other by ${format(calculateEffects.S3Upgrade3())})`,\n                () => 'Bodies will become massive enough to affect each other with their own gravity.\\n(Unlock a new Structure and get 3x boost to Planetesimals)',\n                () => `Shattered pieces will fall back together. ${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => `Melt the core to increase Accretion speed.\\n(Cosmic dust strength will be increased by ${format(2 * 1.5 ** player.researches[3][7])})`,\n                () => `After reaching equilibrium, self-made Protoplanets will boost each other by ${format(1.02)}.`,\n                () => 'Unlock yet another Structure.',\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased again (because of drag and escape velocity), by 2.`,\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be greatly increased by ${8 * 2 ** player.researches[3][8]}.`,\n                () => `Satellites cost scaling will be 2 times smaller.${player.inflation.vacuum ? '\\nAlso unlock a new Structure.' : ''}`,\n                () => 'Satellites effect will scale better.',\n                () => `Allow for Star clusters to be boosted by ('Gravity' / ${format(2e5)}) ^${format(0.5)} + 1.\\n(Boost is equal to ${format((calculateEffects.S3Research6() / 2e5) ** 0.5 + 1, { padding: true })})`\n            ],\n            startCost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e10, 1e22, 1e22, 1e23, 1e9, 1e26, 1e29, 1e86],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational Collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion',\n                'Nucleosynthesis'\n            ],\n            effectText: [\n                () => `As fuel runs out, every Star will boost production in its own special way.\\nSolar mass ${player.inflation.vacuum ? `on Collapse is Accretion Mass / ${format(1.98847e33)} and ` : ''}will not decrease if to reset below current. (Hover over Remnants effects to see what they boost)`,\n                () => \"Fuse with Protium instead of Deuterium. Unlock 5 first Elements. ('Elements' subtab)\",\n                () => 'Unlock the CNO cycle, which is a better source of Helium and Energy. Unlock 5 more Elements.',\n                () => 'Through Triple-alpha and then Alpha process unlock 2 more Elements.',\n                () => `Create new Atomic nuclei with Neutron capture (s-process and p-process).\\nUnlock ${player.buildings[6][1].true + 1} more Element${player.stage.true >= 7 ? 's (+1 for every self-made Universe)' : ''}.`\n            ],\n            startCost: [100, 1000, 1e9, 1e48, 1e128],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Molecular cloud',\n                'Super Star cluster',\n                'Quasar',\n                'Galactic Merger',\n                'Starburst region',\n                'Globular cluster',\n                'Starburst Galaxy'\n            ],\n            effectText: [\n                () => `Nebula that is dense enough to block the light, it will boost Nebulas by ${format(calculateEffects.S5Upgrade0())}.`,\n                () => `A very massive Star cluster that will boost Star clusters by ${format(calculateEffects.S5Upgrade1())}.`,\n                () => `Boost per Galaxy will be increased by +${format(calculateEffects.S5Upgrade2(false, 1), { padding: true })}.\\n(Effect will be stronger with more Solar mass past ${format(1e5)})`,\n                () => `Unlock a new reset type that will bring Galaxies closer for potential Merging.${player.inflation.vacuum ? ' That reset behaves like a Galaxy reset, while also converting self-made Galaxies into bonus ones. Can only be done a limited amount of times per Stage reset.' : ''}`,\n                () => `Region of space that is undergoing a larger amount of Star formations, it will boost Nebulas by ${format(1000 * 10 ** player.researches[5][4])}.`,\n                () => `A spheroidal conglomeration of Stars that is even more dense than Super Star cluster, it will boost Star clusters by ${format(1000 * 10 ** player.researches[5][4])}.`,\n                () => `An entire Galaxy that is undergoing higher rate of Star formations, it will boost Galaxies by ${format(100 * 10 ** player.researches[5][4])}.`\n            ],\n            startCost: [1e56, 1e60, 1e120, 1e160, 1e200, 1e210, 1e290] as unknown as Overlimit[],\n            maxActive: 4\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            startCost: [],\n            maxActive: 0\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling will be -${format(0.03)} smaller with every level.`,\n                () => `Self-made Structures will boost each other by an additional +${format(0.01)}.`,\n                () => `Molecules will produce themselves ${format(calculateEffects.S1Research2())} times quicker.`,\n                () => `Discharge goals requirement will scale slower. (-2)\\n(Creating this Research will make the next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(player.researches[1][3] + 1)))} Energy)`,\n                () => { //[4]\n                    const newBase = calculateEffects.dischargeBase(player.researches[1][4] + 1);\n                    return `Discharge production boost from reached goals will be increased by +${format(newBase - global.dischargeInfo.base)}.\\n(This is equal to ${format((newBase / global.dischargeInfo.base) ** global.dischargeInfo.total, { padding: true })}x boost improvement)`;\n                },\n                () => `Discharge goals will be able to boost 'Tritium'.\\n(Current effect: ${format(calculateEffects.S1Research5())} ^ level)`\n            ],\n            cost: [],\n            startCost: [1600, 4800, 16000, 32000, 16000, 24000],\n            scaling: [400, 1200, 8000, 40000, 16000, 16000],\n            max: [5, 4, 8, 2, 4, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Better Drop production',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} 3 times more.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research0 !== player.researches[2][0] ? `is ${format(global.vaporizationInfo.S2Research0, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}`,\n                () => `Puddles will produce 2 times more Drops.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research1 !== player.researches[2][1] ? `is ${format(global.vaporizationInfo.S2Research1, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}`,\n                () => { //[2]\n                    const power = calculateEffects.S2Upgrade3_power(player.researches[2][2] + 1) - calculateEffects.S2Upgrade3_power();\n                    return `'Surface tension' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade3(power), { padding: true })}x boost improvement)`;\n                },\n                () => { //[3]\n                    const power = calculateEffects.S2Upgrade4_power(player.researches[2][3] + 1) - calculateEffects.S2Upgrade4_power();\n                    return `'Surface stress' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade4(power), { padding: true })}x boost improvement)`;\n                },\n                () => 'With more streams, will be able to have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers will be able to split, which will allow even more Ponds per Lake. (+1 per)'\n            ],\n            cost: [],\n            startCost: [10, 400, 1e4, 1e5, 1e14, 1e22],\n            scaling: [1.366, 5, 1e3, 1e2, 1e3, 1e4],\n            max: [8, 8, 4, 4, 2, 1],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Destructive collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Increase strength of Cosmic dust by 3.',\n                () => `Cosmic dust particles will cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals will produce more Cosmic dust. (3 times more)',\n                () => `Slow encounter velocities will result in a more efficient growth.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 2.`,\n                () => `When shattered, Planetesimals will replenish small grains quantity.\\n'Streaming instability' effect will be increased by +${format(0.005)}.`,\n                () => `Instead of shattering, some Planetesimals will form a contact binary or even trinary.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => { //[6]\n                    const effect = calculateEffects.S3Research6();\n                    return `Planetesimals will attract other bodies and get a boost to their own production based on unspent Mass ^${format(effect > 1 ? logAny(effect, player.buildings[3][0].current.toNumber()) : 0, { padding: true })}.\\n(Boost: ${format(effect, { padding: true })} \u27F6 ${format(calculateEffects.S3Research6(player.researches[3][6] + 1), { padding: true })}, weaker after ${format(1e21)} Mass)`;\n                },\n                () => `'Magma Ocean' will become stronger, by ${format(1.5)}.`,\n                () => `Improve 'Pebble accretion' Accretion speed even more.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will increased by 2.`\n            ],\n            cost: [],\n            startCost: [1e-16, 1e-15, 1e-5, 1e2, 1e10, 1e11, 1e15, 1e14, 1e12],\n            scaling: [11, 111, 22, 10, 100, 100, 10, 1e4, 1e3],\n            max: [9, 3, 8, 8, 2, 2, 6, 4, 4],\n            maxActive: 9\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula',\n                'Gamma-ray burst',\n                'Inner Black hole'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(calculateEffects.S4Research0_base())}x boost to all Stars with every level.\\n(Total boost: ${format(calculateEffects.S4Research0(), { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S4Research1();\n                    return `All self-made Stars will boost each other by ${format(base, { padding: true })}.\\n(Total boost: ${format(new Overlimit(base).power(global.collapseInfo.trueStars), { padding: true })} \u27F6 ${format(new Overlimit(calculateEffects.S4Research1(player.researches[4][1] + 1)).power(global.collapseInfo.trueStars), { padding: true })})`;\n                },\n                () => `Improve effect scaling of 'Planetary system', as well increase its max level by +3.\\n(Total boost from 'Planetary system' will be increased by ${format(calculateEffects.S4Research0(calculateEffects.S4Research0_base(player.researches[4][2] + 1) / calculateEffects.S4Research0_base()), { padding: true })})`,\n                () => \"Matter will be expelled from Red giants, this will boost Main-sequence Stars by 2, and also increase 'Planetary system' max level by +3.\",\n                () => `An immensely energetic explosion that will boost all Stars by ${format(calculateEffects.S4Research4(), { padding: true })}${player.researches[4][4] < 2 ? ` \u27F6 ${format(calculateEffects.S4Research4(false, player.researches[4][4] + 1), { padding: true })}` : ''}.\\n(Effect will be stronger with more Black holes${player.elements[23] >= 1 ? ' and Solar mass' : ''})`,\n                () => 'Quasi-stars will Collapse into Intermediate-mass Black holes that are equivalent to +1 (Stellar) Black holes per level.'\n            ],\n            cost: [],\n            startCost: [1e3, 5e4, 1e8, 1e11, 1e28, 1e154],\n            scaling: [10, 200, 1e12, 1, 2e8, '1e346'],\n            max: [3, 2, 1, 1, 2, 1],\n            maxActive: 5\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency',\n                'Jeans instability',\n                'Gravitational binding Energy',\n                'Star formation'\n            ],\n            effectText: [\n                () => `Higher density of Nebulas will allow them to produce Stars of higher tier, but each tier is 4 times slower than the previous one. It will also boost Nebulas by 2.\\nNext tier will be ${global.buildingsInfo.name[4][Math.min(player.researches[5][0] + 2, player.inflation.vacuum ? 5 : 4)]}.`,\n                () => `More of the same Star type will be found within Star cluster. Star clusters and their minimum strength will be improved by 2. It will also boost Stars of lower tier, but 2 times less than the previous one.\\nNext tier will be ${global.buildingsInfo.name[4][Math.max((player.inflation.vacuum ? 4 : 3) - player.researches[5][1], 1)]}.`,\n                () => `Weaken internal gas pressure within Nebulas to cause even more gravitational Collapses.\\nThis will make every self-made Nebula boost each other by ${format(calculateEffects.S5Research2(), { padding: true })}. (+${format(0.00625)} per level)`,\n                () => `Increase the Energy required for Star clusters to cease being in a gravitationally bound state.\\nThis will make every self-made Star cluster boost each other by ${format(calculateEffects.S5Research3(), { padding: true })}. (+${format(0.00625)} per level)`,\n                () => \"Produce even more stars and increase strength of 'Starburst region', 'Globular cluster' and 'Starburst Galaxy' effects by 10 per level.\"\n            ],\n            cost: [],\n            startCost: [1e54, 1e58, 1e270, 1e280, '1e550'] as unknown as Overlimit[],\n            scaling: [1e8, 1e8, 1e30, 1e30, 1e30],\n            max: [4, 4, 2, 2, 6],\n            maxActive: 2\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Improved formula',\n                'Accretion',\n                'Later Preons',\n                'Impulse',\n                'Radioactive decay'\n            ],\n            effectText: [\n                () => \"Mesons will be able to bind Particles to form Atoms, which will make Atoms to be affected by 'Strong force'.\\n(Atoms will be 16 times cheaper)\",\n                () => { //[1]\n                    const now = calculateEffects.S1Extra1();\n                    const after = calculateEffects.S1Extra1(player.researchesExtra[1][1] + 1);\n                    return `Improve 'Tritium' formula, current formula is log${format(now)}${player.researchesExtra[1][1] < 4 ? ` \u27F6 log${format(after)}.\\n(Which is equal to ${format(logAny(now, after), { padding: true })}x improvement)` : '.'}`;\n                },\n                () => `First level is to begin the Accretion, second level is to Submerge it.\\nAll Structures produce Energy on creation and all resets affect all lower Stages, while also doing Discharge reset.\\nAccretion Mass is Microworld Mass * ${format(1.78266192e-33)} and Moles are Molecules / ${format(6.02214076e23)}.`,\n                () => { //[3]\n                    const power = calculateEffects.S1Extra3();\n                    const energy = calculateEffects.effectiveEnergy();\n                    return `Boost Preons and delay hardcap by current Energy ^${format(power)}.\\n(Effect: ${format(energy ** power, { padding: true })} \u27F6 ${format(energy ** calculateEffects.S1Extra3(player.researchesExtra[1][3] + 1), { padding: true })})`;\n                },\n                () => { //[4]\n                    const base = calculateEffects.S1Extra4();\n                    return `Discharge goals will be able to boost all Interstellar Stars. Their strength is based on Energy and Discharge base.\\nCurrent base is ${format(base, { padding: true })}, total boost is ${format(base ** global.dischargeInfo.total, { padding: true })}.`;\n                },\n                () => `Improve 'Impulse' base strength even more.\\n(This will increase total boost by ${format((calculateEffects.S1Extra4(player.researchesExtra[1][5] + 1) / calculateEffects.S1Extra4()) ** global.dischargeInfo.total, { padding: true })})`\n            ],\n            cost: [],\n            startCost: [2000, 40000, 12000, 16000, 160000, 1.6e6],\n            scaling: [0, 16000, 68000, 16000, 0, 1.6e6],\n            max: [1, 4, 2, 4, 1, 2],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Water Accretion',\n                'Jeans Mass'\n            ],\n            effectText: [\n                () => 'When formed, Clouds will use Drops produced this reset instead of current ones.',\n                () => { //[1]\n                    const maxLevel = player.researchesExtra[2][1];\n                    const trueLevel = global.vaporizationInfo.S2Extra1;\n                    const penalty = player.buildings[2][2].true < 1;\n                    const effect = calculateEffects.S2Extra1;\n                    return `Some Clouds will start pouring Drops themselves. This will boost Puddles, even if there are none, based on current Clouds.\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Drops, this doesn't` : \"will be set to 0 after any reset, this won't\"} affect pre-Puddles boost.\\n(Effect: ${format(penalty ? (effect(maxLevel) - 1) * global.inflationInfo.globalSpeed : effect(trueLevel), { padding: true })} \u27F6 ${format(penalty ? (effect(maxLevel + 1) - 1) * global.inflationInfo.globalSpeed : effect(maxLevel + (trueLevel === maxLevel ? 1 : 0)), { padding: true })}, weaker after ${format(1e6)} Clouds)`;\n                },\n                () => `Make 'Rain Clouds' boost Seas and their own pre-Puddles effect, at a reduced rate.\\n(Effect: ${format(calculateEffects.S2Extra2(calculateEffects.S2Extra1(player.buildings[2][2].true < 1 ? player.researchesExtra[2][1] : global.vaporizationInfo.S2Extra1), 1), { padding: true })})`,\n                () => { //[3]\n                    const level = player.researchesExtra[2][3];\n                    return `Submerge and boost Stars with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Stars: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                },\n                () => { //[4]\n                    const level = player.researchesExtra[2][4];\n                    return `High density of Drops will end up boosting Nebulas with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Nebulas: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                }\n            ],\n            cost: [],\n            startCost: [1e18, 1e12, 1e26, 1e14, 1e60],\n            scaling: [1, 1e3, 1, 1e8, 1e8],\n            max: [1, 3, 1, 3, 3],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion',\n                'Ablative armor'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by another ${format(1.11)} per level. Max level is based on current Rank.\\n(Total increase: ${format(1.11 ** player.researchesExtra[3][0], { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S3Extra1();\n                    return `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be even bigger, current formula is ${format(base)} ^ current Rank.\\n(Total boost: ${format(base ** global.accretionInfo.effective, { padding: true })} \u27F6 ${format(calculateEffects.S3Extra1(player.researchesExtra[3][1] + 1) ** global.accretionInfo.effective, { padding: true })})`;\n                },\n                () => \"'Gravitational field' will be able to boost Protoplanets, but at reduced strength. (2x boost)\",\n                () => `'Gas' will be ${format(calculateEffects.S3Upgrade1(calculateEffects.S3Upgrade1_power(player.researchesExtra[3][3] + 1)) / calculateEffects.S3Upgrade1(), { padding: true })} times stronger with every level.`,\n                () => `Submerge quicker by boosting Puddles, improved by current Rank.\\n(Current boost: ${format(calculateEffects.S3Extra4())} \u27F6 ${format(calculateEffects.S3Extra4(player.researchesExtra[3][4] + 1))})`,\n                () => `Protect your Mass from being removed by removing Cosmic dust hardcap instead.\\nSecond level will redirect delay to the hardcap as a boost to Cosmic dust that ignores softcap.\\n(Current hardcap delay is ${format(calculateEffects.dustDelay(), { padding: true })})`\n            ],\n            cost: [],\n            startCost: [1e-18, 1e-7, 1e26, 1e9, 1e-10, 1.98847e40],\n            scaling: [10, 100, 1, 1e5, 1e12, 5.024e59],\n            max: [14, 6, 1, 5, 1, 2],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'Mass transfer',\n                'White dwarfs',\n                'Quark-nova'\n            ],\n            effectText: [\n                () => `This violent stellar explosion is the main source of Elements, but also starts the formation of new Stars.\\nUnlock a new Star type and even more, after Collapse of that Star type.\\n(Will require at least ${format(global.collapseInfo.unlockB[Math.min(player.researchesExtra[4][0] + 2, 4)])} Solar mass to create that new Star type)`,\n                () => `Star material will transfer from one Star to another, improving Solar mass gain${player.inflation.vacuum ? ' (also delaying Preons hardcap)' : ''} by ${format(calculateEffects.S4Extra1())} in the process.\\nImproved by 'Star system' levels, but also improves their scaling (effect increase for 'Star system' is ${format(new Overlimit(calculateEffects.S4Research1(undefined, 1) / calculateEffects.S4Research1(undefined, 0)).power(global.collapseInfo.trueStars), { padding: true })}).`,\n                () => `After matter were dispeled from Red giant, White dwarf was all that remained.\\nImprove effect of '[6] Carbon' by +${format(0.5)} and increase max level of 'Star system' by +1.`,\n                () => \"As Neutron stars spin down, some of them may get converted into Quark stars.\\nThis will add a new effect to Neutron stars \u2012 all Stars are cheaper, and will also increase max level of 'Star system' by +1.\"\n            ],\n            cost: [],\n            startCost: [4e4, 2e9, 1e50, 1e136],\n            scaling: [1e10, 1, 1, 1],\n            max: [3, 1, 1, 1],\n            maxActive: 3\n        }, { //Stage 5\n            name: [\n                'Hypercompact stellar system',\n                'Interacting Galaxies',\n                'Central dominant Galaxy',\n                'More Merges',\n                'Compact Group'\n            ],\n            effectText: [\n                () => `Super dense core which will allow creation of a new Structure. That Structure will increase Stage reset reward${player.inflation.vacuum ? ', starting Energy after any Reset' : ''}, boost Nebulas and Star clusters. But creating it will fully reset ${player.inflation.vacuum ? 'all' : 'Interstellar and Intergalactic'} Stages.\\nThis Research ${player.strangeness[5][3] < 1 ? \"can't be created because 'Gravitational bound' is missing\" : 'also removes Solar mass and other Remnant requirements from everything in the Interstellar Stage'}.`,\n                () => `Unlock a new Result for Merge resets, if to reset with enough self-made Galaxies.${global.researchesExtraInfo[5].max[1] > 1 ? '\\nSecond level will allow the use of excess Galaxies from previous Merge resets when forming new Galaxy groups.' : ''}`,\n                () => { //[2]\n                    const maxLevel = player.researchesExtra[5][2];\n                    const trueLevel = global.mergeInfo.S5Extra2;\n                    return `An even bigger Galaxy to improve Stage reset reward and Galaxy groups effect with every Galaxy group.\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Stardust, this doesn't` : \"will be set to 0 after any reset, this won't\"} affect Stage reset reward.\\n(Total boost: ${format(calculateEffects.S5Extra2(trueLevel), { padding: true })} \u27F6 ${format(calculateEffects.S5Extra2(maxLevel + (maxLevel === trueLevel ? 1 : 0)), { padding: true })})`;\n                },\n                () => 'Increase max allowed Merge reset by +1 per level.',\n                () => `Decrease amount of Galaxies required for the creation of a Galaxy Group.\\n(Effect: ${calculateEffects.S5Extra4()} \u27F6 ${calculateEffects.S5Extra4(player.researchesExtra[5][4] + 1)}, effect increase per level decreases by current level)`\n            ],\n            cost: [],\n            startCost: [1e80, 1e260, '1e320', '1e350', '1e560'] as unknown as Overlimit,\n            scaling: [1, 1e150, 1e30, 1e210, 1e90],\n            max: [1, 1, 2, 1, 1],\n            maxActive: 1\n        }, { //Stage 6\n            name: [],\n            effectText: [],\n            cost: [],\n            startCost: [],\n            scaling: [],\n            max: [],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        name: [\n            'Upgrade automatization',\n            'Element automatization',\n            'Reset automatization'\n        ],\n        effectText: [\n            () => `Automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.researchesAuto[0], 2)]} from any Stage.`,\n            () => 'Elements will no longer require Collapse for activation.\\nSecond level will unlock auto creation of Elements.',\n            () => { //[2]\n                const index = player.researchesAuto[2] >= 4 ? 4 : Math.min(player.inflation.vacuum ? player.researchesAuto[2] : player.stage.current - 1, 3);\n                return `Unlock auto ${['Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge'][player.inflation.vacuum ? (index === 1 ? 2 : index === 2 ? 1 : index) : index]} level 1.${player.inflation.vacuum ? '\\nCost will decrease by -1 level per related level 1 Strangeness.' : ''}`;\n            }\n        ],\n        costRange: [\n            [1e13, 2e34, 1e30],\n            [136000, 272000],\n            [1200, 2400, 4800, 8400, 13200]\n        ],\n        autoStage: [\n            [2, 3, 4],\n            [1, 1],\n            [6, 6, 6, 6, 6]\n        ],\n        max: [3, 2, 1]\n    },\n    ASRInfo: {\n        name: 'Auto Structures',\n        effectText: () => {\n            const stageIndex = player.stage.active;\n            const index = Math.min(player.ASR[stageIndex] + 1, Math.max(global.ASRInfo.max[stageIndex], 1));\n            let unlocked = true;\n            if (player.stage.true < 6) {\n                if (stageIndex === 3 && player.stage.resets < 5) {\n                    if (index === 2) {\n                        unlocked = player.upgrades[3][2] === 1 || player.buildings[3][2].trueTotal.moreThan('0');\n                    } else if (index === 3) {\n                        unlocked = player.upgrades[3][4] === 1 || player.buildings[3][3].trueTotal.moreThan('0');\n                    }\n                } else if (stageIndex === 5) {\n                    if (index === 1) {\n                        unlocked = player.milestones[2][0] >= 7;\n                    } else if (index === 2) {\n                        unlocked = player.milestones[3][0] >= 7;\n                    } else if (index === 3) {\n                        unlocked = player.milestones[4][1] >= 8;\n                    }\n                }\n            } else if (player.stage.true < 7) {\n                if (player.stage.resets < 2 && index === 5) {\n                    if (stageIndex === 3) {\n                        unlocked = player.upgrades[3][11] === 1 || player.buildings[3][5].trueTotal.moreThan('0');\n                    } else if (stageIndex === 4) {\n                        unlocked = player.elements[26] >= 1;\n                    }\n                }\n            }\n            return `Automatically make ${unlocked ? global.buildingsInfo.name[stageIndex][index] : '(not unlocked)'} (counts as self-made).\\n(Auto ${(stageIndex === 5 && index === 3) || stageIndex >= 6 ? \"for this Structure doesn't wait and ignores related settings\" : `will wait until ${format(player.toggles.shop.wait[stageIndex])} times of the Structure cost`})`;\n        },\n        costRange: [\n            [],\n            [2000, 8000, 16000, 32000, 56000],\n            [1e10, 1e14, 1e18, 1e23, 1e28, 1e30],\n            [1e-7, 1e10, 5e29, 2e30, 2e36],\n            [1e6, 1e17, 1e28, 1e39, 1e52],\n            [1e56, 1e60, 1e100],\n            [Infinity]\n        ],\n        max: [0, 3, 5, 4, 4, 3, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel',\n            '[29] Copper',\n            '[30] Zinc',\n            '[31] Gallium',\n            '[32] Germanium',\n            '[33] Arsenic',\n            '[34] Selenium',\n            '[35] Bromine'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron. Wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => `The most basic Element, increases Brown dwarfs${player.inflation.vacuum ? ' and Puddles' : ''} production by 2.`,\n            () => `Fusion reaction byproduct, makes Interstellar Stars cost scale -${format(0.1)} less.`,\n            () => `First metal, Solar mass gain${player.inflation.vacuum ? ' and hardcap delay for Cosmic dust' : ''} per Brown dwarf will be lightly increased.`,\n            () => `Brittle earth metal and so is the brittle increase to the production.\\n(${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''})`,\n            () => `A new color, and a new boost to the Solar mass gain${player.inflation.vacuum ? ' and delay to the Cosmic dust hardcap' : ''} that is based on current Brown dwarfs.`,\n            () => `Base for organics, it will increase the boost from Red giants by ^${format(calculateEffects.element6())}.`,\n            () => \"The most abundant Element in the atmosphere of some Planets, it allows for 2 more levels of 'Star system'.\",\n            () => `An oxidizing agent that will make Interstellar Stars cost scale even slower. (-${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x boost to the Solar mass gain${player.inflation.vacuum ? ' and delay to the Preons hardcap' : ''}.`,\n            () => \"Through leaching will get 1 extra level of 'Protoplanetary disk'.\",\n            () => 'Stars are inside you, as well Neutron stars strength will be increased by log4.',\n            () => 'Has a great affinity towards Oxygen and to decrease cost of all Stars by 100.',\n            () => `Just another tetravalent metalloid, and so is another ${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''}.`,\n            () => `One of the Fundamentals for Life and to make all Stars boost Solar mass gain${player.inflation.vacuum ? ' and delay Cosmic dust hardcap' : ''}.`,\n            () => \"A burning rock that will increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system' by another 24 levels.\",\n            () => 'Less noble, but Black holes effect will be a little stronger.',\n            () => \"Don't forget about it and will get 1 free level of 'Planetary system'.\\n(It will also make Solar mass effect apply twice to Brown dwarfs)\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to the Solar mass effect.`,\n            () => 'Part of a new alloy that will allow for Red giants to be added into an effective amount of Neutron stars.',\n            () => `Catalyst for production of Stardust. 'Gamma-ray burst' effect will be increased by Solar mass ^${format(0.1)}.\\n(Effect increase: ${format(player.collapse.mass ** 0.1, { padding: true })})`,\n            () => `No corrosion, only boost to all Stars that is based on unspent Stardust ^${format(calculateEffects.element24_power())}.\\n(Boost to Stars: ${format(calculateEffects.element24(), { padding: true })})`,\n            () => \"Brittle Element, but not the bonus \u2012 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. ${player.inflation.vacuum ? `Unlock a new Star type${player.strangeness[5][3] >= 1 ? ' and Intergalactic Stage' : ''}` : 'Enter Intergalactic space'}.\\n${player.stage.true >= 6 || player.strange[0].total >= 1 ? `Current base increase for Stage reset reward is +${format(effectsCache.element26, { padding: true })}, which is equal to log10(Stardust produced this Stage) - 48.${player.elements[29] >= 1 ? \"\\n(Formula doesn't show improvement from '[29] Copper', but base increase does)\" : ''}` : '(Can change active Stage from footer, new effect will be added after another Stage reset)'}`,\n            () => `Combined and ready to make all self-made Red supergiants count as Red giants and improve '[24] Chromium' Element by +^${format(0.01)}.`,\n            () => \"Slow to react, but will increase max level of 'Star system' by +1.\",\n            () => `Does not need to be prepared to increase Stage reset reward base by Arithmetic progression with step of ${format(0.01)}.`,\n            () => `First of new Elements to come, increases max allowed Merge resets by +1 for every new Element past '[29] Copper'.\\n(Currently highest created Element in current Stage reset is '${global.elementsInfo.name[player.collapse.maxElement]}', equals to +${Math.max(player.collapse.maxElement - 29, 0)} allowed Merges)`,\n            () => \"Will melt in the palm of your hand to increase max level of 'Star system' by +1.\",\n            () => `Too late to appear, but it will make all Galaxies cost scale slower by ${format(-0.01)} anyway.`,\n            () => 'Toxic enough to buff only Quasi-stars with Black holes effect.',\n            () => \"Capable of sensing an +1 increase to the max level of 'Star system'.\",\n            () => \"The only liquid nonmetal to increase the max level of 'Inner Black hole' by +1.\"\n        ],\n        startCost: [ //New Element cost must be higher than previous one\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 8e12, 6e13,\n            1e15, 1e20, 1e22, 1e24, 1.4e26, 1e28, 1e30, 1e32, 2e36, 1e38,\n            1e39, 1e41, 2e42, 3e43, 4e44, 5e45, 1e48, 1e54, 1e58, 1e140,\n            1e220, 1e240, 1e260, '1e380', '1e520', '1e600'\n        ] as unknown as Overlimit[]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Fundamental boost',\n                'Better improvement',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discharge',\n                'Auto Structures',\n                'Strange boost',\n                'Energy increase',\n                'Conservation of Mass',\n                'Conservation of Energy'\n            ],\n            effectText: [\n                () => `Boost all Microworld Structures by ${format(player.inflation.vacuum ? 2 : 1.8)}.`,\n                () => `Base for 'Improved Tritium' Research will be bigger by +${format(player.inflation.vacuum ? 1.5 : 1)}.\\n(Boost from it at current Research level is ${format((calculateEffects.S1Research2(player.strangeness[1][1] + 1) / calculateEffects.S1Research2()) ** player.researches[1][2], { padding: true })})`,\n                () => `Discharge goals requirement will scale slower. (-${format(0.5)})\\n(Creating this Strangeness will make next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(undefined, player.strangeness[1][2] + 1)))} Energy)`,\n                () => `Obtain +${format(0.5)} bonus Discharge goals.`,\n                () => `Automatically Discharge upon reaching next goal or spending Energy. (Needs to be enabled in Settings)${global.strangenessInfo[1].max[4] > 1 ? '\\nSecond level will make Discharge goals to be based on true Energy and without needing to reset.' : ''}`,\n                () => 'Make auto for all Microworld Structures permanent.',\n                () => `Unspent Strange quarks will boost Microworld by improving its Structures.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.26 : 0.22)} | Effect: ${format(global.strangeInfo.stageBoost[1], { padding: true })})`,\n                () => 'Increase Energy gain from creating Preons by +2.',\n                () => { //[8]\n                    const improved = player.challenges.supervoid[1] >= 2;\n                    return `No Mass will be lost when creating Preons${improved ? '' : ', only works when Accretion Stage is unlocked'}.\\nSecond level will disable auto Accretion Structures, if Cosmic dust is hardcapped, until will have enough Mass for the highest Solar mass conversion${improved ? \" or to increase current Rank, if its below 'Protostar' and 'Automatic Rank' level is below 2\" : ', only works if Interstellar Stage is unlocked'}.`;\n                },\n                () => 'No Energy will be lost when creating Upgrades or Researches, only works when Interstellar Stage is unlocked.'\n            ],\n            cost: [],\n            startCost: [1, 1, 1, 2, 12, 2, 24, 2, 12, 15600],\n            scaling: [2.46, 2, 6, 4, 400, 1, 1, 6, 10, 1],\n            max: [6, 4, 4, 2, 1, 1, 1, 2, 2, 1],\n            maxActive: 7\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Auto Structures',\n                'Strange boost',\n                'Improved flow',\n                'Mechanical spread',\n                'Ocean world'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce'} 2 times more${player.inflation.vacuum ? '' : ' Moles'}.`,\n                () => `Puddles will produce ${format(player.inflation.vacuum ? 1.8 : 1.6)} times more Drops.`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[2][2] >= 1) { extraText = \"max level increased for 'More streams' (+1)\"; }\n                    if (player.strangeness[2][2] >= 2) { extraText += \" and 'Distributary channel' (+1)\"; }\n                    if (player.strangeness[2][2] >= 3) { extraText += \", a new Upgrade \u2012 'Tsunami'\"; }\n                    return `Increase max level for one of the Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Decrease amount of Drops required to get a Cloud by ${format(player.inflation.vacuum ? 2.5 : 2)}.`,\n                () => `Automatically Vaporize when reached enough boost from new Clouds. (Needs to be enabled in Settings)${global.strangenessInfo[2].max[4] > 1 ? `\\nSecond level will unlock an automatic ${format(2.5)}% gain of Clouds per second.${player.stage.true >= 7 ? ' (Not affected by global speed)' : ''}` : ''}`,\n                () => 'Make auto for all Submerged Structures permanent.',\n                () => `Unspent Strange quarks will boost Submerged by improving Puddles.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.22 : 0.18)} | Effect: ${format(global.strangeInfo.stageBoost[2], { padding: true })})`,\n                () => `Submerged Structures that improve other Submerged Structures will do it ${format(1.24)} times stronger.\\n(Affected Structures are Ponds, Lakes, Seas and Oceans)`,\n                () => { //[8]\n                    let extraText = 'none';\n                    if (player.strangeness[2][8] >= 1) { extraText = \"max level increased for 'Stronger surface tension' (+3)\"; }\n                    if (player.strangeness[2][8] >= 2) { extraText += \" and 'Stronger surface stress' (+1)\"; }\n                    if (player.strangeness[2][8] >= 3) { extraText += \", a new Upgrade \u2012 'Tide'\"; }\n                    return `Increase max level for one of the Researches. Final level will instead unlock an even better new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Increase Stage reset reward based on current Cloud amount.\\n(Formula: log10(Clouds + 1) / 80 + 1 | Effect: ${format(calculateEffects.S2Strange9(), { padding: true })})`\n            ],\n            cost: [],\n            startCost: [1, 1, 2, 2, 12, 4, 24, 18, 800, 9600],\n            scaling: [2.46, 2, 3, 4, 800, 1, 1, 3.4, 3, 1],\n            max: [4, 8, 3, 2, 1, 1, 1, 6, 3, 1],\n            maxActive: 7\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Auto Structures',\n                'Upgrade automatization',\n                'Strange boost',\n                'Mass delay',\n                'Rank raise'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by ${format(1.8)}.`,\n                () => `Accretion Structures that produce other Accretion Structures will do it ${format(player.inflation.vacuum ? 1.48 : 1.6)} times faster.\\n(Affected Structures are Planetesimals and Protoplanets)`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[3][2] >= 1) { extraText = \"max level increased for 'Rank boost' (+6)\"; }\n                    if (player.strangeness[3][2] >= 2) { extraText += \" and 'Efficient growth' (+2)\"; }\n                    if (player.strangeness[3][2] >= 3) { extraText += \", a new Upgrade \u2012 'Hydrostatic equilibrium'\"; }\n                    return `Increase max level for one of the Rank Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => { //[3]\n                    if (!global.stageInfo.activeAll.includes(3)) { assignBuildingsProduction.stage3Cache(); }\n                    return `Satellites will be able to improve remaining ${player.inflation.vacuum ? 'Accretion ' : ''} Structures, but at reduced strength (^${format(player.inflation.vacuum ? 0.1 : 0.2)}).\\n(Affected Structures are Cosmic dust and Planetesimals, boost is equal to ${format(effectsCache.S3Strange3, { padding: true })})`;\n                },\n                () => `Automatically increase Rank when possible. (Needs to be enabled in Settings)${global.strangenessInfo[3].max[4] > 1 ? '\\nSecond level will make Rank increase use Mass produced this reset instead of current.' : ''}`,\n                () => 'Make auto for all Accretion Structures permanent.',\n                () => `Always automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.strangeness[3][6], 2)]} from any Stage${!player.inflation.vacuum && player.strangeness[5][3] < 1 && player.buildings[6][1].current.lessThan('3') ? ' before Intergalactic' : ''}. (Needs to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Accretion by making its Structures cheaper.\\n(Formula: (x + 1) ^${format(player.inflation.vacuum ? 0.68 : 0.76)} | Effect: ${format(global.strangeInfo.stageBoost[3], { padding: true })})`,\n                () => `Delay Cosmic dust hardcap by ${format(1.4)} per level.`,\n                () => `Unlock a new Accretion Rank to achieve.${player.stage.true >= 7 ? \"\\n(Also increase max level of 'Reset automatization')\" : ''}`\n            ],\n            cost: [],\n            startCost: [1, 2, 2, 24, 12, 4, 4, 24, 18000, 2.16e6],\n            scaling: [2, 3.4, 3, 1, 100, 1, 1.74, 1, 2.46, 1],\n            max: [8, 4, 3, 1, 1, 1, 3, 1, 6, 1],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Automatic Collapse',\n                'Auto Structures',\n                'Element automatization',\n                'Strange boost',\n                'Neutronium',\n                'Newer Upgrade'\n            ],\n            effectText: [\n                () => `All Stars will produce ${format(1.6)} times more Stardust.`,\n                () => 'Stars will be 2 times cheaper.',\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[4][2] >= 1) { extraText = \"'Planetary nebula' (Stage Research)\"; }\n                    if (player.strangeness[4][2] >= 2) { extraText += \", 'White dwarfs' (Collapse Research)\"; }\n                    if (player.strangeness[4][2] >= 3) { extraText += \", 'Helium fusion' (Upgrade)\"; }\n                    return `Unlock a new Upgrade, its pretty good.\\n(Current unlocks: ${extraText})`;\n                },\n                () => '10% of Brown dwarfs will be able to turn into Red giants after Collapse.',\n                () => `Automatically Collapse once reached enough boost or Solar mass. (Needs to be enabled in Settings)${global.strangenessInfo[4].max[4] > 1 ? '\\nSecond level will unlock an automatic Star remnants gain without needing to reset.' : ''}`,\n                () => 'Make auto for all Interstellar Structures permanent.',\n                () => `Elements will no longer require Collapse for activation${player.inflation.vacuum ? ' and related automatization Research will cost as if its level is -1' : ''}.\\nSecond level will unlock auto creation of Elements. (${global.strangenessInfo[4].max[6] > 1 ? 'Needs to be enabled in settings' : 'Not yet unlocked for Interstellar space'})`,\n                () => `Unspent Strange quarks will boost Interstellar by improving all Stars.\\n(Formula: (x + 1) ^(${format(0.16)} or ${format(0.32)}, if '[26] Iron' is created) | Effect: ${format(global.strangeInfo.stageBoost[4], { padding: true })})`,\n                () => `Increase effective amount of Neutron stars (doesn't include ones from '[22] Titanium') by 1 + level and improve Neutron stars strength by +^${format(0.125)}.`,\n                () => { //[9]\n                    let extraText = 'none';\n                    if (player.strangeness[4][9] >= 1) { extraText = \"'Nucleosynthesis' (Upgrade)\"; }\n                    if (player.strangeness[4][9] >= 2) { extraText += \", 'Quark-nova' (Collapse Research)\"; }\n                    if (player.strangeness[4][9] >= 3) { extraText += \", 'Inner Black hole' (Stage Research)\"; }\n                    return `Unlock yet another an even better new Upgrade.\\n(Current unlocks: ${extraText})`;\n                }\n            ],\n            cost: [],\n            startCost: [1, 2, 4, 2, 12, 6, 6, 24, 12000, 2.4e5],\n            scaling: [2, 3.4, 3, 4, 1900, 1, 1.74, 1, 2, 3],\n            max: [8, 4, 3, 2, 1, 1, 1, 1, 8, 3],\n            maxActive: 8\n        }, { //Stage 5\n            name: [\n                'Bigger Structures',\n                'Higher density',\n                'Strange gain',\n                'Gravitational bound',\n                'Automatic Galaxy',\n                'Auto Structures',\n                'Automatic Stage',\n                'Strange boost',\n                'Strange growth',\n                'Automatic Merge',\n                'Galactic tide'\n            ],\n            effectText: [\n                () => `More matter for Accretion (flavor text), first two Intergalactic Structures will be ${format(player.inflation.vacuum ? 1.4 : 1.6)} times stronger.`,\n                () => `With higher density, first two Intergalactic upgrades will be even stronger. Effects will be increased by ${format(player.inflation.vacuum ? 1.6 : 1.8)}.`,\n                () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset.`,\n                () => player.inflation.vacuum ? 'Unlock Intergalactic Stage and increase Strange quarks from Stage resets by +1.' : `Make Intergalactic Stage immune to Collapse reset${player.buildings[6][1].current.lessThan('3') ? \" and allow 'Upgrade automatization' to work within Intergalactic Stage\" : ''}.`,\n                () => 'Automatically Collapse if able to afford a new Galaxy and auto Galaxy is enabled.\\n(Also unlocks permanent auto Galaxies for free and removes Mass limit for auto Collapse points)',\n                () => `Make auto for ${player.strangeness[5][4] >= 1 ? 'all' : 'the first two'} Intergalactic Structures permanent${player.strangeness[5][4] < 1 ? ' and prevent the rest from resetting' : ''}.`,\n                () => `Automatically trigger Stage reset${player.inflation.vacuum ? ' or leave current Challenge if time limit is reached' : `, doesn't work for Interstellar Stage${player.stage.true >= 7 ? ' and Challenges' : ''} until second level`}. (Needs to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Intergalactic by increasing Solar mass gain.\\n(Formula: (x + 1) ^${format(0.06)} | Effect: ${format(global.strangeInfo.stageBoost[5], { padding: true })})`,\n                () => 'Unlock another Strange Structure.\\n(Click on that Structure to see its effects)',\n                () => \"Automatically Merge Galaxies if can't get any more of them quickly. (Needs to be enabled in Settings)\",\n                () => { //[10]\n                    let passive = 'none';\n                    let upgrades = 'none';\n                    if (player.strangeness[5][10] >= 1) {\n                        passive = `increase Energy gain from Galaxies by 5, decrease Discharge goal requirement by ${format(calculateEffects.S5Strange9_stage1(), { padding: 'exponent' })}`;\n                        upgrades = \"'Nuclear fission' (Microworld Upgrade), 'Radioactive decay' (Energy Research)\";\n                    }\n                    if (player.strangeness[5][10] >= 2) {\n                        passive += `, boost Puddles ${player.strangeness[5][10] >= 3 ? 'and Cosmic dust strength ' : ''}by ${format(calculateEffects.S5Strange9_stage2(), { padding: 'exponent' })}`;\n                        upgrades += \", 'Jeans Mass' (Clouds Research)\";\n                    }\n                    if (player.strangeness[5][10] >= 3) {\n                        passive += `, delay Cosmic dust hardcap by ${format(calculateEffects.S5Strange9_stage3(), { padding: true })}`;\n                        upgrades += \", 'Self-gravity' (Accretion Upgrade), 'Ablative armor' (Rank Research)\";\n                    }\n                    return `Boost lower Stages based on current Galaxies and unlock new Upgrades for them.\\n(Passive effects: ${passive})\\n(New Upgrades: ${upgrades})`;\n                }\n            ],\n            cost: [],\n            startCost: [24, 36, 4, 24, 15600, 24, 480, 120, 6000, 6e6, 1.2e7],\n            scaling: [2, 2, 4, 1, 1, 1, 1, 1, 1, 1, 3],\n            max: [8, 8, 2, 1, 1, 1, 1, 1, 1, 1, 3],\n            maxActive: 8\n        }\n    ],\n    treeInfo: [{ //Refindable\n        name: [\n            'Overboost',\n            'Global boost',\n            'Strange gain',\n            'Instability',\n            'Void Milestones',\n            'Better Offline'\n        ],\n        effectText: [\n            () => `Boost global speed by 2, but reduce time limit on everything that has it by 4, if level is below 2.\\nIf there is no time limit, then 2nd level will instead boost global speed by ${format(calculateEffects.inflation0(), { padding: true })} (strength depletes over 1 hour of real Stage time).`,\n            () => { //[1]\n                const power = calculateEffects.inflation1_power();\n                return `Boost global speed by (unspent Dark matter + 1) ^${format(power, { padding: true })}.\\n(Boost per level: ${format(calculateEffects.inflation1(calculateEffects.inflation1_power(player.tree[0][1] + 1) - power), { padding: true })})`;\n            },\n            () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset per level.${player.tree[0][3] >= 1 ? `\\nFirst ${player.tree[0][3] * 2} levels will also boost global speed by ${format(1.2)}, only while inside any Void.` : ''}`,\n            () => `Boost global speed and Stage reset reward by ${format(calculateEffects.inflation3())}, strength is based on Supervoid progress in the current Universe.\\nEvery level will also improve 2 levels of 'Strange gain' Inflation to boost global speed while inside any Void.`,\n            () => 'For false Vacuum it will remove time limit from Milestones.\\nFor true Vacuum it will unlock Void Milestones. Their effects are active, only when this Inflation is active.',\n            () => {\n                const level = Math.min(player.tree[0][5], 3);\n                return `Allow for Export storage to be increased by ${25 * (level + 1)}% of the Stage reset value and to claim entire storage at once, but without bonus +1 to the Strange quarks base. Also increases Export time gain by ${format((4.8 - level) / (3.8 - level), { padding: true })}.\\nIf inside reqular Void, then it will decrease time limit by 10 minutes per level, but boost global speed by ${format((6 - level) / (5 - level), { padding: true })}.\\nIf inside Supervoid, then it will decrease global speed nerf by ${format((5 - level) / (4 - level), { padding: true })}.`;\n            }\n        ],\n        cost: [],\n        startCost: [0, 1, 1, 2, 4, 1],\n        scaling: [2, 0.75, 0.5, 2, 0, 1.75],\n        max: [2, 6, 8, 4, 1, 4]\n    }, { //Non-refindable\n        name: [\n            'Discharge improvement'\n        ],\n        effectText: [\n            () => `True Vacuum only, gain +1 free Goals and decrease requirement scaling by -${format(0.5)} with every level.\\nAlso improve Discharge base by +${format(0.5)} (before the softcap), but only inside any Void.`\n        ],\n        cost: [],\n        startCost: [0],\n        scaling: [1],\n        max: [1]\n    }],\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Fundamental Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[1].need[0])} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} this reset.`,\n                () => `Have current Energy reach ${format(global.milestonesInfo[1].need[1])}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures strength increased by ${format(global.milestonesInfo[1].reward[0], { padding: true })}.` : 'Increase base for Strange quarks from any Stage reset by +1.',\n                () => player.inflation.vacuum ? `Effective Energy increased by ${format(global.milestonesInfo[1].reward[1], { padding: true })}.` : 'Permanent Microworld Stage.'\n            ],\n            need: [],\n            time: [14400, 14400],\n            reward: [1, 1],\n            scaling: [\n                [1e152, 1e158, 1e164, 1e170, 1e178, 1e190],\n                [23800, 24600, 25800, 27000, 28200, 29600]\n            ],\n            max: [6, 6]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `${player.inflation.vacuum ? 'Vaporize to' : 'Produce'} at least ${format(global.milestonesInfo[2].need[0])} ${player.inflation.vacuum ? 'Clouds' : 'Drops this reset'}.`,\n                () => `${player.inflation.vacuum ? 'Produce' : 'Have'} at least ${format(global.milestonesInfo[2].need[1])} ${player.inflation.vacuum ? 'Drops this reset' : 'Puddles at same time'}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Decrease Drops requirement to get a Cloud by ${format(global.milestonesInfo[2].reward[0], { padding: true })}.` : 'First Intergalactic Structure. (Nebula)',\n                () => player.inflation.vacuum ? `Puddles strength increased by ${format(global.milestonesInfo[2].reward[1], { padding: true })}.` : 'Permanent Submerged Stage.'\n            ],\n            need: [],\n            time: [28800, 28800],\n            reward: [1, 1],\n            scaling: [\n                [1e30, 1e32, 1e34, 1e36, 1e38, 1e40, 1e44],\n                [1500, 2300, 3100, 3900, 4700, 5500, 6400]\n            ],\n            max: [7, 7]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[3].need[0])} Mass this reset.`,\n                () => `Have more or equal to ${format(global.milestonesInfo[3].need[1])} Satellites${player.inflation.vacuum ? ' and Subsatellites' : ''}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Cosmic dust strength increased by ${format(global.milestonesInfo[3].reward[0], { padding: true })}.` : 'Second Intergalactic Structure. (Star cluster)',\n                () => player.inflation.vacuum ? `Increase effective Rank by +${format(global.milestonesInfo[3].reward[1])}.` : 'Permanent Accretion Stage.'\n            ],\n            need: [],\n            time: [43200, 43200],\n            reward: [1, 0],\n            scaling: [\n                [1e32, 1e34, 1e36, 1e38, 1e40, 1e42, 1e45],\n                [24, 28, 32, 36, 40, 44, 50]\n            ],\n            max: [7, 7]\n        }, { //Stage 4\n            name: [\n                'Remnants of past',\n                'Supermassive'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[4].need[0])} Stardust this reset.`,\n                () => `Have ${player.inflation.vacuum ? 'current Black holes' : 'Solar mass after Collapse'} reach ${format(global.milestonesInfo[4].need[1])} or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Stars strength increased by ${format(global.milestonesInfo[4].reward[0], { padding: true })}.` : \"New Intergalactic themed Strangeness, Milestone and second level of 'Element automatization'.\",\n                () => player.inflation.vacuum ? `Black holes effect increased by ${format(global.milestonesInfo[4].reward[1], { padding: true })}.` : 'Research to make third Intergalactic Structure and the final Milestone. (Galaxy)'\n            ],\n            need: [],\n            time: [57600, 57600],\n            reward: [1, 1],\n            scaling: [\n                [1e48, 1e49, 1e50, 1e52, 1e54, 1e56, 1e58, 1e60],\n                [9000, 12000, 16000, 22000, 30000, 42000, 60000, 84000]\n            ],\n            max: [8, 8]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'End of Greatness'\n            ],\n            needText: [\n                () => `Have ${player.inflation.vacuum ? 'total produced' : 'self-made'} Stars ${player.inflation.vacuum ? 'this reset' : 'count'} reach at least ${format(global.milestonesInfo[5].need[0])}.`,\n                () => `Have ${format(global.milestonesInfo[5].need[1])} ${player.inflation.vacuum ? 'self-made ' : ''}Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `First two Intergalactic Structures strength increased by ${format(global.milestonesInfo[5].reward[0], { padding: true })}.` : \"Unlock a new Intergalactic Strangeness 'Strange gain' and second level of 'Automatic Stage'.\",\n                () => player.inflation.vacuum ? `Boost per Galaxy is increased by +${format(global.milestonesInfo[5].reward[1])}.` : \"Unlock a new Intergalactic Upgrade 'Galactic Merger'.\"\n            ],\n            need: [],\n            time: [3600, 1200],\n            reward: [1, 0],\n            scaling: [\n                [1460, 1540, 1620, 1700, 1780, 1860, 1940, 2020],\n                [1, 2, 4, 6, 10, 14, 18, 22]\n            ],\n            max: [8, 8]\n        }\n    ],\n    challengesInfo: [{\n        name: 'Void',\n        description: () => `Result of Vacuum Instability, investigate at your own will\\n(${player.inflation.vacuum || player.challenges.super ? `Entering will force a ${player.challenges.super ? 'Vacuum' : 'Stage'} reset, will be reverted after exiting` : 'No reason to enter from false Vacuum, since all rewards are disabled'})`,\n        effectText: () => {\n            const progress = player.challenges.voidCheck;\n            let text = `<p class=\"orangeText\">\u2012 Microworld Structures are 4 times weaker${progress[1] >= 1 ? `\\n\u2012 Discharge base is raised to the root of 2 (^${format(0.5)})` : ''}${progress[1] >= 2 ? '\\n\u2012 Energy gain from Submerged and Accretion Stages is divided by 2' : ''}\\n${progress[3] >= 5 ? '\u2012 Energy gain from Interstellar and Intergalactic Stages is divided by 4' : 'More nerfs will be shown with more rewards'}</p>`;\n            if (progress[1] >= 3) { text += `<p class=\"blueText\">\u2012 Effective Drops amount is hardcapped at 1\\n\u2012 Puddles are ${format(8000)} times weaker\\n${progress[2] >= 1 ? `\u2012 Clouds gain is decreased by ^${format(0.8)}` : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[1] >= 2) { text += `<p class=\"grayText\">\u2012 Cosmic dust is softcapped (^${format(0.9)})\\n${progress[3] >= 4 ? `\u2012 Softcap is stronger after reaching 'Jovian planet' Rank (^${format(0.8)})` : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[3] >= 5) { text += `<p class=\"orchidText\">\u2012 Stars are ${format(8000)} times weaker${progress[4] >= 1 ? '\\n\u2012 Solar mass gain is 2 times smaller' : ''}${progress[4] >= 2 ? `\\n\u2012 Solar mass effect is softcapped ^${format(0.2)} after 1` : ''}\\n${progress[4] >= 5 ? \"\u2012 Can't create or gain Quasi-stars\" : 'More nerfs will be shown with more rewards'}</p>`; }\n            if (progress[2] >= 1) { text += `<p class=\"cyanText\">${player.challenges.super && player.tree[0][5] < 4 ? `\u2012 Global speed is divided by ${5 - player.tree[0][5]}\\n` : ''}\u2012 All resets affect all ${player.stage.true >= 7 ? 'pre-Abyss ' : ''}Stages${progress[5] >= 1 ? `\\n\u2012 Galaxies cost scaling increased by +${format(0.05)}` : progress[4] >= 5 ? '\\nMore nerfs will be shown with more rewards' : ''}</p>`; }\n            return text;\n        },\n        needText: [\n            [], [\n                () => 'Perform the Discharge',\n                () => 'Unlock Accretion Stage',\n                () => `Unlock Submerged Stage${global.sessionToggles[0] ? ' (WIP)' : ''}`\n            ], [\n                () => `Vaporize the Drops${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Have more than ${format(1e4)} Clouds${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => player.stage.true >= 7 ? `Reach ${format(1e12)} Clouds with no Rank resets${global.sessionToggles[0] ? ' (WIP)' : ''}` : null\n            ], [\n                () => \"Reach 'Meteoroid' Rank\",\n                () => \"Reach 'Asteroid' Rank\",\n                () => \"Reach 'Planet' Rank\",\n                () => `Reach 'Jovian planet' Rank${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Reach 'Protostar' Rank${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => player.stage.true >= 7 ? `Reach 'Protogalaxy' Rank${global.sessionToggles[0] ? ' (WIP)' : ''}` : null\n            ], [\n                () => `Cause the Collapse${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Get the first Red giant${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Get the first Neutron star${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Get the first Black hole${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => `Unlock Intergalactic Stage${global.sessionToggles[0] ? ' (WIP)' : ''}`\n            ], [\n                () => `Create a Galaxy${global.sessionToggles[0] ? ' (WIP)' : ''}`,\n                () => player.stage.true >= 7 ? `Force a Galaxic Merge${global.sessionToggles[0] ? ' (WIP)' : ''}` : null,\n                () => player.stage.true >= 7 ? 'Create a Galaxy group (WIP)' : null\n            ]\n        ],\n        rewardText: [[\n            [],\n            [\"'Energy increase' (Microworld)\", \"'Conservation of Mass' (Microworld)\", \"'Improved flow' (Submerged)\"],\n            [\"'Mechanical spread' (Submerged)\", \"'Ocean world' (Submerged)\", \"'Galactic tide' (Intergalactic)\"],\n            ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\", \"'Automatic Merge' (Intergalactic)\"],\n            ['Max level increased for Auto resets', \"'Conservation of Energy' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass delay' (Accretion)\", \"'Newer Upgrade' (Interstellar)\"],\n            [\"'Rank raise' (Accretion)\", 'New Abyss themed Strangeness (WIP)', 'Missing']\n        ], [\n            [],\n            [\"'Discharge improvement' (Non-refundable)\", \"'Improved conservation' (Milestone)\", 'Missing'],\n            ['Missing', 'Missing', 'Missing'],\n            [\"'Indestructible matter' (Milestone)\", \"'Latest Preons' (Milestone)\", \"'Better Offline' (Refundable)\", 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing', 'Missing', 'Missing'],\n            ['Missing', 'Missing', 'Missing']\n        ]],\n        resetType: 'stage',\n        time: 3600,\n        color: 'darkviolet'\n    }, {\n        name: 'Vacuum information',\n        resetType: 'vacuum',\n        time: 1200,\n        color: 'darkorchid'\n    }],\n    historyStorage: {\n        stage: [],\n        vacuum: []\n    },\n    loadouts: {\n        input: [],\n        buttons: {}\n    }\n};\n\n/** Only for effects that are calculated multiple times per tick */\nexport const effectsCache = { //Cannot be in Stage.ts due to esbuild file ordering\n    microworld: 0,\n    S1Upgrade6: 0,\n    S1Upgrade7: 0,\n    /** Alternative names are S1Upgrade8 and S1Build6 */\n    tritium: new Overlimit('0'),\n    S2Upgrade3: 0,\n    S2Upgrade4: 0,\n    interstellar: 0,\n    mass: 0,\n    star1: 0,\n    star2: 0,\n    galaxyBase: 0,\n    S5Upgrade2: 0,\n    interstellarQuarks: 0,\n    element26: 0,\n    S1SolarDelay: 0,\n    S3SolarDelay: 0,\n    S3Strange1: 0,\n    S3Strange3: 0,\n    /** Total effect */\n    inflation3: 0\n};\n\n//Math.log extension for any base\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n/** Not for deep copy, works on Overlimit, but not prefered */\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone;\n//Actual type is any[], it's because TS is dumb; [...array] will be better after ~>10000 keys\n\n/** For non deep clone use { ...object } or cloneArray when possible */\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        if (toClone instanceof Overlimit) { return new Overlimit(toClone) as CloneType; }\n\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\n/** Does not clone given value */\nexport const createArray = <startValue extends number | string | boolean | null | undefined>(length: number, value: startValue) => {\n    const array = [];\n    for (let i = 0; i < length; i++) {\n        array.push(value);\n    }\n    return array as startValue[];\n};\n\nfor (let s = 0; s < global.buildingsInfo.startCost.length; s++) {\n    global.buildingsInfo.producing[s] = [];\n    for (let i = 0; i < global.buildingsInfo.startCost[s].length; i++) {\n        global.buildingsInfo.producing[s].push(new Overlimit('0'));\n    }\n}\nfor (let s = 2; s < global.upgradesInfo.length; s++) {\n    const startCost = global.upgradesInfo[s].startCost;\n    for (let i = 0; i < startCost.length; i++) { startCost[i] = new Overlimit(startCost[i]); }\n}\nfor (const upgradeType of ['researches', 'researchesExtra'] as const) {\n    const pointer = global[`${upgradeType}Info`];\n    pointer[1].cost = cloneArray(pointer[1].startCost as number[]);\n    for (let s = 2; s < pointer.length; s++) {\n        for (let i = 0; i < pointer[s].startCost.length; i++) {\n            pointer[s].startCost[i] = new Overlimit(pointer[s].startCost[i]);\n            pointer[s].cost[i] = new Overlimit(pointer[s].startCost[i]);\n        }\n    }\n}\n{\n    const startCost = global.elementsInfo.startCost;\n    for (let i = 1; i < startCost.length; i++) { startCost[i] = new Overlimit(startCost[i]); }\n}\nfor (let s = 1; s < global.strangenessInfo.length; s++) {\n    global.strangenessInfo[s].cost = cloneArray(global.strangenessInfo[s].startCost);\n}\nfor (let s = 1; s < global.milestonesInfo.length; s++) {\n    for (let i = 0; i < global.milestonesInfo[s].needText.length; i++) {\n        global.milestonesInfo[s].need.push(new Overlimit('Infinity'));\n    }\n}\nfor (let s = 0; s <= 1; s++) {\n    global.treeInfo[s].cost = cloneArray(global.treeInfo[s].startCost);\n\n    player.tree[s] = createArray(global.treeInfo[s].startCost.length, 0);\n}\n\nObject.assign(player, {\n    upgrades: [\n        [],\n        createArray(global.upgradesInfo[1].startCost.length, 0),\n        createArray(global.upgradesInfo[2].startCost.length, 0),\n        createArray(global.upgradesInfo[3].startCost.length, 0),\n        createArray(global.upgradesInfo[4].startCost.length, 0),\n        createArray(global.upgradesInfo[5].startCost.length, 0),\n        createArray(global.upgradesInfo[6].startCost.length, 0)\n    ],\n    researches: [\n        [],\n        createArray(global.researchesInfo[1].startCost.length, 0),\n        createArray(global.researchesInfo[2].startCost.length, 0),\n        createArray(global.researchesInfo[3].startCost.length, 0),\n        createArray(global.researchesInfo[4].startCost.length, 0),\n        createArray(global.researchesInfo[5].startCost.length, 0),\n        createArray(global.researchesInfo[6].startCost.length, 0)\n    ],\n    researchesExtra: [\n        [],\n        createArray(global.researchesExtraInfo[1].startCost.length, 0),\n        createArray(global.researchesExtraInfo[2].startCost.length, 0),\n        createArray(global.researchesExtraInfo[3].startCost.length, 0),\n        createArray(global.researchesExtraInfo[4].startCost.length, 0),\n        createArray(global.researchesExtraInfo[5].startCost.length, 0),\n        createArray(global.researchesExtraInfo[6].startCost.length, 0)\n    ],\n    researchesAuto: createArray(global.researchesAutoInfo.costRange.length, 0),\n    ASR: createArray(global.ASRInfo.costRange.length, 0),\n    maxASR: createArray(global.ASRInfo.costRange.length, 0),\n    elements: createArray(global.elementsInfo.startCost.length, 0),\n    strangeness: [\n        [],\n        createArray(global.strangenessInfo[1].startCost.length, 0),\n        createArray(global.strangenessInfo[2].startCost.length, 0),\n        createArray(global.strangenessInfo[3].startCost.length, 0),\n        createArray(global.strangenessInfo[4].startCost.length, 0),\n        createArray(global.strangenessInfo[5].startCost.length, 0)\n    ],\n    milestones: [\n        [],\n        createArray(global.milestonesInfo[1].need.length, 0),\n        createArray(global.milestonesInfo[2].need.length, 0),\n        createArray(global.milestonesInfo[3].need.length, 0),\n        createArray(global.milestonesInfo[4].need.length, 0),\n        createArray(global.milestonesInfo[5].need.length, 0)\n    ]\n});\nObject.assign(player.toggles, {\n    normal: createArray(document.getElementsByClassName('toggleNormal').length, false),\n    confirm: createArray(document.getElementsByClassName('toggleConfirm').length, 'Safe'),\n    buildings: [\n        [],\n        createArray(player.buildings[1].length, false),\n        createArray(player.buildings[2].length, false),\n        createArray(player.buildings[3].length, false),\n        createArray(player.buildings[4].length, false),\n        createArray(player.buildings[5].length, false),\n        createArray(player.buildings[6].length, false)\n    ],\n    hover: createArray(document.getElementsByClassName('toggleHover').length, false),\n    max: createArray(document.getElementsByClassName('toggleMax').length, false),\n    auto: createArray(document.getElementsByClassName('toggleAuto').length, false)\n});\nplayer.toggles.normal[1] = true;\n\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    if (load.inflation === undefined) { throw new ReferenceError('This save file is not from this game or too old'); }\n    prepareVacuum(load.inflation.vacuum); //Only to set starting buildings values\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.time = 0;\n            load.inflation.age = 0;\n            load.discharge.energyMax = load.discharge.energy;\n            load.vaporization.cloudsMax = new Overlimit(load.vaporization.clouds);\n        }\n        if (['v0.1.3', 'v0.1.4', 'v0.1.5', 'v0.1.6', 'v0.1.7'].includes(load.version)) {\n            load.version = 'v0.1.8';\n            load.time.online = load.inflation.age;\n            load.time.universe = load.inflation.age;\n            load.time.stage = load.stage.time;\n            if (load.buildings[5].length > 4) { load.buildings[5].length = 4; }\n            delete load['saveUpdate016' as keyof unknown];\n            delete load.time['disabled' as keyof unknown];\n            delete load.discharge['unlock' as keyof unknown];\n            delete load.accretion['input' as keyof unknown];\n        }\n        if (load.version === 'v0.1.8') {\n            load.version = 'v0.1.9';\n            load.researchesAuto = cloneArray(playerStart.researchesAuto);\n            delete load.discharge['bonus' as keyof unknown];\n        }\n        if (load.version === 'v0.1.9') {\n            load.version = 'v0.2.0';\n            load.stage.peak = 0;\n            load.milestones = deepClone(playerStart.milestones);\n            load.vaporization.input = cloneArray(playerStart.vaporization.input);\n            load.time.export = cloneArray(playerStart.time.export);\n            load.history = deepClone(playerStart.history);\n            load.fileName = playerStart.fileName;\n            delete load['separator' as keyof unknown];\n            delete load['intervals' as keyof unknown];\n            delete load.stage['best' as keyof unknown];\n            delete load.stage['export' as keyof unknown];\n        }\n        if (load.version === 'v0.2.0') {\n            load.version = 'v0.2.1';\n            load.toggles = deepClone(playerStart.toggles);\n            load.stage.input = cloneArray(playerStart.stage.input);\n            load.inflation.resets = load.inflation.vacuum ? 1 : 0;\n            load.buildings[6] = deepClone(playerStart.buildings[6]);\n            load.upgrades[6] = cloneArray(playerStart.upgrades[6]);\n            load.researches[6] = cloneArray(playerStart.researches[6]);\n            load.researchesExtra[6] = cloneArray(playerStart.researchesExtra[6]);\n            load.history.vacuum = deepClone(playerStart.history.vacuum);\n            for (let s = 1; s <= 5; s++) {\n                for (let i = 0; i < load.buildings[s].length; i++) {\n                    delete load.buildings[s][i]['highest' as keyof unknown];\n                }\n            }\n        }\n        if (load.version === 'v0.2.1') {\n            load.version = 'v0.2.2';\n            load.collapse = deepClone(playerStart.collapse);\n            load.inflation.time = load.inflation.age;\n            load.time.vacuum = load.time.universe;\n            load.clone = {};\n            delete load['events' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.collapse.show = load.elements.findLastIndex((e) => e > 0); //If can figure out on how to prevent pre-Iron softlocks\n        }\n        if (load.version === 'v0.2.2') {\n            load.version = 'v0.2.3';\n            const old = load.challenges?.active;\n            load.challenges = deepClone(playerStart.challenges);\n\n            /* Can be removed eventually */\n            if (old !== undefined && old !== -1) { load.challenges.active = old; } //If can figure out safe way to exit out of Supervoid\n        }\n        if (load.version === 'v0.2.3') {\n            load.version = 'v0.2.4';\n            load.time.online *= 1000;\n            load.time.offline = 0;\n            load.merge = deepClone(playerStart.merge);\n            load.inflation.loadouts = {};\n\n            /* Can be removed eventually */\n            if (load.clone.depth !== undefined) { load.clone.merge.since = 0; } //Supervoid\n        }\n        if (load.version === 'v0.2.4') {\n            load.version = 'v0.2.5a';\n            load.stage.peakedAt = 0;\n            load.event = false;\n            delete load.inflation['spent' as keyof unknown];\n\n            /* Can be removed eventually */\n            if (load.clone.depth !== undefined) { load.clone.merge.rewards = cloneArray(playerStart.merge.rewards); } //Supervoid\n            load.merge.rewards = cloneArray(playerStart.merge.rewards); //Move deepClone for Merge here, once extra Resets won't cause too much issues\n            delete load.merge['reward' as keyof unknown];\n        }\n        if (load.version === 'v0.2.5a') {\n            load.version = 'v0.2.5b';\n            load.tree = deepClone(playerStart.tree);\n            const old = (load.cosmon as unknown as typeof load.cosmon[0])?.total;\n            load.cosmon = deepClone(playerStart.cosmon);\n            if (old !== undefined) {\n                load.cosmon[0].current = old;\n                load.cosmon[0].total = old;\n            }\n            load.challenges.supervoidMax = cloneArray(load.challenges.supervoid);\n            delete load.inflation['tree' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.fileName = load.fileName.replace('[cosmon]', '[inflaton]');\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError(`Couldn't update save file ${load.version} to the current game version`);\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (let i = Math.min(load.buildings[s].length, global.buildingsInfo.maxActive[s]); i < playerStart.buildings[s].length; i++) {\n            load.buildings[s][i] = deepClone(playerStart.buildings[s][i]);\n        }\n        for (let i = load.toggles.buildings[s].length; i < playerStart.toggles.buildings[s].length; i++) {\n            load.toggles.buildings[s][i] = false;\n        }\n        if (load.stage.true < 3 || !(load.toggles.shop.wait[s] >= 1)) { load.toggles.shop.wait[s] = 2; }\n\n        for (let i = load.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n            load.upgrades[s][i] = 0;\n        }\n        for (let i = load.researches[s].length; i < playerStart.researches[s].length; i++) {\n            load.researches[s][i] = 0;\n        }\n        for (let i = load.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n            load.researchesExtra[s][i] = 0;\n        }\n        if (load.ASR[s] === undefined) { load.ASR[s] = 0; }\n\n        if (s >= 6) { continue; }\n        for (let i = Math.min(load.strangeness[s].length, global.strangenessInfo[s].maxActive); i < playerStart.strangeness[s].length; i++) {\n            load.strangeness[s][i] = 0;\n        }\n        for (let i = load.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n            load.milestones[s][i] = 0;\n        }\n    }\n    for (let i = load.strange.length; i < playerStart.strange.length; i++) {\n        load.strange[i] = deepClone(playerStart.strange[i]);\n    }\n\n    for (let i = load.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n        load.researchesAuto[i] = 0;\n    }\n    for (let i = load.elements.length; i < playerStart.elements.length; i++) {\n        load.elements[i] = 0;\n    }\n    for (let s = 0; s <= 1; s++) {\n        for (let i = load.tree[s].length; i < playerStart.tree[s].length; i++) {\n            load.tree[s][i] = 0;\n        }\n    }\n    if (load.clone.depth !== undefined) {\n        const { clone } = load;\n        for (let s = 1; s <= 6; s++) {\n            for (let i = clone.upgrades[s].length; i < playerStart.upgrades[s].length; i++) {\n                clone.upgrades[s][i] = 0;\n            }\n            for (let i = clone.researches[s].length; i < playerStart.researches[s].length; i++) {\n                clone.researches[s][i] = 0;\n            }\n            for (let i = clone.researchesExtra[s].length; i < playerStart.researchesExtra[s].length; i++) {\n                clone.researchesExtra[s][i] = 0;\n            }\n\n            if (clone.depth === 'stage' || s >= 6) { continue; }\n            for (let i = clone.strangeness[s].length; i < playerStart.strangeness[s].length; i++) {\n                clone.strangeness[s][i] = 0;\n            }\n            for (let i = clone.milestones[s].length; i < playerStart.milestones[s].length; i++) {\n                clone.milestones[s][i] = 0;\n            }\n        }\n        for (let i = clone.researchesAuto.length; i < playerStart.researchesAuto.length; i++) {\n            clone.researchesAuto[i] = 0;\n        }\n        for (let i = clone.elements.length; i < playerStart.elements.length; i++) {\n            clone.elements[i] = 0;\n        }\n    }\n\n    for (let i = load.toggles.normal.length; i < playerStart.toggles.normal.length; i++) {\n        load.toggles.normal[i] = playerStart.toggles.normal[i];\n    }\n    for (let i = load.toggles.confirm.length; i < playerStart.toggles.confirm.length; i++) {\n        load.toggles.confirm[i] = 'Safe';\n    }\n    for (let i = load.toggles.hover.length; i < playerStart.toggles.hover.length; i++) {\n        load.toggles.hover[i] = false;\n    }\n    for (let i = load.toggles.max.length; i < playerStart.toggles.max.length; i++) {\n        load.toggles.max[i] = false;\n    }\n    for (let i = load.toggles.auto.length; i < playerStart.toggles.auto.length; i++) {\n        load.toggles.auto[i] = false;\n    }\n\n    /* Restore data post JSON parse */\n    load.fileName = new TextDecoder().decode(Uint8Array.from(load.fileName, (c) => c.codePointAt(0) as number));\n    const loadouts = {} as typeof load.inflation.loadouts;\n    for (const name in load.inflation.loadouts) {\n        loadouts[new TextDecoder().decode(Uint8Array.from(name, (c) => c.codePointAt(0) as number))] = load.inflation.loadouts[name];\n    }\n    load.inflation.loadouts = loadouts;\n    load.vaporization.clouds = new Overlimit(load.vaporization.clouds);\n    load.vaporization.cloudsMax = new Overlimit(load.vaporization.cloudsMax);\n    for (let s = 1; s < load.buildings.length; s++) {\n        for (let i = 0; i < load.buildings[s].length; i++) {\n            const building = load.buildings[s][i];\n            building.current = new Overlimit(building.current);\n            building.total = new Overlimit(building.total);\n            building.trueTotal = new Overlimit(building.trueTotal);\n        }\n    }\n    Object.assign(player, load);\n\n    /* Final preparations and fixes */\n    global.trueActive = player.stage.active;\n    global.debug.historyStage = null;\n    global.debug.historyVacuum = null;\n    global.debug.timeLimit = false;\n    if (player.time.export[0] < -86400_000) { player.time.export[0] = -86400_000; }\n    if (player.time.offline < -600_000) { player.time.offline = -600_000; }\n    const { buildings } = player;\n\n    const progress = player.challenges.supervoidMax;\n    global.inflationInfo.totalSuper = progress[1] + progress[2] + progress[3] + progress[4] + progress[5];\n    global.collapseInfo.trueStars = buildings[4][1].true + buildings[4][2].true + buildings[4][3].true + buildings[4][4].true + buildings[4][5].true;\n    global.collapseInfo.pointsLoop = 0;\n    global.historyStorage.stage = player.history.stage.list;\n    global.historyStorage.vacuum = player.history.vacuum.list;\n    if (player.elements[26] >= 1 && player.stage.current < 5) { player.elements[26] = 0; }\n    if (!player.inflation.vacuum) {\n        if (buildings[2][1].current.lessOrEqual('0')) { buildings[2][0].current.max('2.7753108348135e-3'); }\n        if (player.accretion.rank === 0) { buildings[3][0].current.setValue('5.9722e27'); }\n    }\n    if (player.stage.true < 2) { player.toggles.hover[0] = false; }\n    if (player.stage.true < 4) { player.toggles.max[0] = false; }\n\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s <= 6; s++) {\n        if (s < 6) {\n            const strangeness = player.strangeness[s];\n            const strangenessMax = global.strangenessInfo[s].max;\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n                calculateMaxLevel(i, s, 'strangeness');\n                if (strangeness[i] > strangenessMax[i]) { strangeness[i] = strangenessMax[i]; }\n            }\n        }\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) { extra[i] = extraMax[i]; }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) { researches[i] = researchesMax[i]; }\n        }\n        calculateMaxLevel(0, s, 'ASR');\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n\n        getId(`stageSwitch${s}`).style.textDecoration = global.trueActive === s ? 'underline' : '';\n        global.lastUpgrade[s][0] = null;\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 0; s <= 1; s++) {\n        const tree = player.tree[s];\n        const treeMax = global.treeInfo[s].max;\n        for (let i = 0; i < playerStart.tree[s].length; i++) {\n            calculateMaxLevel(i, s, 'inflations');\n            if (tree[i] > treeMax[i]) { tree[i] = treeMax[i]; }\n        }\n    }\n    autoElementsSet();\n\n    toggleSupervoid();\n    global.lastElement = null;\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    global.lastChallenge[0] = player.challenges.active === null ? 1 : player.challenges.active;\n    global.lastInflation = [null, 0];\n\n    const logHTML = getId('logMain', true);\n    if (logHTML !== null) {\n        logHTML.innerHTML = '<li></li>';\n        global.log.lastHTML[0] = 'Start of the log';\n        global.log.lastHTML[1] = 1;\n        global.log.lastHTML[3] = true;\n    }\n    global.log.lastHTML[2] = Date.now();\n    global.log.add.length = 0;\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignBuildingsProduction.S2Levels(true);\n    assignBuildingsProduction.S4Levels(true);\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy();\n    (getId('loadoutsName') as HTMLInputElement).value = 'Auto-generate';\n    loadoutsLoadAuto();\n\n    switchTab();\n    visualTrueStageUnlocks();\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input[0], { type: 'input' });\n    (getId('stageInputTime') as HTMLInputElement).value = format(player.stage.input[1], { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input[0], { type: 'input' });\n    (getId('vaporizationInputMax') as HTMLInputElement).value = format(player.vaporization.input[1], { type: 'input' });\n    (getId('collapseInput') as HTMLInputElement).value = format(player.collapse.input[0], { type: 'input' });\n    (getId('collapseInputWait') as HTMLInputElement).value = format(player.collapse.input[1], { type: 'input' });\n    (getId('mergeInput') as HTMLInputElement).value = format(player.merge.input[0], { type: 'input' });\n    (getId('mergeInputSince') as HTMLInputElement).value = format(player.merge.input[1], { type: 'input' });\n    (getId('stageHistorySave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageHistoryShow') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    (getId('vacuumHistorySave') as HTMLInputElement).value = `${player.history.vacuum.input[0]}`;\n    (getId('vacuumHistoryShow') as HTMLInputElement).value = `${player.history.vacuum.input[1]}`;\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) { toggleConfirm(i); }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) { toggleSwap(i, 'hover'); }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) { toggleSwap(i, 'max'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    (getId('buyAnyInput') as HTMLInputElement).value = format(player.toggles.shop.input, { type: 'input' });\n    updateCollapsePointsText();\n    loadoutsRecreate();\n\n    return oldVersion;\n};\n", "import { player, global, playerStart, updatePlayer, deepClone, cloneArray } from './Player';\nimport { getUpgradeDescription, switchTab, numbersUpdate, visualUpdate, format, getChallengeDescription, getChallengeReward, stageUpdate, getStrangenessDescription, addIntoLog } from './Update';\nimport { assignBuildingsProduction, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyStrangeness, buyUpgrades, collapseResetUser, dischargeResetUser, enterExitChallengeUser, inflationRefund, loadoutsLoadAuto, mergeResetUser, rankResetUser, stageResetUser, switchStage, timeUpdate, toggleConfirm, toggleSupervoid, toggleSwap, vaporizationResetUser } from './Stage';\nimport { Alert, Prompt, setTheme, changeFontSize, changeFormat, specialHTML, replayEvent, Confirm, preventImageUnload, Notify, MDStrangenessPage, globalSave, toggleSpecial, saveGlobalSettings, openHotkeys, openVersionInfo, openLog, errorNotify } from './Special';\nimport { assignHotkeys, detectHotkey, handleTouchHotkeys } from './Hotkeys';\nimport { prepareVacuum } from './Vacuum';\nimport { checkUpgrade } from './Check';\nimport type { hotkeysList } from './Types';\n\n/** Only for static HTML, by default (false) throws error if id is null */\nexport const getId = (id: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.idMap.get(id);\n    if (test !== undefined) { return test; }\n\n    const store = document.getElementById(id);\n    if (store !== null) {\n        specialHTML.cache.idMap.set(id, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    errorNotify(`Error encountered, ID \u2012 '${id}' doesn't exist`);\n    throw new ReferenceError(`ID \u2012 '${id}' doesn't exist`);\n};\n\n/** Id collection will be auto updated by browser */\nexport const getClass = (idCollection: string): HTMLCollectionOf<HTMLElement> => {\n    const test = specialHTML.cache.classMap.get(idCollection);\n    if (test !== undefined) { return test; }\n    const store = document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n    specialHTML.cache.classMap.set(idCollection, store);\n    return store;\n};\n\n/** Only for static HTML, by default (false) throws error if query isn't found is null */\nexport const getQuery = (query: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.queryMap.get(query);\n    if (test !== undefined) { return test; }\n\n    const store = document.querySelector(query) as HTMLElement; //Can't add null type due to eslint being buggy\n    if (store !== null) {\n        specialHTML.cache.queryMap.set(query, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    errorNotify(`Error encountered, Query \u2012 '${query}' failed to find anything`);\n    throw new ReferenceError(`Query \u2012 '${query}' failed to find anything`);\n};\n\n/** Returns offline time in milliseconds */\nconst handleOfflineTime = (): number => {\n    const timeNow = Date.now();\n    const offlineTime = timeNow - player.time.updated;\n    player.time.updated = timeNow;\n    player.time.export[0] += offlineTime * 4.8 / (4.8 - player.tree[0][5]);\n    return offlineTime;\n};\nexport const simulateOffline = async(offline: number) => {\n    if (!global.offline.active) { pauseGame(); }\n    offline += player.time.offline;\n    player.time.offline = 0;\n\n    let decline = false;\n    if (offline >= 20 && !player.toggles.normal[4]) {\n        decline = !await Confirm(`Claim ${format(Math.min(offline / 1000, 43200), { type: 'time', padding: false })} worth of Offline time?\\n(Includes time spent to click any of the buttons)`, 2) &&\n            (globalSave.developerMode || !await Confirm(\"Press 'Cancel' again to confirm losing Offline time, 'Confirm' to keep it\"));\n        const extra = handleOfflineTime();\n        global.lastSave += extra;\n        offline += extra;\n    }\n    if (decline || offline < 20) {\n        if (offline < 0) { player.time.offline = offline - 20; }\n        timeUpdate(20, 20); //Just in case\n        return offlineEnd(true);\n    } else if (offline > 43200_000) { offline = 43200_000; }\n    global.offline.stageUpdate = null;\n    global.offline.speed = globalSave.intervals.offline;\n\n    const accelerate = getId('offlineAccelerate');\n    accelerate.addEventListener('click', offlineAccelerate);\n    getId('offlineCancel').addEventListener('click', offlineCancel);\n    document.body.addEventListener('keydown', offlineKey);\n    getId('offlineMain').style.display = '';\n    accelerate.focus();\n    calculateOffline(offline);\n};\nconst calculateOffline = (warpTime: number, start = warpTime) => {\n    const rate = global.offline.speed;\n    const time = rate <= 0 ? warpTime : Math.min(600 * rate, warpTime);\n    warpTime -= time;\n    try {\n        timeUpdate(Math.max(time / 600, rate), time);\n    } catch (error) {\n        offlineEnd();\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Offline calculation failed due to error:\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n    if (warpTime > 0) {\n        setTimeout(calculateOffline, 0, warpTime, start);\n        getId('offlineTick').textContent = format(rate);\n        getId('offlineRemains').textContent = format(warpTime / 1000, { type: 'time' });\n        getId('offlinePercentage').textContent = format(100 - warpTime / start * 100, { padding: true });\n        if (globalSave.SRSettings[0]) { getQuery('#offlineMain > div').ariaValueText = `${format(100 - warpTime / start * 100)}% done`; }\n    } else { offlineEnd(); }\n};\nconst offlineEnd = (early = false) => {\n    if (global.offline.stageUpdate !== null) {\n        stageUpdate(global.offline.stageUpdate);\n    } else {\n        visualUpdate();\n        numbersUpdate();\n    }\n    pauseGame(false);\n    if (early) { return; } //Just in case?\n    getId('offlineMain').style.display = 'none';\n\n    getId('offlineAccelerate').removeEventListener('click', offlineAccelerate);\n    getId('offlineCancel').removeEventListener('click', offlineCancel);\n    document.body.removeEventListener('keydown', offlineKey);\n};\nconst offlineKey = (event: KeyboardEvent) => {\n    if (event.metaKey || event.ctrlKey || event.altKey) { return; }\n    const code = event.code;\n    if (code === 'Escape') {\n        if (event.shiftKey) { return; }\n        event.preventDefault();\n        offlineCancel();\n    } else if (code === 'Enter' || code === 'Space') {\n        if (event.shiftKey || document.activeElement === getId('offlineCancel')) { return; }\n        event.preventDefault();\n        offlineAccelerate();\n    } else if (code === 'Tab') {\n        event.preventDefault();\n        const cancel = getId('offlineCancel');\n        (document.activeElement === cancel ? getId('offlineAccelerate') : cancel).focus();\n    }\n};\nconst offlineCancel = () => (global.offline.speed = 0);\nconst offlineAccelerate = () => (global.offline.speed *= 2);\n\nconst changeIntervals = () => {\n    const intervalsId = global.intervalsId;\n    const intervals = globalSave.intervals;\n    const paused = global.offline.active || global.paused;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = paused ? undefined : setInterval(timeUpdate, 20, 20);\n    intervalsId.numbers = paused ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = paused ? undefined : setInterval(visualUpdate, intervals.visual);\n    intervalsId.autoSave = paused ? undefined : setInterval(saveGame, intervals.autoSave);\n};\n/** Pauses and unpauses game based on 'pause' value */\nexport const pauseGame = (pause = true) => {\n    if (!pause && global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = '';\n        button.style.color = '';\n        getId('gamePaused').style.display = 'none';\n        global.paused = false;\n    }\n    global.hotkeys.disabled = pause;\n    global.offline.active = pause;\n    changeIntervals();\n\n    if (!pause && global.offline.cacheUpdate) {\n        global.offline.cacheUpdate = false;\n        preventImageUnload();\n    }\n};\nexport const pauseGameUser = () => {\n    if (global.offline.active) { return; }\n    if (!global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = 'forestgreen';\n        button.style.color = 'var(--green-text)';\n        getId('gamePaused').style.display = '';\n        global.paused = true;\n        changeIntervals();\n        return;\n    }\n    const offline = handleOfflineTime();\n    global.lastSave += offline;\n    void simulateOffline(offline);\n};\n\nconst saveGame = (noSaving = false): string | null => {\n    if (global.offline.active) { return null; }\n    try {\n        player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n        player.history.vacuum.list = global.historyStorage.vacuum.slice(0, player.history.vacuum.input[0]);\n\n        const clone = { ...player };\n        clone.fileName = String.fromCharCode(...new TextEncoder().encode(clone.fileName));\n        const loadouts = {} as typeof clone.inflation.loadouts;\n        for (const name in clone.inflation.loadouts) {\n            loadouts[String.fromCharCode(...new TextEncoder().encode(name))] = clone.inflation.loadouts[name];\n        }\n        clone.inflation = { ...clone.inflation };\n        clone.inflation.loadouts = loadouts;\n        const save = btoa(JSON.stringify(clone));\n        if (!noSaving) {\n            localStorage.setItem(specialHTML.localStorage.main, save);\n            clearInterval(global.intervalsId.autoSave);\n            if (!global.paused) { global.intervalsId.autoSave = setInterval(saveGame, globalSave.intervals.autoSave); }\n            getId('isSaved').textContent = 'Saved';\n            global.lastSave = 0;\n        }\n        return save;\n    } catch (error) {\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Failed to save the game\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n};\nconst loadGame = (save: string) => {\n    if (global.offline.active) { return; }\n    pauseGame();\n    try {\n        const versionCheck = updatePlayer(JSON.parse(atob(save)));\n\n        global.lastSave = handleOfflineTime();\n        Notify(`This save is ${format(global.lastSave / 1000, { type: 'time', padding: false })} old${versionCheck !== player.version ? `\\nSave file version is ${versionCheck}` : ''}`);\n        stageUpdate();\n\n        void simulateOffline(global.lastSave);\n    } catch (error) {\n        prepareVacuum(Boolean(player.inflation.vacuum)); //Fix vacuum state\n        pauseGame(false);\n\n        void Alert(`Incorrect save file format\\n${error}`);\n        throw error;\n    }\n};\nconst exportFileGame = () => {\n    if ((player.stage.true >= 7 || player.strange[0].total > 0) && (player.challenges.active === null || global.challengesInfo[player.challenges.active].resetType === 'stage')) {\n        awardExport();\n        numbersUpdate();\n    }\n\n    const save = saveGame(globalSave.developerMode);\n    if (save === null) { return; }\n    const a = document.createElement('a');\n    a.href = `data:text/plain,${save}`;\n    a.download = replaceSaveFileSpecials();\n    a.click();\n};\nconst awardExport = () => {\n    const exportReward = player.time.export;\n    if (exportReward[0] <= 0) { return; }\n    const { strange } = player;\n    const improved = player.tree[0][5] >= 1;\n    const conversion = Math.min(exportReward[0] / 86400_000, 1);\n    const quarks = (improved ? exportReward[1] : (exportReward[1] / 2.5 + 1)) * conversion;\n\n    strange[0].current += quarks;\n    strange[0].total += quarks;\n    exportReward[1] = Math.max(exportReward[1] - quarks, 0);\n    if (player.strangeness[5][8] >= 1) {\n        const strangelets = (improved ? exportReward[2] : (exportReward[2] / 2.5)) * conversion;\n        strange[1].current += strangelets;\n        strange[1].total += strangelets;\n        exportReward[2] -= strangelets;\n        assignBuildingsProduction.strange1();\n    }\n    assignBuildingsProduction.strange0();\n    exportReward[0] = 0;\n};\n\nconst saveConsole = async() => {\n    let value = await Prompt(\"Available options:\\n'Copy' \u2012 copy save file to the clipboard\\n'Delete' \u2012 delete your save file\\n'Clear' \u2012 clear all the domain data\\n'Global' \u2012 open options for global settings\\n(Adding '_' will skip options menu)\\nOr insert save file text here to load it\");\n    if (value === null || value === '') { return; }\n    let lower = value.toLowerCase();\n    if (lower === 'global') {\n        value = await Prompt(\"Available options:\\n'Reset' \u2012 reset global settings\\n'Copy' \u2012 copy global settings to the clipboard\\nOr insert global settings text here to load it\");\n        if (value === null || value === '') { return; }\n        lower = `global_${value.toLowerCase()}`;\n    }\n\n    if (lower === 'copy' || lower === 'global_copy') {\n        const save = lower === 'global_copy' ? saveGlobalSettings(true) : saveGame(true);\n        if (save !== null) {\n            try {\n                await navigator.clipboard.writeText(save);\n                Notify(`${lower === 'global_copy' ? 'Settings have' : 'Save has'} been copied to the clipboard`);\n            } catch (error) {\n                console.warn(`Full error for being unable to write to the clipboard:\\n${error}`);\n                if (await Confirm(\"Could not copy text into clipboard, press 'Confrim' to save it as a file instead\")) {\n                    const a = document.createElement('a');\n                    a.href = `data:text/plain,${save}`;\n                    a.download = `Fundamental ${lower === 'global_copy' ? 'settings' : 'save'} clipboard`;\n                    a.click();\n                }\n            }\n        }\n    } else if (lower === 'delete' || lower === 'clear' || lower === 'global_reset') {\n        pauseGame();\n        if (lower === 'delete') {\n            localStorage.removeItem(specialHTML.localStorage.main);\n        } else if (lower === 'global_reset') {\n            localStorage.removeItem(specialHTML.localStorage.settings);\n        } else { localStorage.clear(); }\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    } else if (value === 'devMode') {\n        globalSave.developerMode = !globalSave.developerMode;\n        Notify(`Developer mode is ${globalSave.developerMode ? 'now' : 'no longer'} active`);\n        saveGlobalSettings();\n    } else if (lower === 'achievement') {\n        Notify('Unlocked a new Achievement! (If there were any)');\n    } else if (lower === 'slow' || lower === 'free' || lower === 'boost') {\n        Notify('Game speed was increased by 1x');\n    } else if (lower === 'secret' || lower === 'global_secret' || lower === 'secret_secret') {\n        Notify(`Found a ${lower === 'secret_secret' ? \"ultra rare secret, but it doesn't proof anything\" : `${lower === 'global_secret' ? 'global' : 'rare'} secret, don't share it with anybody`}`);\n    } else if (lower === 'secret_proof') {\n        Notify('Found a proof that you were looking for!');\n    } else if (lower === 'quantum') {\n        getId('body').style.display = 'none';\n        document.documentElement.style.backgroundColor = 'black';\n        await Alert('Close when you are done enjoying the Quantum Vacuum');\n        document.documentElement.style.backgroundColor = '';\n        getId('body').style.display = '';\n        addIntoLog('Experienced the Quantum Vacuum');\n    } else {\n        if (value.length < 20) { return void Alert(`Input '${value}' doesn't match anything`); }\n        if (lower.includes('global_')) {\n            if (!await Confirm(\"Press 'Confirm' to load input as a new global settings, this will reload the page\\n(Input is too long to be displayed)\")) { return; }\n            localStorage.setItem(specialHTML.localStorage.settings, value[6] === '_' ? value.substring(7) : value);\n            window.location.reload();\n            void Alert('Awaiting game reload');\n        } else {\n            if (!await Confirm(\"Press 'Confirm' to load input as a save file\\n(Input is too long to be displayed)\")) { return; }\n            loadGame(value);\n        }\n    }\n};\n\nconst replaceSaveFileSpecials = (name = player.fileName): string => {\n    const date = new Date();\n    const dateIndex = name.indexOf('[date');\n    if (dateIndex >= 0) {\n        const endIndex = name.indexOf(']', dateIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = name.substring(dateIndex + 5, endIndex);\n            const special = [\n                'Y',\n                'M',\n                'D'\n            ];\n            const replaceWith = [\n                `${date.getFullYear()}`,\n                `${date.getMonth() + 1}`.padStart(2, '0'),\n                `${date.getDate()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            name = name.replace(name.substring(dateIndex, endIndex + 1), replaced);\n        }\n    }\n    const timeIndex = name.indexOf('[time');\n    if (timeIndex >= 0) {\n        const endIndex = name.indexOf(']', timeIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = name.substring(timeIndex + 5, endIndex);\n            const special = [\n                'H',\n                'M',\n                'S'\n            ];\n            const replaceWith = [\n                `${date.getHours()}`.padStart(2, '0'),\n                `${date.getMinutes()}`.padStart(2, '0'),\n                `${date.getSeconds()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            name = name.replace(name.substring(timeIndex, endIndex + 1), replaced);\n        }\n    }\n\n    const special = [\n        '[version]',\n        '[stage]',\n        '[strange]',\n        '[inflaton]',\n        '[vacuum]',\n        '[galaxy]',\n        '[universe]'\n    ];\n    const replaceWith = [\n        player.version,\n        global.stageInfo.word[player.stage.current],\n        format(player.strange[0].total, { type: 'input', padding: true }),\n        format(player.cosmon[0].total, { type: 'input', padding: 'exponent' }),\n        `${player.inflation.vacuum}`,\n        format(player.buildings[5][3].current, { type: 'input', padding: 'exponent' }),\n        format(player.buildings[6][1].current, { type: 'input', padding: 'exponent' })\n    ];\n    for (let i = 0; i < special.length; i++) {\n        name = name.replace(special[i], replaceWith[i]);\n    }\n    return `${name}.txt`;\n};\n\n/* Arguments are not done as '(...data: any) => any, ...data: any' because TS won't do type safety */\n/** If onceInstanly is true, then it will instanly call function once and then try to repeat it after delay */\nconst repeatFunction = (repeat: () => any, onceInstanly = false) => {\n    if (onceInstanly) { repeat(); }\n    if (global.intervalsId.mouseRepeat !== undefined) { return; }\n    global.intervalsId.mouseRepeat = setTimeout(() => {\n        global.intervalsId.mouseRepeat = setInterval(repeat, 50);\n    }, 200);\n};\nconst cancelRepeat = () => {\n    clearInterval(global.intervalsId.mouseRepeat);\n    global.intervalsId.mouseRepeat = undefined;\n};\n\nconst hoverUpgrades = (index: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements') => {\n    if (player.toggles.hover[0]) { buyUpgrades(index, player.stage.active, type); }\n    if (type === 'elements') {\n        global.lastElement = index;\n    } else { global.lastUpgrade[player.stage.active] = [index, type]; }\n    getUpgradeDescription(index, type);\n};\nconst hoverStrangeness = (index: number, stageIndex: number, type: 'strangeness' | 'milestones' | 'inflations') => {\n    if (type === 'inflations') {\n        global.lastInflation = [index, stageIndex];\n    } else if (type === 'strangeness') {\n        global.lastStrangeness = [index, stageIndex];\n    } else { global.lastMilestone = [index, stageIndex]; }\n    getStrangenessDescription(index, stageIndex, type);\n};\nconst hoverChallenge = (index: number) => {\n    global.lastChallenge[0] = index;\n    getChallengeDescription(index);\n    if (index === 0) { getChallengeReward(global.lastChallenge[1]); }\n    visualUpdate();\n};\nexport const changeRewardType = (state = !global.sessionToggles[0]) => {\n    global.sessionToggles[0] = state;\n    getId('rewardsType').textContent = `${state ? 'Supervoid' : 'Void'} rewards:`;\n};\n/** Creates X automatization Research or switches Stage to from which that Research auto can be created if done from wrong Stage */\nconst handleAutoResearchCreation = (index: number) => {\n    const stageIndex = player.stage.active;\n    if (checkUpgrade(index, stageIndex, 'researchesAuto')) {\n        buyUpgrades(index, stageIndex, 'researchesAuto');\n        return;\n    }\n\n    const autoStage = global.researchesAutoInfo.autoStage[index][player.researchesAuto[index]];\n    if (autoStage === undefined) { return; }\n    global.lastUpgrade[autoStage][0] = index;\n    global.lastUpgrade[autoStage][1] = 'researchesAuto';\n    switchStage(autoStage, stageIndex);\n};\n\nexport const buyAll = () => {\n    const active = player.stage.active;\n    const max = global.buildingsInfo.maxActive[active];\n    if (active === 3) {\n        for (let i = 1; i < max; i++) { buyBuilding(i, active, 0); }\n    } else {\n        for (let i = max - 1; i >= 1; i--) { buyBuilding(i, active, 0); }\n    }\n};\n\nexport const updateCollapsePointsText = () => {\n    const array = [];\n    const points = player.collapse.points;\n    for (let i = 0; i < points.length; i++) {\n        array.push(format(points[i], { type: 'input' }));\n    }\n    getId('collapsePoints').textContent = array.length > 0 ? `${array.join(', ')} or ` : '';\n};\n\nexport const loadoutsVisual = (loadout: number[]) => {\n    if (getId('loadoutsMain').dataset.open !== 'true') { return; }\n    let string = '';\n    for (let i = 0, dupes = 1; i < loadout.length; i += dupes, dupes = 1) {\n        const current = loadout[i];\n        while (loadout[i + dupes] === current) { dupes++; }\n        string += `${i > 0 ? ', ' : ''}${current + 1}${dupes > 1 ? `x${dupes}` : ''}`;\n    }\n    (getId('loadoutsEdit') as HTMLInputElement).value = string;\n};\nexport const loadoutsRecreate = () => {\n    const old = global.loadouts.buttons;\n    for (const button in old) { //Just in case to prevent memory leak\n        old[button].html.removeEventListener('click', old[button].event);\n    }\n    const newOld = {} as typeof old;\n    const listHTML = getQuery('#loadoutsList > span');\n    const load = player.inflation.loadouts;\n    listHTML.textContent = '';\n    for (const key in load) {\n        const button = document.createElement('button');\n        button.textContent = key;\n        button.className = 'selectBtn redText';\n        button.type = 'button';\n        const event = () => {\n            if (global.hotkeys.shift) { return void loadoutsLoad(key); }\n            (getId('loadoutsName') as HTMLInputElement).value = key;\n            global.loadouts.input = player.inflation.loadouts[key];\n            loadoutsVisual(player.inflation.loadouts[key]);\n        };\n        newOld[key] = {\n            html: button,\n            event: event\n        };\n        listHTML.append(button, ', ');\n        button.addEventListener('click', event);\n    }\n    global.loadouts.buttons = newOld;\n};\nconst loadoutsLoad = async(loadout = null as null | string) => {\n    const quick = loadout !== null;\n    if (!await inflationRefund(quick || global.hotkeys.shift, true)) { return; }\n\n    const array = quick ? player.inflation.loadouts[loadout] : global.loadouts.input;\n    for (let i = 0; i < array.length; i++) {\n        buyStrangeness(array[i], 0, 'inflations', true);\n    }\n    if ((getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') { loadoutsLoadAuto(); }\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Loaded ${quick ? `'${loadout}'` : 'selected'} loadout`; }\n};\n\nexport const globalSaveStart = deepClone(globalSave);\ntry { //Start everything\n    const globalSettings = localStorage.getItem(specialHTML.localStorage.settings);\n    if (globalSettings !== null) {\n        try {\n            Object.assign(globalSave, JSON.parse(atob(globalSettings)));\n            const decoder = new TextDecoder();\n            for (const key in globalSave.hotkeys) { //Restore decoded data\n                const array = globalSave.hotkeys[key as hotkeysList] as string[];\n                for (let i = 0; i < array.length; i++) {\n                    array[i] = decoder.decode(Uint8Array.from(array[i], (c) => c.codePointAt(0) as number));\n                }\n            }\n            if (!(globalSave.intervals.offline >= 20)) { globalSave.intervals.offline = 20; } //Fix NaN and undefined\n            for (let i = globalSave.toggles.length; i < globalSaveStart.toggles.length; i++) {\n                globalSave.toggles[i] = false;\n            }\n            for (let i = globalSave.MDSettings.length; i < globalSaveStart.MDSettings.length; i++) {\n                globalSave.MDSettings[i] = false;\n            }\n            for (let i = globalSave.SRSettings.length; i < globalSaveStart.SRSettings.length; i++) {\n                globalSave.SRSettings[i] = false;\n            }\n            for (const key in globalSaveStart.hotkeys) {\n                if (globalSave.hotkeys[key as hotkeysList] === undefined) {\n                    globalSave.hotkeys[key as hotkeysList] = cloneArray(globalSaveStart.hotkeys[key as hotkeysList]);\n                }\n            }\n        } catch (error) {\n            Notify('Global settings failed to parse, default ones will be used instead');\n            console.log(`(Full parse error) ${error}`);\n        }\n        (getId('decimalPoint') as HTMLInputElement).value = globalSave.format[0];\n        (getId('thousandSeparator') as HTMLInputElement).value = globalSave.format[1];\n        (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n        (getId('numbersInterval') as HTMLInputElement).value = `${globalSave.intervals.numbers}`;\n        (getId('visualInterval') as HTMLInputElement).value = `${globalSave.intervals.visual}`;\n        (getId('autoSaveInterval') as HTMLInputElement).value = `${globalSave.intervals.autoSave / 1000}`;\n        for (let i = 0; i < globalSaveStart.toggles.length; i++) { toggleSpecial(i, 'global'); }\n        if (globalSave.fontSize !== 16) { changeFontSize(true); } //Also sets breakpoints for screen size\n        if (globalSave.toggles[4]) { getId('globalStats').style.display = 'none'; }\n        if (globalSave.toggles[3]) {\n            getQuery('#footer > div:first-child').style.display = 'none';\n            const fake2 = document.createElement('div');\n            fake2.style.height = 'max(calc(6.08em + 32px), 7.92em)';\n            getId('body').prepend(getId('footer'), fake2);\n            getId('fakeFooter').after(getId('phoneHotkeys'));\n            const div = document.createElement('div');\n            div.append(getId('footerStats'), getQuery('#footerMain > nav'), getId('stageSelect'));\n            getId('footerMain').append(div, getId('subtabs'));\n            specialHTML.styleSheet.textContent += `.insideTab { margin-top: 0.6rem; }\n                #footer { top: 0; bottom: unset; }\n                #footerMain { flex-direction: row; padding: 0.6em 0; gap: 0.6em; }\n                #footerMain > div { display: flex; flex-direction: column; row-gap: 0.6em; margin: 0 0 0 auto; }\n                #footerMain > div > nav { display: flex; flex-flow: row nowrap; justify-content: center; column-gap: 0.4em; }\n                #footerStats { justify-content: center; column-gap: 0.6em; margin: 0; }\n                #stageSelect { position: unset; margin: 0; max-width: unset; }\n                #subtabs { flex-flow: column-reverse wrap; gap: 0.6em !important; align-self: end; margin: 0 auto 0 0 !important; max-height: 6.72em; }\n                #footerMain button, #phoneHotkeys button { width: min-content; min-width: 4em; height: 2em; border-radius: 10px; font-size: 0.92em; }\n                #subtabs button { width: 100%; min-width: 7em; }\n                #globalStats { bottom: 0.6em; right: calc(50vw - 6.325em); }\n                #phoneHotkeys { flex-direction: row-reverse; gap: 0.4em; justify-content: center; position: fixed; width: 100vw; max-width: unset; bottom: 0.6em; margin: 0; }\n                #fakeFooter { height: 3.04em; }`;\n        }\n        if (globalSave.toggles[2]) { document.body.classList.remove('noTextSelection'); }\n        if (globalSave.toggles[1]) {\n            const elementsArea = getId('upgradeSubtabElements');\n            elementsArea.id = 'ElementsTab';\n            getId('upgradeTab').after(elementsArea);\n            specialHTML.cache.idMap.delete('upgradeSubtabElements');\n\n            const elementsButton = getId('upgradeSubtabBtnElements');\n            elementsButton.id = 'ElementsTabBtn';\n            elementsButton.classList.add('stage4Include');\n            getId('upgradeTabBtn').after(elementsButton);\n            specialHTML.cache.idMap.delete('upgradeSubtabBtnElements');\n\n            const tabList = global.tabList;\n            tabList.ElementsSubtabs = [];\n            tabList.upgradeSubtabs.splice(tabList.upgradeSubtabs.indexOf('Elements'), 1);\n            tabList.tabs.splice(tabList.tabs.indexOf('upgrade') + 1, 0, 'Elements');\n        }\n\n        if (globalSave.MDSettings[0]) {\n            toggleSpecial(0, 'mobile');\n            (document.getElementById('MDMessage1') as HTMLElement).remove();\n            specialHTML.styleSheet.textContent += `body.noTextSelection, img, input[type = \"image\"], button, #load, a, #notifications > p { -webkit-user-select: none; -webkit-touch-callout: none; } /* Safari junk to disable image hold menu and text selection */\n                #themeArea > div > div { position: unset; display: flex; width: 15em; }\n                #themeArea > div > button { display: none; } /* More Safari junk to make windows work without focus */\n                #globalStats { ${globalSave.toggles[3] ? 'bottom: 3.04em;' : 'bottom: calc(32px + min(3.9vh, 2.4em) + 9.6744em + 3.6vw); right: calc(50vw - 6.325em);'} }`;\n            (getId('file') as HTMLInputElement).accept = ''; //Accept for unknown reason not properly supported on phones\n            global.debug.MDStrangePage = 1;\n\n            const arrowStage = document.createElement('button');\n            arrowStage.innerHTML = '<span class=\"downArrow\"></span>';\n            arrowStage.type = 'button';\n            const arrowReset1 = document.createElement('button');\n            arrowReset1.innerHTML = '<span class=\"downArrow\"></span>';\n            arrowReset1.type = 'button';\n            getId('resetStage').append(arrowStage);\n            arrowStage.addEventListener('click', () => getId('resetStage').classList.toggle('open'));\n            arrowStage.addEventListener('blur', () => getId('resetStage').classList.remove('open'));\n            getId('reset1Main').append(arrowReset1);\n            arrowReset1.addEventListener('click', () => getId('reset1Main').classList.toggle('open'));\n            arrowReset1.addEventListener('blur', () => getId('reset1Main').classList.remove('open'));\n            specialHTML.styleSheet.textContent += `#resets { row-gap: 1em; }\n                #resets > section { position: relative; flex-direction: row; justify-content: center; width: unset; padding: unset; row-gap: unset; background-color: unset; border: unset; }\n                #resets > section:not(.open) > p { display: none !important; }\n                #resets > section > button:last-of-type { display: flex; justify-content: center; align-items: center; width: 2.2em; margin-left: -2px; }\n                #resets .downArrow { width: 1.24em; height: 1.24em; }\n                #resets p { position: absolute; width: 17.4em; padding: 0.5em 0.6em 0.6em; background-color: var(--window-color); border: 2px solid var(--window-border); top: calc(100% - 2px); z-index: 2; box-sizing: content-box; }`;\n\n            const structuresButton = document.createElement('button');\n            structuresButton.textContent = 'Structures';\n            structuresButton.id = 'structuresFooter';\n            structuresButton.type = 'button';\n            const stageButton = document.createElement('button');\n            stageButton.textContent = 'Stage';\n            stageButton.id = 'stageFooter';\n            stageButton.type = 'button';\n            const reset1Button = document.createElement('button');\n            reset1Button.id = 'reset1Footer';\n            reset1Button.type = 'button';\n            const resetCollapse = document.createElement('button');\n            resetCollapse.textContent = 'Collapse';\n            resetCollapse.id = 'resetCollapseFooter';\n            resetCollapse.type = 'button';\n            resetCollapse.className = 'stage5Only';\n            const resetGalaxy = document.createElement('button');\n            resetGalaxy.textContent = 'Galaxy';\n            resetGalaxy.id = 'resetGalaxyFooter';\n            resetGalaxy.type = 'button';\n            resetGalaxy.className = 'stage4Only';\n            const resetMerge = document.createElement('button');\n            resetMerge.textContent = 'Merge';\n            resetMerge.id = 'resetMergeFooter';\n            resetMerge.type = 'button';\n            resetMerge.className = 'stage6Only';\n            const hotkeysMain = getId('phoneHotkeys');\n            hotkeysMain.prepend(resetGalaxy, reset1Button, resetMerge, resetCollapse, stageButton, structuresButton);\n            hotkeysMain.style.display = '';\n\n            const createUpgButton = document.createElement('button');\n            createUpgButton.className = 'hollowButton';\n            createUpgButton.textContent = 'Create';\n            createUpgButton.id = 'upgradeCreate';\n            createUpgButton.type = 'button';\n            getId('toggleHover0').after(createUpgButton);\n\n            const createInfButton = document.createElement('button');\n            createInfButton.className = 'hollowButton';\n            createInfButton.textContent = 'Activate';\n            createInfButton.id = 'inflationActivate';\n            createInfButton.type = 'button';\n            getId('inflationRefund').before(createInfButton);\n\n            const pages = document.createElement('div');\n            pages.id = 'strangenessPages';\n            pages.innerHTML = '<button type=\"button\" id=\"strangenessPage1\" class=\"stage1borderImage hollowButton\">1</button><button type=\"button\" id=\"strangenessPage2\" class=\"stage2borderImage hollowButton\">2</button><button type=\"button\" id=\"strangenessPage3\" class=\"stage3borderImage hollowButton\">3</button><button type=\"button\" id=\"strangenessPage4\" class=\"stage4borderImage hollowButton\">4</button><button type=\"button\" id=\"strangenessPage5\" class=\"stage5borderImage hollowButton\">5</button><button type=\"button\" id=\"strangenessCreate\" class=\"hollowButton\">Create</button>';\n            specialHTML.styleSheet.textContent += `#strangenessPages { display: flex; justify-content: center; column-gap: 0.3em; }\n                #strangenessPages button { width: 2.08em; height: calc(2.08em - 2px); border-top: none; border-radius: 0 0 4px 4px; }\n                #strangenessCreate { width: unset !important; padding: 0 0.4em; }`;\n            getId('strangenessResearch').append(pages);\n\n            const mainLi = getId('MDLi');\n            const MDToggle1 = document.createElement('li');\n            MDToggle1.innerHTML = '<label>Keep mouse events<button type=\"button\" id=\"MDToggle1\" class=\"specialToggle\">OFF</button></label>';\n            const MDToggle2 = document.createElement('li');\n            MDToggle2.innerHTML = '<label>Allow zoom<button type=\"button\" id=\"MDToggle2\" class=\"specialToggle\">OFF</button></label> (can break stuff)';\n            mainLi.after(MDToggle1, MDToggle2);\n            for (let i = 1; i < globalSaveStart.MDSettings.length; i++) {\n                getId(`MDToggle${i}`).addEventListener('click', () => {\n                    toggleSpecial(i, 'mobile', true, i === 1);\n                    if (i === 2) {\n                        (getId('viewportMeta') as HTMLMetaElement).content = `width=device-width${globalSave.MDSettings[2] ? '' : ', minimum-scale=1.0, maximum-scale=1.0'}, initial-scale=1.0`;\n                    }\n                });\n                toggleSpecial(i, 'mobile');\n            }\n            if (globalSave.MDSettings[2]) { (getId('viewportMeta') as HTMLMetaElement).content = 'width=device-width, initial-scale=1.0'; }\n\n            const refreshButton = document.createElement('button');\n            refreshButton.className = 'hollowButton';\n            refreshButton.textContent = 'Reload';\n            refreshButton.type = 'button';\n            mainLi.append(refreshButton);\n            refreshButton.addEventListener('click', async() => {\n                if (await Confirm('Reload the page?\\n(Game will not autosave)')) { window.location.reload(); }\n            });\n        }\n        if (globalSave.SRSettings[0]) {\n            toggleSpecial(0, 'reader');\n            const message = getId('SRMessage1');\n            message.textContent = 'Screen reader support is enabled, disable it if its not required';\n            message.className = 'greenText';\n            message.ariaHidden = 'true';\n            for (let i = 0; i <= 3; i++) {\n                const effectID = getQuery(`#${i === 0 ? 'solarMass' : `star${i}`}Effect > span.info`);\n                effectID.classList.remove('greenText');\n                effectID.before(' (');\n                effectID.after(')');\n            }\n            for (let i = 1; i <= 1; i++) {\n                const effectID = getQuery(`#merge${i}Effect > span.info`);\n                effectID.classList.remove('greenText');\n                effectID.before(' (');\n                effectID.after(')');\n            }\n            specialHTML.styleSheet.textContent += `#starEffects > p > span, #mergeEffects > p > span { display: unset !important; }\n                #starEffects, #mergeEffects { cursor: default; }`;\n\n            const SRMainDiv = document.createElement('article');\n            SRMainDiv.innerHTML = '<h5>Information for the Screen reader</h5><p id=\"SRTab\" aria-live=\"polite\"></p><p id=\"SRStage\" aria-live=\"polite\"></p><p id=\"SRMain\" aria-live=\"assertive\"></p>';\n            SRMainDiv.className = 'reader';\n            getId('fakeFooter').before(SRMainDiv);\n\n            const SRToggle1 = document.createElement('li');\n            SRToggle1.innerHTML = '<label>Keep tab index on created Upgrades<button type=\"button\" id=\"SRToggle1\" class=\"specialToggle\">OFF</button></label>';\n            const SRToggle2 = document.createElement('li');\n            SRToggle2.innerHTML = '<label>Keep tab index on primary buttons<button type=\"button\" id=\"SRToggle2\" class=\"specialToggle\">OFF</button></label>';\n            getId('SRLi').after(SRToggle1, SRToggle2);\n\n            const primaryIndex = () => {\n                const newTab = globalSave.SRSettings[2] ? 0 : -1;\n                getId('stageReset').tabIndex = newTab;\n                getId('reset1Button').tabIndex = newTab;\n                for (let i = 1; i < specialHTML.longestBuilding; i++) {\n                    getId(`building${i}Btn`).tabIndex = newTab;\n                    getId(`toggleBuilding${i}`).tabIndex = newTab;\n                }\n                getId('toggleBuilding0').tabIndex = newTab;\n                for (const tabText of global.tabList.tabs) {\n                    getId(`${tabText}TabBtn`).tabIndex = newTab;\n                    for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n                        getId(`${tabText}SubtabBtn${subtabText}`).tabIndex = newTab;\n                    }\n                }\n                for (let i = 1; i < global.stageInfo.word.length; i++) {\n                    getId(`stageSwitch${i}`).tabIndex = newTab;\n                }\n            };\n            for (let i = 1; i < globalSaveStart.SRSettings.length; i++) {\n                getId(`SRToggle${i}`).addEventListener('click', () => {\n                    toggleSpecial(i, 'reader', true);\n                    if (i === 2) {\n                        primaryIndex();\n                    }\n                });\n                toggleSpecial(i, 'reader');\n            }\n            if (globalSave.SRSettings[2]) { primaryIndex(); }\n        } else {\n            const index = globalSave.toggles[0] ? 0 : 1;\n            const list = [globalSave.hotkeys.tabLeft[index], globalSave.hotkeys.tabRight[index], globalSave.hotkeys.subtabDown[index], globalSave.hotkeys.subtabUp[index]];\n            for (let i = 0; i < list.length; i++) {\n                if (list[i] == null || list[i] === '') { list[i] = 'None'; }\n            }\n            getQuery('#SRMessage1 span').textContent = `${list[0]} and ${list[1]}`;\n            getQuery('#SRMessage1 span:last-of-type').textContent = `${list[2]} and ${list[3]}`;\n        }\n    }\n\n    let oldVersion = player.version;\n    const save = localStorage.getItem(specialHTML.localStorage.main);\n    if (save !== null) {\n        oldVersion = updatePlayer(JSON.parse(atob(save)));\n    } else {\n        prepareVacuum(false); //Set buildings values\n        updatePlayer(deepClone(playerStart));\n    }\n\n    /* Global */\n    assignHotkeys();\n    const MD = globalSave.MDSettings[0];\n    const SR = globalSave.SRSettings[0];\n    const PC = !MD || globalSave.MDSettings[1];\n    const htmlHTML = document.documentElement;\n    const releaseHotkey = (event: KeyboardEvent | MouseEvent) => {\n        if (global.hotkeys.shift) { global.hotkeys.shift = event.shiftKey; }\n        if (global.hotkeys.ctrl) { global.hotkeys.ctrl = event.ctrlKey; }\n        global.hotkeys.tab = false;\n    };\n    htmlHTML.addEventListener('contextmenu', (event) => {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType !== 'text' && activeType !== 'number' && !globalSave.developerMode) { event.preventDefault(); }\n    });\n    htmlHTML.addEventListener('keydown', (key) => detectHotkey(key));\n    htmlHTML.addEventListener('keyup', releaseHotkey);\n    if (PC) {\n        htmlHTML.addEventListener('mouseup', (event) => {\n            cancelRepeat();\n            releaseHotkey(event);\n        });\n        htmlHTML.addEventListener('mouseleave', cancelRepeat);\n    }\n    if (MD) {\n        htmlHTML.addEventListener('touchstart', (event) => {\n            specialHTML.mobileDevice.start = [event.touches[0].clientX, event.touches[0].clientY];\n        }, { passive: true }); //Passive just in case to prevent issues with scrolling\n        htmlHTML.addEventListener('touchend', (event) => {\n            cancelRepeat();\n            let target = event.target as HTMLElement;\n            const body = document.body;\n            const notAllowed = [getId('globalStats'), getId('footerMain')];\n            while (target != null && target !== body) {\n                if (notAllowed.includes(target)) { return; }\n                target = target.parentElement as HTMLElement;\n            }\n            handleTouchHotkeys(event);\n        });\n        htmlHTML.addEventListener('touchcancel', cancelRepeat);\n    }\n\n    for (let i = 0; i < globalSaveStart.toggles.length; i++) {\n        getId(`globalToggle${i}`).addEventListener('click', () => {\n            toggleSpecial(i, 'global', true, i === 1 || i === 3);\n            if (i === 0) {\n                assignHotkeys();\n                const index = globalSave.toggles[0] ? 0 : 1;\n                for (const key in globalSaveStart.hotkeys) {\n                    const hotkeyTest = globalSave.hotkeys[key as hotkeysList][index];\n                    getQuery(`#${key}Hotkey > button`).textContent = hotkeyTest == null || hotkeyTest === '' ? 'None' : hotkeyTest;\n                }\n            } else if (i === 2) {\n                document.body.classList[globalSave.toggles[2] ? 'remove' : 'add']('noTextSelection');\n            } else if (i === 4) {\n                getId('globalStats').style.display = !globalSave.toggles[4] ? '' : 'none';\n                if (!globalSave.toggles[4]) {\n                    visualUpdate();\n                    numbersUpdate();\n                }\n            }\n        });\n    }\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggleNormal${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) {\n        getId(`toggleConfirm${i}`).addEventListener('click', () => toggleConfirm(i, true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) {\n        getId(`toggleHover${i}`).addEventListener('click', () => toggleSwap(i, 'hover', true));\n    }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) {\n        getId(`toggleMax${i}`).addEventListener('click', () => toggleSwap(i, 'max', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => {\n            toggleSwap(i, 'auto', true);\n            if (i === 5) {\n                for (let s = 1; s <= 6; s++) { autoUpgradesSet(s); }\n            } else if (i === 6) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researches', s); }\n            } else if (i === 7) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researchesExtra', s); }\n            } else if (i === 8) {\n                autoElementsSet();\n            }\n        });\n    }\n\n    /* Stage tab */\n    {\n        const clickHoldFunc = () => {\n            if (player.inflation.vacuum || player.stage.active >= 4) { return; }\n            void stageResetUser();\n        };\n        const stageButton = getId('stageReset');\n        stageButton.addEventListener('click', stageResetUser);\n        if (PC) { stageButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            stageButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('stageFooter');\n            footerButton.addEventListener('click', stageResetUser);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        }\n    }\n    {\n        const clickFunc = () => {\n            const active = player.stage.active;\n            if (active === 1) {\n                void dischargeResetUser();\n            } else if (active === 2) {\n                void vaporizationResetUser();\n            } else if (active === 3) {\n                void rankResetUser();\n            } else if (active === 4) {\n                void collapseResetUser();\n            } else if (active === 5) {\n                void mergeResetUser();\n            }\n        };\n        const clickHoldFunc = () => {\n            if (player.stage.active !== 1 && player.stage.active !== 3) { return; }\n            clickFunc();\n        };\n        const resetButton = getId('reset1Button');\n        resetButton.addEventListener('click', clickFunc);\n        if (PC) { resetButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n        if (MD) {\n            resetButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            const footerButton = getId('reset1Footer');\n            footerButton.addEventListener('click', clickFunc);\n            footerButton.addEventListener('touchstart', () => repeatFunction(clickHoldFunc));\n            if (PC) { footerButton.addEventListener('mousedown', () => repeatFunction(clickHoldFunc)); }\n            getId('resetCollapseFooter').addEventListener('click', collapseResetUser);\n            getId('resetMergeFooter').addEventListener('click', mergeResetUser);\n\n            const clickGalaxy = () => buyBuilding(3, 5);\n            const galaxyButton = getId('resetGalaxyFooter');\n            galaxyButton.addEventListener('click', clickGalaxy);\n            galaxyButton.addEventListener('touchstart', () => repeatFunction(clickGalaxy));\n            if (PC) { galaxyButton.addEventListener('mousedown', () => repeatFunction(clickGalaxy)); }\n        }\n    }\n    const getMakeCount = () => global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : undefined;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        const button = getId(`building${i}Btn`);\n        const clickFunc = () => buyBuilding(i, player.stage.active, getMakeCount());\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n        if (MD) { button.addEventListener('touchstart', () => repeatFunction(clickFunc)); }\n    }\n    {\n        const button = getId('makeAllStructures');\n        button.addEventListener('click', buyAll);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        if (MD) {\n            button.addEventListener('touchstart', () => repeatFunction(buyAll));\n            const footer = getId('structuresFooter');\n            footer.addEventListener('click', buyAll);\n            footer.addEventListener('touchstart', () => repeatFunction(buyAll));\n            if (PC) { footer.addEventListener('mousedown', () => repeatFunction(buyAll)); }\n        }\n    }\n    getId('buyAnyInput').addEventListener('change', () => {\n        const input = getId('buyAnyInput') as HTMLInputElement;\n        player.toggles.shop.input = Math.max(Math.trunc(Number(input.value)), 0);\n        input.value = format(player.toggles.shop.input, { type: 'input' });\n        numbersUpdate();\n    });\n    getId('autoWaitInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('autoWaitInput') as HTMLInputElement;\n        let value = Math.max(Number(input.value), 1);\n        if (isNaN(value)) { value = 2; }\n        player.toggles.shop.wait[player.stage.active] = value;\n        input.value = format(value, { type: 'input' });\n    });\n\n    for (let i = 0; i < global.challengesInfo.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (!MD) { image.addEventListener('mouseover', () => hoverChallenge(i)); }\n        image.addEventListener('click', () => { global.lastChallenge[0] === i ? enterExitChallengeUser(i) : hoverChallenge(i); });\n    }\n    getId('challengeName').addEventListener('click', () => { toggleSupervoid(true); });\n    getId('rewardsType').addEventListener('click', () => {\n        changeRewardType();\n        getChallengeReward(global.lastChallenge[1]);\n    });\n    for (let s = 1; s <= 5; s++) {\n        const image = getId(`voidReward${s}`);\n        const clickFunc = () => {\n            global.lastChallenge[1] = s;\n            getChallengeReward(s);\n        };\n        image.addEventListener('mouseover', clickFunc);\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                clickFunc();\n            });\n        }\n    }\n\n    /* Upgrade tab */\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        const hoverFunc = () => hoverUpgrades(i, 'upgrades');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'upgrades');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const image = getId(`research${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researches');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researches');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const image = getId(`researchExtra${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesExtra');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesExtra');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) {\n        const image = getId(`researchAuto${i + 1}Image`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesAuto');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => handleAutoResearchCreation(i);\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    {\n        const image = getId('ASRImage');\n        const hoverFunc = () => hoverUpgrades(0, 'ASR');\n        if (PC) { image.addEventListener('mouseover', hoverFunc); }\n        if (MD) {\n            image.addEventListener('touchstart', () => repeatFunction(hoverFunc, true));\n        } else {\n            const clickFunc = () => buyUpgrades(0, player.stage.active, 'ASR');\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n    }\n    if (MD) {\n        const button = getId('upgradeCreate');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            const last = global.lastUpgrade[active];\n            if (last[0] !== null) {\n                if (last[1] === 'researchesAuto') { return handleAutoResearchCreation(last[0]); }\n                buyUpgrades(last[0], active, last[1]);\n            }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    {\n        const button = getId('element0');\n        const dblclickFunc = () => {\n            global.lastElement = 0;\n            getUpgradeDescription(0, 'elements');\n        };\n        if (SR) {\n            getId('element1').addEventListener('keydown', (event) => {\n                if (event.code !== 'Tab' || !event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) { return; }\n                const element = getId('element0');\n                element.tabIndex = 0;\n                element.ariaHidden = 'false';\n            });\n            button.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter' && !event.metaKey && !event.ctrlKey && !event.shiftKey && !event.altKey) { dblclickFunc(); }\n            });\n            button.addEventListener('blur', () => {\n                const element = getId('element0');\n                element.tabIndex = -1;\n                element.ariaHidden = 'true';\n            });\n        }\n        if (PC) { button.addEventListener('dblclick', dblclickFunc); }\n        if (MD) {\n            button.addEventListener('touchstart', () => {\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(dblclickFunc, 3000);\n            });\n        }\n    }\n    for (let i = 1; i < playerStart.elements.length; i++) {\n        const image = getId(`element${i}`);\n        const clickFunc = () => buyUpgrades(i, 4, 'elements');\n        const hoverFunc = () => hoverUpgrades(i, 'elements');\n        if (PC) {\n            image.addEventListener('mouseover', hoverFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (MD) {\n            image.addEventListener('touchstart', () => {\n                hoverFunc();\n                repeatFunction(clickFunc);\n            });\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n            });\n        }\n        if (!MD || SR) { image.addEventListener('click', clickFunc); }\n    }\n\n    /* Strangeness tab */\n    for (let i = 0; i < 2; i++) {\n        const strange = getId(`strange${i}`);\n        const openFunction = () => {\n            if (i === 0 && player.stage.true < 6 && player.milestones[4][0] < 8) { return; }\n            const html = getId(`strange${i}EffectsMain`);\n            html.dataset.open = 'true';\n            html.style.display = '';\n            numbersUpdate();\n        };\n        const closeFunc = () => {\n            const html = getId(`strange${i}EffectsMain`);\n            html.dataset.open = 'false';\n            html.style.display = 'none';\n        };\n        strange.addEventListener('click', openFunction, { capture: true }); //Clicking on window does unnessary call, before closing\n        if (PC || SR) {\n            strange.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                openFunction();\n            });\n        }\n        strange.addEventListener('blur', closeFunc);\n        getId(`strange${i}EffectsMain`).addEventListener('click', closeFunc);\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        if (MD) { getId(`strangenessPage${s}`).addEventListener('click', () => MDStrangenessPage(s)); }\n        for (let i = 0; i < playerStart.strangeness[s].length; i++) {\n            const image = getId(`strange${i + 1}Stage${s}Image`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'strangeness');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) {\n                image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n            } else {\n                const clickFunc = () => buyStrangeness(i, s, 'strangeness');\n                image.addEventListener('click', clickFunc);\n                image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n    if (MD) {\n        const button = getId('strangenessCreate');\n        const clickFunc = () => {\n            const last = global.lastStrangeness;\n            if (last[0] !== null) { buyStrangeness(last[0], last[1], 'strangeness'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n    getId('strangenessVisibility').addEventListener('click', () => {\n        global.sessionToggles[1] = !global.sessionToggles[1];\n        getId('strangenessVisibility').textContent = `Permanent ones are ${global.sessionToggles[1] ? 'shown' : 'hidden'}`;\n        visualUpdate();\n    });\n\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > img`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'milestones');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) { image.addEventListener('touchstart', hoverFunc); }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n\n    /* Inflation tab */\n    for (let s = 0; s <= 1; s++) {\n        for (let i = 0; i < playerStart.tree[s].length; i++) {\n            const image = getId(`inflation${i + 1}Tree${s + 1}Image`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'inflations');\n            if (PC) { image.addEventListener('mouseover', hoverFunc); }\n            if (MD) {\n                image.addEventListener('touchstart', () => { /*repeatFunction(*/hoverFunc(); /*, true);*/ });\n            } else {\n                const clickFunc = () => buyStrangeness(i, s, 'inflations');\n                image.addEventListener('click', clickFunc);\n                image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n    getId('inflationRefund').addEventListener('click', () => void inflationRefund(global.hotkeys.shift));\n    getId('inflationLoadouts').addEventListener('click', () => {\n        const windowHTML = getId('loadoutsMain');\n        const status = windowHTML.dataset.open !== 'true';\n        if (status) {\n            windowHTML.style.display = '';\n            windowHTML.dataset.open = 'true';\n            loadoutsVisual(global.loadouts.input);\n        } else {\n            windowHTML.style.display = 'none';\n            windowHTML.dataset.open = 'false';\n        }\n        if (globalSave.SRSettings[0]) { getId('inflationLoadouts').ariaExpanded = `${status}`; }\n    });\n    getId('loadoutsEdit').addEventListener('change', () => {\n        const first = (getId('loadoutsEdit') as HTMLInputElement).value.split(',');\n        const final = [];\n        for (let i = 0; i < first.length; i++) {\n            const index = first[i].indexOf('x');\n            let repeat = 1;\n            if (index >= 0) {\n                repeat = Number(first[i].slice(index + 1));\n                first[i] = first[i].slice(0, index);\n            }\n            const number = Math.trunc(Number(first[i]) - 1);\n            if (isNaN(number) || number < 0) { continue; }\n            if (isNaN(repeat)) { repeat = 1; }\n            if (repeat > 8) { repeat = 8; }\n            for (let r = 0; r < repeat; r++) { final.push(number); }\n        }\n        global.loadouts.input = final;\n        loadoutsVisual(final);\n    });\n    getId('loadoutsLoadAuto').addEventListener('click', () => {\n        if (!global.hotkeys.shift) { (getId('loadoutsName') as HTMLInputElement).value = 'Auto-generate'; }\n        loadoutsLoadAuto();\n    });\n    getId('loadoutsSave').addEventListener('click', () => {\n        const name = (getId('loadoutsName') as HTMLInputElement).value;\n        const check = Number(name); //Lazy check for all types of only having spacebars\n        if ((!isNaN(check) && `${check}` !== name) || name === 'Auto-generate') { return Notify(`Loadout name: '${name}' is not allowed`); }\n        player.inflation.loadouts[name] = global.loadouts.input;\n        loadoutsRecreate();\n    });\n    getId('loadoutsLoad').addEventListener('click', () => void loadoutsLoad());\n    getId('loadoutsDelete').addEventListener('click', () => {\n        const name = (getId('loadoutsName') as HTMLInputElement).value;\n        if (player.inflation.loadouts[name] === undefined) { return; }\n        delete player.inflation.loadouts[name];\n        loadoutsRecreate();\n    });\n    if (MD) {\n        const button = getId('inflationActivate');\n        const clickFunc = () => {\n            if (global.lastInflation[0] !== null) { buyStrangeness(global.lastInflation[0], global.lastInflation[1], 'inflations'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    /* Settings tab */\n    getId('vaporizationInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        player.vaporization.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[0], { type: 'input' });\n    });\n    getId('vaporizationInputMax').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('vaporizationInputMax') as HTMLInputElement;\n        player.vaporization.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.vaporization.input[1], { type: 'input' });\n    });\n    getId('collapseInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseInput') as HTMLInputElement;\n        player.collapse.input[0] = Math.max(Number(input.value), 1);\n        input.value = format(player.collapse.input[0], { type: 'input' });\n    });\n    getId('collapseInputWait').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseInputWait') as HTMLInputElement;\n        player.collapse.input[1] = Number(input.value);\n        input.value = format(player.collapse.input[1], { type: 'input' });\n    });\n    getId('collapseAddNewPoint').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('collapseAddNewPoint') as HTMLInputElement;\n        const value = Number(input.value);\n        const points = player.collapse.points;\n        if (isFinite(value)) {\n            if (value === 0) {\n                points.length = 0;\n            } else if (value > 0) {\n                if (!points.includes(value)) {\n                    points.push(value);\n                    points.sort((a, b) => a - b);\n                }\n            } else {\n                const index = points.indexOf(Math.abs(value));\n                if (index >= 0) {\n                    points.splice(index, 1);\n                    points.sort((a, b) => a - b);\n                }\n            }\n        }\n        input.value = '';\n        global.collapseInfo.pointsLoop = 0;\n        updateCollapsePointsText();\n    });\n    getId('mergeInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('mergeInput') as HTMLInputElement;\n        player.merge.input[0] = Math.max(Math.trunc(Number(input.value)), 0);\n        input.value = format(player.merge.input[0], { type: 'input' });\n    });\n    getId('mergeInputSince').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('mergeInputSince') as HTMLInputElement;\n        player.merge.input[1] = Number(input.value);\n        input.value = format(player.merge.input[1], { type: 'input' });\n    });\n    getId('stageInput').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('stageInput') as HTMLInputElement;\n        player.stage.input[0] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[0], { type: 'input' });\n    });\n    getId('stageInputTime').addEventListener('change', () => {\n        if (global.offline.active) { return; }\n        const input = getId('stageInputTime') as HTMLInputElement;\n        player.stage.input[1] = Math.max(Number(input.value), 0);\n        input.value = format(player.stage.input[1], { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', openVersionInfo);\n    getId('hotkeysButton').addEventListener('click', openHotkeys);\n    getId('save').addEventListener('click', () => { saveGame(); });\n    getId('file').addEventListener('change', async() => {\n        const id = getId('file') as HTMLInputElement;\n        try {\n            loadGame(await (id.files as FileList)[0].text());\n        } finally { id.value = ''; }\n    });\n    getId('export').addEventListener('click', exportFileGame);\n    getId('saveConsole').addEventListener('click', saveConsole);\n    getId('switchTheme0').addEventListener('click', () => setTheme(null));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    {\n        const input = getId('saveFileNameInput') as HTMLInputElement;\n        input.addEventListener('change', () => {\n            const input = getId('saveFileNameInput') as HTMLInputElement;\n            let testValue = input.value;\n            if (testValue.length < 1) {\n                testValue = playerStart.fileName;\n                input.value = testValue;\n            }\n            player.fileName = testValue;\n        });\n        const changePreview = () => {\n            const value = (getId('saveFileNameInput') as HTMLInputElement).value;\n            getId('saveFileNamePreview').textContent = replaceSaveFileSpecials(value.length < 1 ? playerStart.fileName : value);\n        };\n        input.addEventListener('input', changePreview);\n        input.addEventListener('focus', changePreview);\n    }\n    getId('offlineInterval').addEventListener('change', () => {\n        const input = getId('offlineInterval') as HTMLInputElement;\n        globalSave.intervals.offline = Math.min(Math.max(Math.trunc(Number(input.value)), 20), 6000);\n        input.value = `${globalSave.intervals.offline}`;\n        saveGlobalSettings();\n    });\n    getId('numbersInterval').addEventListener('change', () => {\n        const input = getId('numbersInterval') as HTMLInputElement;\n        globalSave.intervals.numbers = Math.min(Math.max(Math.trunc(Number(input.value)), 40), 200);\n        input.value = `${globalSave.intervals.numbers}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('change', () => {\n        const input = getId('visualInterval') as HTMLInputElement;\n        globalSave.intervals.visual = Math.min(Math.max(Math.trunc(Number(input.value)), 200), 2000);\n        input.value = `${globalSave.intervals.visual}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('change', () => {\n        const input = getId('autoSaveInterval') as HTMLInputElement;\n        globalSave.intervals.autoSave = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 1800) * 1000;\n        input.value = `${globalSave.intervals.autoSave / 1000}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('change', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('change', () => changeFormat(true));\n    getId('MDToggle0').addEventListener('click', () => toggleSpecial(0, 'mobile', true, true));\n    getId('SRToggle0').addEventListener('click', () => toggleSpecial(0, 'reader', true, true));\n    getId('pauseButton').addEventListener('click', pauseGameUser);\n    getId('showLog').addEventListener('click', openLog);\n    getId('reviewEvents').addEventListener('click', replayEvent);\n    getId('customFontSize').addEventListener('change', () => changeFontSize());\n\n    getId('stageHistorySave').addEventListener('change', () => {\n        const inputID = getId('stageHistorySave') as HTMLInputElement;\n        player.history.stage.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.stage.input[0]}`;\n    });\n    getId('stageHistoryShow').addEventListener('change', () => {\n        const input = getId('stageHistoryShow') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.stage.input[1]}`;\n        global.debug.historyStage = null;\n        visualUpdate();\n    });\n    getId('vacuumHistorySave').addEventListener('change', () => {\n        const inputID = getId('vacuumHistorySave') as HTMLInputElement;\n        player.history.vacuum.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 100);\n        inputID.value = `${player.history.vacuum.input[0]}`;\n    });\n    getId('vacuumHistoryShow').addEventListener('change', () => {\n        const input = getId('vacuumHistoryShow') as HTMLInputElement;\n        player.history.vacuum.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.vacuum.input[1]}`;\n        global.debug.historyVacuum = null;\n        visualUpdate();\n    });\n\n    /* Footer */\n    {\n        const startEvent = (event: MouseEvent | TouchEvent) => {\n            const mouse = event instanceof MouseEvent;\n            const html = getId('globalStats');\n            if (global.hotkeys.shift) {\n                toggleSpecial(4, 'global', true);\n                getId('globalStats').style.display = 'none';\n                return;\n            }\n            const bodyMain = document.documentElement;\n            const screenWidth = bodyMain.clientWidth;\n            const screenHeight = bodyMain.clientHeight;\n\n            let lastX = mouse ? event.clientX : event.changedTouches[0].clientX;\n            let lastY = mouse ? event.clientY : event.changedTouches[0].clientY;\n            const move = (event: MouseEvent | TouchEvent) => {\n                const newX = mouse ? (event as MouseEvent).clientX : (event as TouchEvent).changedTouches[0].clientX;\n                const newY = mouse ? (event as MouseEvent).clientY : (event as TouchEvent).changedTouches[0].clientY;\n                const current = html.getBoundingClientRect();\n                html.style.right = `${(1 - Math.min(Math.max(current.right + newX - lastX, current.width), screenWidth) / screenWidth) * 100}%`;\n                html.style.bottom = `${(1 - Math.min(Math.max(current.bottom + newY - lastY, current.height), screenHeight) / screenHeight) * 100}%`;\n                lastX = newX;\n                lastY = newY;\n\n                if (!mouse) { html.style.opacity = '1'; }\n            };\n            const removeEvents = mouse ? () => {\n                bodyMain.removeEventListener('mousemove', move);\n                bodyMain.removeEventListener('mouseup', removeEvents);\n                bodyMain.removeEventListener('mouseleave', removeEvents);\n                html.style.opacity = '';\n            } : () => {\n                bodyMain.removeEventListener('touchmove', move);\n                bodyMain.removeEventListener('touchend', removeEvents);\n                bodyMain.removeEventListener('touchcancel', removeEvents);\n                html.style.opacity = '1';\n            };\n            if (mouse) {\n                bodyMain.addEventListener('mousemove', move);\n                bodyMain.addEventListener('mouseup', removeEvents);\n                bodyMain.addEventListener('mouseleave', removeEvents);\n                html.style.opacity = '1';\n            } else {\n                event.preventDefault(); //To prevent scrolling, doesn't work on edge\n                bodyMain.addEventListener('touchmove', move);\n                bodyMain.addEventListener('touchend', removeEvents);\n                bodyMain.addEventListener('touchcancel', removeEvents);\n                html.style.opacity = '0.2';\n            }\n        };\n        if (PC) { getId('globalStats').addEventListener('mousedown', startEvent); }\n        if (MD) { getId('globalStats').addEventListener('touchstart', startEvent, { capture: true }); }\n    }\n    for (const tabText of global.tabList.tabs) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        for (const subtabText of global.tabList[`${tabText}Subtabs`]) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`stageSwitch${i}`).addEventListener('click', () => switchStage(i));\n    }\n\n    /* Post */\n    document.head.append(specialHTML.styleSheet);\n    stageUpdate();\n    if (globalSave.theme !== null) {\n        getId('currentTheme').textContent = global.stageInfo.word[globalSave.theme];\n        getId(`switchTheme${globalSave.theme}`).style.textDecoration = 'underline';\n        getId('switchTheme0').style.textDecoration = '';\n        setTheme();\n    }\n    if (save !== null) {\n        global.lastSave = handleOfflineTime();\n        Notify(`Welcome back, you were away for ${format(global.lastSave / 1000, { type: 'time', padding: false })}${oldVersion !== player.version ? `\\nGame has been updated from ${oldVersion} to ${player.version}` : ''}${globalSave.developerMode ?\n            `\\nGame loaded after ${format((Date.now() - playerStart.time.started) / 1000, { type: 'time', padding: false })}` : ''}\n        `);\n        void simulateOffline(global.lastSave);\n    } else {\n        pauseGame(false);\n    }\n    getId('body').style.display = '';\n    getId('loading').style.display = 'none';\n    document.title = `Fundamental ${playerStart.version}`;\n} catch (error) {\n    const stack = (error as { stack: string }).stack;\n    void Alert(`Game failed to load\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 2);\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerHTML = '<button type=\"button\" id=\"exportError\" style=\"width: 7em;\">Export save</button><button type=\"button\" id=\"deleteError\" style=\"width: 7em;\">Delete save</button>';\n    buttonDiv.style.cssText = 'display: flex; column-gap: 0.6em; margin-top: 0.4em;';\n    getId('loading').append(buttonDiv);\n    let exported = false;\n    getId('exportError').addEventListener('click', () => {\n        exported = true;\n        const save = localStorage.getItem(specialHTML.localStorage.main);\n        if (save === null) { return void Alert(\"Couldn't find any save files\"); }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = 'Fundamental post error export';\n        a.click();\n    });\n    getId('deleteError').addEventListener('click', async() => {\n        if (!exported && !await Confirm(\"It's recommended to export save file first\\nPress 'Confirm' to confirm and delete your save file\")) { return; }\n        localStorage.removeItem(specialHTML.localStorage.main);\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    });\n    throw error;\n}\n"],
  "mappings": "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",
  "names": ["checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkUpgrade", "upgrade", "type", "galaxy", "autoStage", "allowedToBeReset", "check", "milestoneGetValue", "stars", "Overlimit", "milestoneCheck", "pointer", "reset", "type", "stageIndex", "dischargeInfo", "global", "energyStage", "energyType", "buildings", "discharge", "player", "elements", "i", "playerStart", "allowedToBeReset", "autoElementsSet", "energyRefund", "s", "building", "selfmade", "energy", "assignBuildingsProduction", "upgrades", "autoUpgradesSet", "researches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "deficit", "max", "assignResetInformation", "resetStage", "update", "full", "strangeness", "buildingResetValue", "cloneArray", "calculateMaxLevel", "switchTab", "stageUpdate", "resetVacuum", "universe", "vacuum", "inflations", "assignMilestoneInformation", "start", "cloneBeforeReset", "depth", "clone", "loadFromClone", "buildingsClone", "trueStars", "prepareVacuum", "state", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "milestone1S1", "getQuery", "milestone1S2", "milestone2S2", "milestone1S4", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "specialHTML", "getId", "test", "s", "i", "newValue", "switchVacuum", "player", "income", "visualTrueStageUnlocks", "playEvent", "history", "storage", "realTime", "setActiveStage", "resetVacuum", "addIntoLog", "timeUpdate", "tick", "timeWarp", "time", "player", "auto", "autoBuy", "maxActive", "global", "activeAll", "currentTime", "passedTime", "simulateOffline", "trueSeconds", "effectsCache", "calculateEffects", "passedSeconds", "assignBuildingsProduction", "exitChallengeAuto", "stageResetCheck", "vacuum", "gainBuildings", "autoElementsBuy", "autoUpgradesBuy", "autoResearchesBuy", "i", "buyBuilding", "research", "awardMilestone", "collapseResetCheck", "mergeResetCheck", "assignResetInformation", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "energy", "goals", "strangeness", "scale", "scaling", "next", "base", "preons", "selfBoost", "effect", "level", "discharges", "laterPreons", "post", "Overlimit", "puddles", "maxTrue", "power", "rain", "drops", "rank", "mass", "delay", "stars", "logAny", "blackHoles", "elements", "massGain", "multiplier", "disc", "levels", "transfer", "max", "groups", "interstellar", "type", "tree", "challenge", "speed", "noHardcap", "visual", "structure", "preonsExcess", "preonCap", "index", "b5", "reset", "info", "totalDrops", "buildings", "upgrades", "water5", "water4", "water3", "water2", "multiplierList", "excess", "producings", "structures", "flow", "producing6", "producing5", "producing4", "producing3", "researchesS3", "upgradesS3", "dustCap", "production", "moreStars", "multiplier3", "globalMult", "multiplier2", "multiplier1", "selfmade", "current", "stageBoost", "strangeQuarks", "information", "strangelets", "energyType", "s", "energyTrue", "add", "softcap", "effectS1", "firstCall", "starCheck", "building", "requirement", "stageIndex", "howMany", "checkBuilding", "currency", "free", "multi", "special", "budget", "total", "calculateBuildingsCost", "afford", "errorNotify", "addEnergy", "numbersUpdate", "globalSave", "getId", "format", "calculateMaxLevel", "awardVoidReward", "addIntoLog", "visualTrueStageUnlocks", "playEvent", "setActiveStage", "realTime", "income", "prepareVacuum", "resetVacuum", "history", "storage", "increase", "stage", "discharge", "dischargeInfo", "firstCost", "get", "stageGet", "gainStrange", "strange", "buyUpgrades", "upgrade", "checkUpgrade", "pointer", "cost", "switchTab", "newLevels", "simplify", "minusOne", "calculateResearchCost", "autoResearchesAddOne", "update", "stageUpdate", "effective", "playerStart", "old", "buyStrangeness", "maxLevel", "newLevel", "loadoutsVisual", "assignChallengeInformation", "assignMilestoneInformation", "loadoutsLoadAuto", "array", "inflationRefund", "noConfirmation", "loadout", "cosmon", "Confirm", "challengeReset", "stageFullReset", "addAuto", "autoUpgradesSet", "which", "startCost", "a", "b", "compareFunc", "autoResearchesSet", "bought", "autoElementsSet", "toggleSwap", "number", "change", "toggles", "maxLength", "anyOn", "extraText", "toggleHTML", "toggleConfirm", "quarks", "allowedChallenge", "peakCheck", "stageResetReward", "unlimitedTime", "stageResetUser", "active", "galaxyCost", "Notify", "message", "fullReset", "resetThese", "check", "exportReward", "conversion", "strangeletsTest", "quarksTest", "resetStage", "switchStage", "visualUpdate", "dischargeReset", "dischargeResetUser", "freeGoals", "increased", "clouds", "vaporizationReset", "vaporization", "rainNow", "rainAfter", "storm", "vaporizationResetUser", "autoClouds", "rankReset", "rankResetUser", "remnants", "collapse", "collapseReset", "point", "massBoost", "calculateStar", "starProd", "restProd", "collapseResetUser", "unlockedG", "cantAffordG", "newStars", "newMass", "count", "extra", "noReset", "log", "collapseInfo", "galaxies", "merge", "mergeReset", "mergeResetUser", "checkReward", "switchVacuum", "percentage", "milestoneCheck", "maxText", "toggleSupervoid", "changeRewardType", "challenges", "progress", "needText", "totalProgress", "pointer2", "enterExitChallengeUser", "resetType", "cloneBeforeReset", "loadFromClone", "switchTab", "tab", "subtab", "oldTab", "global", "checkTab", "subtabAmount", "inside", "unlocked", "getId", "globalSave", "text", "changeSubtab", "oldSubtab", "active", "player", "setActiveStage", "stageUpdate", "visualUpdate", "numbersUpdate", "buildings", "vacuum", "challenge", "noTime", "s", "info", "maxTime", "i", "Notify", "format", "stars", "Overlimit", "buildingsInfo", "producing", "howMany", "speed", "assignBuildingsProduction", "mergeScore", "calculateEffects", "trueCountID", "lockText", "costName", "currency", "free", "multi", "e", "extra", "buy", "cost", "calculateBuildingsCost", "scaling", "dischargeInfo", "getQuery", "effectsCache", "preonCap", "rainNow", "rainAfter", "storm", "dustCap", "collapseInfo", "calculateStar", "starEffect", "starProd", "total", "restProd", "mainQuery", "widthTest", "specialHTML", "merge", "mergeInfo", "groupsCost", "assignResetInformation", "mergeEffects", "remaining", "groupsTotal", "post", "allowed", "stageResetCheck", "last", "getChallengeDescription", "getChallengeReward", "trueSubtab", "visualUpdateUpgrades", "visualUpdateResearches", "getUpgradeDescription", "interstellar", "quarksGain", "information", "stageBoost", "strangeness", "getStrangenessDescription", "time", "timeLimited", "milestoneGetValue", "exportReward", "conversion", "lastSave", "energyType", "clouds", "rain", "auto2", "mass", "star0", "star1", "star2", "gamma", "quasar", "base", "reward1", "highest", "playEvent", "updateLog", "showReset1", "ASR", "upgrades", "updateRankInfo", "nova", "setRemnants", "progress", "superposition", "rank", "planetesimal", "galaxy", "protogalaxy", "nebula", "cluster", "neutron", "columns", "universes", "show1", "show2", "show3", "bound", "voidProgress", "milestones", "strange5", "firstTwo", "MDStrangenessPage", "milestonesS4", "supervoid", "researchesAuto", "showAuto2", "showAuto4", "showAuto5", "updateStageHistory", "updateVacuumHistory", "anyUnlocked", "visualTrueStageUnlocks", "superUnlocked", "index", "type", "pointer", "stageIndex", "notEnoughUniverses", "level", "newLevels", "simplify", "minusOne", "autoStage", "stageText", "isActive", "multilineID", "container", "heightTest", "nameID", "gain", "reward", "current", "best", "arrayMax", "needText", "failText", "color", "image", "max", "upgradeHTML", "rankInfo", "name", "whiteDwarf", "src1", "quarkStar", "src2", "list", "length", "addIntoLog", "count", "add", "lastHTML", "mainHTML", "children", "prepend", "timeFormat", "li", "input", "settings", "padding", "inputAbs", "minutes", "seconds", "hours", "days", "years", "digits", "precision", "result", "formated", "resultAbs", "changed", "offline", "stageInfo", "activeAll", "element", "getClass", "stageWord", "currentID", "showAll", "extraText", "SRHotkeysInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "footerStatsHTML", "showU", "showR", "showRE", "showF", "resetMinSizes", "buildingHTML", "buildingName", "buildingType", "buildingHoverText", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "extraImgId", "body", "setTheme", "hotkeys", "hotkeyFunction", "buyAll", "event", "player", "stageResetUser", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "buyBuilding", "pauseGameUser", "toggleSwap", "mergeResetUser", "enterExitChallengeUser", "changeTab", "changeSubtab", "changeStage", "assignHotkeys", "key", "index", "globalSave", "hotkey", "SRHotkeysInfo", "removeHotkey", "remove", "test", "detectHotkey", "check", "shiftKey", "code", "global", "activeType", "specialHTML", "notification", "numberKey", "name", "functionTest", "direction", "tabs", "checkTab", "switchTab", "tab", "subtabs", "activeAll", "switchStage", "handleTouchHotkeys", "horizontal", "vertical", "horizontalAbs", "globalSave", "saveGlobalSettings", "noSaving", "hotkeysClone", "deepClone", "encoder", "key", "array", "i", "clone", "save", "specialHTML", "toggleSpecial", "number", "type", "change", "reload", "toggles", "Confirm", "pauseGame", "Alert", "toggleHTML", "getId", "preventImageUnload", "global", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "text", "setTheme", "theme", "player", "upgradeTypes", "properties", "body", "property", "priority", "resolve", "Notify", "blocker", "confirm", "oldFocus", "event", "code", "close", "cancel", "result", "yes", "Prompt", "placeholder", "input", "active", "start", "notifications", "index", "count", "timeout", "html", "pointer", "instantClose", "remove", "errorNotify", "errorCooldowns", "resetMinSizes", "full", "element", "getQuery", "mile", "changeFontSize", "initial", "size", "adjustCSSRules", "styleSheet", "styleLength", "fontRatio", "rule1", "rule2", "changeFormat", "point", "htmlInput", "value", "SRHotkeysInfo", "short", "resetName", "resetHotkey", "list", "reset1Id", "MDStrangenessPage", "stageIndex", "replayEvent", "last", "playEvent", "replay", "format", "assignResetInformation", "stageUpdate", "visualTrueStageUnlocks", "buildBigWindow", "subWindow", "mainHTML", "addCloseEvents", "sectionHTML", "firstTargetHTML", "closeButton", "windowHMTL", "openVersionInfo", "openHotkeys", "toggle", "changeHotkey", "disableFirstUp", "prevent", "finish", "detect", "prefix", "globalSaveStart", "button", "hotkeyTest", "newHotkey", "removed", "removeHotkey", "assignHotkeys", "openLog", "bottom", "visualUpdate", "Overlimit", "_Overlimit", "number", "post", "technical", "left", "right", "newValue", "numbers", "result", "i", "power", "root", "base", "replaceWith", "compare", "previous", "next", "after", "settings", "index", "digits", "check", "difference", "negative", "base10", "target", "tooSmall", "test", "type", "padding", "exponent", "inputBase", "mantissa", "formated", "globalSave", "powerCheck", "ending", "compareFunc", "player", "Overlimit", "global", "format", "calculateEffects", "effectsCache", "softcap", "newBase", "power", "effect", "logAny", "base", "now", "after", "energy", "maxLevel", "trueLevel", "penalty", "level", "index", "stageIndex", "unlocked", "improved", "extraText", "assignBuildingsProduction", "passive", "upgrades", "progress", "text", "number", "cloneArray", "array", "deepClone", "toClone", "value", "i", "check", "createArray", "length", "s", "startCost", "upgradeType", "pointer", "playerStart", "updatePlayer", "load", "prepareVacuum", "oldVersion", "e", "old", "clone", "c", "loadouts", "name", "building", "buildings", "assignMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "extra", "extraMax", "researches", "researchesMax", "autoUpgradesSet", "autoResearchesSet", "getId", "tree", "treeMax", "autoElementsSet", "toggleSupervoid", "logHTML", "assignResetInformation", "loadoutsLoadAuto", "switchTab", "visualTrueStageUnlocks", "toggleSwap", "toggleConfirm", "updateCollapsePointsText", "loadoutsRecreate", "getId", "id", "noError", "test", "specialHTML", "store", "errorNotify", "getClass", "idCollection", "getQuery", "query", "handleOfflineTime", "timeNow", "offlineTime", "player", "simulateOffline", "offline", "global", "pauseGame", "decline", "Confirm", "format", "globalSave", "extra", "timeUpdate", "offlineEnd", "accelerate", "offlineAccelerate", "offlineCancel", "offlineKey", "calculateOffline", "warpTime", "start", "rate", "time", "error", "stack", "Alert", "early", "stageUpdate", "visualUpdate", "numbersUpdate", "event", "code", "cancel", "changeIntervals", "intervalsId", "intervals", "paused", "saveGame", "pause", "button", "preventImageUnload", "pauseGameUser", "noSaving", "clone", "loadouts", "name", "save", "loadGame", "versionCheck", "updatePlayer", "Notify", "prepareVacuum", "exportFileGame", "awardExport", "a", "replaceSaveFileSpecials", "exportReward", "strange", "improved", "conversion", "quarks", "strangelets", "assignBuildingsProduction", "saveConsole", "value", "Prompt", "lower", "saveGlobalSettings", "addIntoLog", "date", "dateIndex", "endIndex", "replaced", "special", "replaceWith", "i", "timeIndex", "repeatFunction", "repeat", "onceInstanly", "cancelRepeat", "hoverUpgrades", "index", "type", "buyUpgrades", "getUpgradeDescription", "hoverStrangeness", "stageIndex", "getStrangenessDescription", "hoverChallenge", "getChallengeDescription", "getChallengeReward", "changeRewardType", "state", "handleAutoResearchCreation", "checkUpgrade", "autoStage", "switchStage", "buyAll", "active", "max", "buyBuilding", "updateCollapsePointsText", "array", "points", "loadoutsVisual", "loadout", "string", "dupes", "current", "loadoutsRecreate", "old", "newOld", "listHTML", "load", "key", "loadoutsLoad", "quick", "inflationRefund", "buyStrangeness", "loadoutsLoadAuto", "globalSaveStart", "deepClone", "globalSettings", "decoder", "c", "cloneArray", "toggleSpecial", "changeFontSize", "fake2", "div", "elementsArea", "elementsButton", "tabList", "arrowStage", "arrowReset1", "structuresButton", "stageButton", "reset1Button", "resetCollapse", "resetGalaxy", "resetMerge", "hotkeysMain", "createUpgButton", "createInfButton", "pages", "mainLi", "MDToggle1", "MDToggle2", "refreshButton", "message", "effectID", "SRMainDiv", "SRToggle1", "SRToggle2", "primaryIndex", "newTab", "tabText", "subtabText", "list", "oldVersion", "playerStart", "assignHotkeys", "MD", "SR", "PC", "htmlHTML", "releaseHotkey", "activeType", "detectHotkey", "target", "body", "notAllowed", "handleTouchHotkeys", "hotkeyTest", "toggleSwap", "toggleConfirm", "s", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "clickHoldFunc", "stageResetUser", "footerButton", "clickFunc", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "mergeResetUser", "resetButton", "clickGalaxy", "galaxyButton", "getMakeCount", "footer", "input", "image", "enterExitChallengeUser", "toggleSupervoid", "hoverFunc", "last", "dblclickFunc", "element", "openFunction", "html", "closeFunc", "MDStrangenessPage", "windowHTML", "status", "first", "final", "number", "r", "check", "b", "openVersionInfo", "openHotkeys", "setTheme", "testValue", "changePreview", "changeFormat", "openLog", "replayEvent", "inputID", "startEvent", "mouse", "bodyMain", "screenWidth", "screenHeight", "lastX", "lastY", "move", "newX", "newY", "removeEvents", "switchTab", "buttonDiv", "exported"]
}
