{
  "version": 3,
  "sources": ["Source_TS/Check.ts", "Source_TS/Reset.ts", "Source_TS/Vacuum.ts", "Source_TS/Stage.ts", "Source_TS/Update.ts", "Source_TS/Hotkeys.ts", "Source_TS/Special.ts", "Source_TS/Limit.ts", "Source_TS/Player.ts", "Source_TS/Main.ts"],
  "sourcesContent": ["import Overlimit from './Limit';\nimport { global, player } from './Player';\nimport type { gameSubtab, gameTab } from './Types';\n\nexport const checkTab = (tab: gameTab, subtab = null as null | gameSubtab): boolean => {\n    switch (tab) {\n        case 'stage':\n            if (subtab === 'Advanced') { return player.stage.true >= 6; }\n            return subtab === 'Structures' || subtab === null;\n        case 'Elements':\n        case 'upgrade':\n            if (player.stage.true < 2 && player.discharge.energyMax < 12) { return false; }\n            if (subtab === 'Elements' || tab === 'Elements') { return global.stageInfo.activeAll.includes(4) && player.upgrades[4][1] === 1; }\n            return subtab === 'Upgrades' || subtab === null;\n        case 'strangeness':\n            if (player.stage.true < 7 && player.strange[0].total <= 0 && (!player.inflation.vacuum || player.stage.current < 5)) { return false; }\n            if (subtab === 'Milestones') { return player.stage.true >= 8 || (player.stage.true === 7 && player.event) || !player.inflation.vacuum; }\n            return subtab === 'Matter' || subtab === null;\n        case 'inflation':\n            if (player.stage.true < 7) { return false; }\n            return subtab === 'Inflations' || subtab === 'Milestones' || subtab === null;\n        case 'settings':\n            if (subtab === 'History') { return player.stage.true >= 7 || player.strange[0].total > 0; }\n            return subtab === 'Settings' || subtab === 'Stats' || subtab === null;\n        default:\n            return false;\n    }\n};\n\nexport const checkBuilding = (index: number, stageIndex: number): boolean => {\n    if (index < 1 || global.buildingsInfo.maxActive[stageIndex] < index + 1) { return false; }\n\n    if (stageIndex === 1) {\n        return true;\n    } else if (stageIndex === 2) {\n        return true;\n    } else if (stageIndex === 3) {\n        if (player.accretion.rank === 0) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.upgrades[3][2] === 1; }\n        if (index === 3) { return player.upgrades[3][4] === 1; }\n        if (index === 4) { return player.upgrades[3][8] === 1; }\n        if (index === 5) { return player.upgrades[3][11] === 1; }\n    } else if (stageIndex === 4) {\n        if (player.collapse.mass < global.collapseInfo.unlockB[index] && player.researchesExtra[5][0] < 1) { return false; }\n        if (index === 1) { return true; }\n        if (index === 2) { return player.researchesExtra[4][0] >= 1; }\n        if (index === 3) { return player.researchesExtra[4][0] >= 2; }\n        if (index === 4) { return player.researchesExtra[4][0] >= 3; }\n        if (index === 5) { return player.elements[26] >= 1 && (player.challenges.active !== 0 || player.verses[0].current >= 7); }\n    } else if (stageIndex === 5) {\n        if (index === 1) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n        if (index === 2) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n        if (index === 3) { return player.researchesExtra[5][0] >= 1; }\n    } else if (stageIndex === 6) {\n        if (index === 1) { return player.upgrades[6][0] === 1 || player.researches[6][0] >= 8; }\n    }\n\n    return false;\n};\n\nexport const checkVerse = (index: number): boolean => {\n    if (index === 0) { return player.inflation.vacuum && (player.challenges.active !== 0 || global.challengesInfo[0].time >= player.time.stage); }\n    return false;\n};\n\nexport const checkUpgrade = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements' | 'strangeness' | 'inflations'): boolean => {\n    switch (type) { //Some cases are handled by max level being 0\n        case 'upgrades':\n            if (global.upgradesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 0 || upgrade === 1) { return player.inflation.vacuum; }\n                if (upgrade === 3) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 4 : 2].total.moreThan('0'); }\n                if (upgrade === 4) { return player.upgrades[1][5] === 1 || player.buildings[1][player.inflation.vacuum ? 5 : 3].total.moreThan('0'); }\n                if (upgrade > 5) {\n                    if (player.upgrades[1][5] !== 1) { return false; }\n                    if (upgrade === 10) { return player.strangeness[5][10] >= 1; }\n                }\n                return true;\n            } else if (stageIndex === 2) {\n                if (upgrade === 0) { return player.buildings[2][1].true >= 1 || player.buildings[2][2].true >= 1; }\n                if (upgrade === 7) { return player.strangeness[2][2] >= 3; }\n                if (upgrade === 8) { return player.strangeness[2][8] >= 3; }\n                return true;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankU[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 7) { return player.strangeness[3][2] >= 3; }\n                if (upgrade === 13) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 2) { return player.upgrades[4][1] === 1; }\n                if (upgrade === 3) { return player.strangeness[4][2] >= 3 && player.upgrades[4][2] === 1 && (galaxy || player.collapse.stars[1] > 0); }\n                if (upgrade === 4) { return player.strangeness[4][9] >= 1 && player.upgrades[4][3] === 1; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.verses[0].true < global.mergeInfo.unlockU[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                if (upgrade === 2) { return player.buildings[5][3].true >= 1; }\n                if (upgrade === 3) { return player.inflation.vacuum ? player.accretion.rank >= 7 : player.milestones[5][1] >= 8; }\n                return player.accretion.rank >= 7;\n            } else if (stageIndex === 6) {\n                return player.strangeness[6][3] >= 1;\n            }\n            break;\n        case 'researches':\n            if (global.researchesInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 6) { return player.strangeness[5][10] >= 2 && player.tree[1][5] >= 3; }\n                return true;\n            } else if (stageIndex === 3) {\n                return player.accretion.rank >= global.accretionInfo.rankR[upgrade] && player.accretion.rank !== 0;\n            } else if (stageIndex === 4) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (!galaxy && player.collapse.mass < global.collapseInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 3) { return (galaxy || player.collapse.stars[0] > 0) && player.strangeness[4][2] >= 1; }\n                if (upgrade === 4) { return galaxy || player.collapse.stars[2] > 0; }\n                if (upgrade === 5) { return (galaxy || player.collapse.stars[2] > 0) && player.strangeness[4][9] >= 3; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.verses[0].true < global.mergeInfo.unlockR[upgrade]) { return false; }\n                if (upgrade === 0) { return player.inflation.vacuum || player.milestones[2][0] >= 7; }\n                if (upgrade === 1) { return player.inflation.vacuum || player.milestones[3][0] >= 7; }\n                return player.accretion.rank >= 7;\n            } else if (stageIndex === 6) {\n                return player.strangeness[6][3] >= 1;\n            }\n            break;\n        case 'researchesExtra':\n            if (global.researchesExtraInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (stageIndex === 1) {\n                if (upgrade === 1) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 3) { return player.researchesExtra[1][2] >= 1; }\n                if (upgrade === 4) { return player.accretion.rank >= 6; }\n                if (upgrade === 5) { return player.accretion.rank >= 6 && player.strangeness[5][10] >= 1; }\n                return player.upgrades[1][5] === 1;\n            } else if (stageIndex === 2) {\n                if (upgrade === 3) { return player.accretion.rank >= 6; }\n                if (upgrade === 4) { return player.accretion.rank >= 7 && player.strangeness[5][10] >= 2; }\n                return player.upgrades[2][2] === 1;\n            } else if (stageIndex === 3) {\n                if (player.accretion.rank < global.accretionInfo.rankE[upgrade] || player.accretion.rank === 0) { return false; }\n                if (upgrade === 4) { return player.researchesExtra[1][2] >= 2; }\n                if (upgrade === 5) { return player.strangeness[5][10] >= 3; }\n                return true;\n            } else if (stageIndex === 4) {\n                if (upgrade === 1) { return player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1; }\n                if (upgrade === 2) { return (player.collapse.stars[0] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][2] >= 2; }\n                if (upgrade === 3) { return (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1) && player.strangeness[4][9] >= 2; }\n                return true;\n            } else if (stageIndex === 5) {\n                if (player.verses[0].true < global.mergeInfo.unlockE[upgrade]) { return false; }\n                if (upgrade === 0) { return (player.inflation.vacuum || player.milestones[4][1] >= 8) && player.strangeness[5][3] >= 1; }\n                return player.accretion.rank >= 7;\n            } else if (stageIndex === 6) {\n                return player.upgrades[6][0] === 1;\n            }\n            break;\n        case 'researchesAuto': {\n            const autoStage = global.researchesAutoInfo.autoStage[upgrade][player.researchesAuto[upgrade]]; //Can be undefined\n            if (!(autoStage === stageIndex || (autoStage === 4 && stageIndex === 5))) { return false; }\n            if (upgrade === 0) { return player.inflation.vacuum; }\n            if (upgrade === 1) { return player.inflation.vacuum && player.accretion.rank >= 6; }\n            return true;\n        }\n        case 'ASR':\n            if (stageIndex === 1) { return player.upgrades[1][5] >= 1; }\n            if (stageIndex === 3) { return player.accretion.rank >= 1; }\n            return true;\n        case 'elements':\n            if (upgrade >= 29) { return player.upgrades[4][4] === 1 && player.verses[0].true >= upgrade - 29; }\n            if (upgrade >= 27) { return player.upgrades[4][3] === 1; }\n            if (upgrade >= 11) { return player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1); }\n            if (upgrade >= 6) { return player.upgrades[4][2] === 1; }\n            return player.upgrades[4][1] === 1 && upgrade > 0;\n        case 'strangeness':\n            if (global.strangenessInfo[stageIndex].maxActive < upgrade + 1) { return false; }\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[1] >= 2; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 2; }\n                } else if (stageIndex === 2) {\n                    if (upgrade === 7) { return player.challenges.void[1] >= 3; }\n                    if (upgrade === 8) { return player.challenges.void[2] >= 1; }\n                    if (upgrade === 9) { return player.challenges.void[2] >= 2; }\n                } else if (stageIndex === 3) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 4; }\n                    if (upgrade === 9) { return player.challenges.void[5] >= 1; }\n                } else if (stageIndex === 4) {\n                    if (upgrade === 8) { return player.challenges.void[4] >= 3; }\n                    if (upgrade === 9) { return player.challenges.void[4] >= 5; }\n                } else if (stageIndex === 5) {\n                    if (upgrade === 4) { return player.challenges.void[4] >= 1; }\n                    if (upgrade === 8) { return player.challenges.void[3] >= 5; }\n                    if (upgrade === 9) { return player.challenges.void[3] >= 6; }\n                    if (upgrade === 10) { return player.challenges.void[2] >= 3; }\n                    if ([0, 1, 5, 7].includes(upgrade)) { return player.strangeness[5][3] >= 1; }\n                } else if (stageIndex === 6) {\n                    return player.challenges.void[5] >= 2;\n                }\n            } else {\n                if (player.challenges.active === 1) {\n                    if (stageIndex === 1) {\n                        if (player.milestones[1][1] >= 6) { return false; }\n                    } else if (stageIndex === 2) {\n                        if (player.milestones[2][1] >= 7) { return false; }\n                    } else if (stageIndex === 3) {\n                        if (player.milestones[3][1] >= 7) { return false; }\n                    }\n                }\n                if (((stageIndex === 1 || stageIndex === 2) && upgrade < 6) || ((stageIndex === 3 || stageIndex === 4) && upgrade < 7)) { return true; }\n                if (player.milestones[4][0] < 8) { return false; }\n                if (stageIndex === 5) {\n                    if (upgrade === 2) { return player.milestones[5][0] >= 8; }\n                    if (upgrade === 4) { return player.milestones[4][1] >= 8; }\n                    if ([0, 1, 3, 5].includes(upgrade)) { return player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7; }\n                }\n            }\n            return true;\n        case 'inflations':\n            if (stageIndex === 0) {\n                if (upgrade === 0) { return player.stage.true >= 7; }\n                if (upgrade === 3 || upgrade === 4) { return player.stage.true >= 8 || player.event; }\n                if (upgrade === 5) { return player.challenges.supervoid[3] >= 3; }\n            } else {\n                if (upgrade === 2) { return player.challenges.stability >= 1; }\n                if (upgrade === 3) { return player.challenges.supervoid[3] >= 5; }\n                if (upgrade === 4) { return player.challenges.supervoid[1] >= 1; }\n                if (upgrade === 5) { return player.challenges.supervoid[2] >= 1; }\n                if (upgrade === 6) { return player.challenges.supervoid[3] >= 4; }\n                if (upgrade === 7) { return player.challenges.supervoid[1] >= 3; }\n            }\n            return true;\n    }\n\n    return false;\n};\n\nexport const allowedToBeReset = (check: number, stageIndex: number, type: 'structures' | 'upgrades' | 'researches' | 'researchesExtra' | 'elements'): boolean => {\n    switch (type) {\n        case 'structures':\n            if (stageIndex === 1) { return check !== 1 || !player.inflation.vacuum || player.challenges.supervoid[3] < 1; }\n            if (stageIndex === 5) { return check !== 3; }\n            break;\n        case 'upgrades':\n            if (stageIndex === 1) { return check !== 5; }\n            if (stageIndex === 2) { return check !== 2; }\n            if (stageIndex === 4) { return false; }\n            if (stageIndex === 5) { return check !== 3; }\n            if (stageIndex === 6) { return check !== 0; }\n            break;\n        case 'researches':\n            if (stageIndex === 1) { return check !== 3; }\n            break;\n        case 'researchesExtra':\n            if (stageIndex === 1) { return check !== 2; }\n            if (stageIndex === 2) { return check > 2; }\n            if (stageIndex === 4) { return check !== 0; }\n            if (stageIndex === 5) { return false; }\n            if (stageIndex === 6) { return false; }\n            break;\n        case 'elements':\n            return ![26, 29, 30].includes(check);\n    }\n\n    return true;\n};\n\nexport const milestoneGetValue = (index: number, stageIndex: number): number | Overlimit => {\n    if (stageIndex === 1) {\n        if (index === 0) { return player.buildings[1][player.inflation.vacuum ? 1 : 0].total; }\n        if (index === 1) { return player.discharge.energy; }\n    } else if (stageIndex === 2) {\n        if (index === 0) { return player.inflation.vacuum ? player.vaporization.clouds : player.buildings[2][1].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.buildings[2][1].total : player.buildings[2][2].current; }\n    } else if (stageIndex === 3) {\n        if (index === 0) { return player.buildings[3][0].total; }\n        if (index === 1) { return player.buildings[3][4].true + player.buildings[3][5].true; }\n    } else if (stageIndex === 4) {\n        if (index === 0) { return player.buildings[4][0].total; }\n        if (index === 1) { return player.inflation.vacuum ? player.collapse.stars[2] : player.upgrades[4][0] === 1 ? global.collapseInfo.newMass : player.collapse.mass; }\n    } else if (stageIndex === 5) {\n        if (index === 0) {\n            if (!player.inflation.vacuum) { return global.collapseInfo.trueStars; }\n            const stars = player.buildings[4];\n            return new Overlimit(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n        }\n        if (index === 1) { return player.buildings[5][3].true; }\n    }\n    return 0;\n};\nexport const milestoneCheck = (index: number, stageIndex: number): boolean => {\n    const pointer = global.milestonesInfo[stageIndex];\n    if (player.inflation.vacuum) {\n        if (player.challenges.active !== 0 || player.tree[0][4] < 1 ||\n            global.challengesInfo[0].time < player.time[player.challenges.super ? 'vacuum' : 'stage']) { return false; }\n    } else if (pointer.scaling[index].length <= player.milestones[stageIndex][index] ||\n        (player.stage.true < 7 && player.stage.resets < 4) ||\n        (stageIndex === 5 && player.milestones[4][index] < 8) ||\n        (player.tree[0][4] < 1 && pointer.reward[index] < player.time.stage)\n    ) { return false; }\n    return pointer.need[index].lessOrEqual(milestoneGetValue(index, stageIndex));\n};\n", "import { allowedToBeReset } from './Check';\nimport { cloneArray, global, player, playerStart } from './Player';\nimport { autoResearchesSet, autoUpgradesSet, calculateMaxLevel, calculateResearchCost, autoElementsSet, assignMilestoneInformation, assignBuildingsProduction, assignResetInformation } from './Stage';\nimport { stageUpdate, switchTab } from './Update';\n\nexport const reset = (type: 'discharge' | 'vaporization' | 'rank' | 'collapse' | 'galaxy', stageIndex: number[]) => {\n    const { dischargeInfo } = global;\n    const { energyStage, energyType } = dischargeInfo;\n    const { buildings, discharge } = player;\n\n    if (type === 'galaxy') {\n        const { elements } = player;\n\n        for (let i = 1; i < playerStart.elements.length; i++) {\n            if (!allowedToBeReset(i, 4, 'elements')) { continue; }\n            elements[i] = 0;\n        }\n        autoElementsSet();\n\n        global.collapseInfo.pointsLoop = 0;\n        player.collapse.mass = 0.01235;\n        player.collapse.stars = [0, 0, 0];\n        player.merge.since = 0;\n    }\n\n    let energyRefund = 0;\n    for (const s of stageIndex) {\n        if (s !== 6) { energyRefund += energyStage[s]; }\n        energyStage[s] = 0;\n\n        const building = buildings[s];\n        building[0].current.setValue(playerStart.buildings[s][0].current);\n        building[0].total.setValue(playerStart.buildings[s][0].current);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            if (!allowedToBeReset(i, s, 'structures')) {\n                if (!player.inflation.vacuum) { continue; }\n                const selfmade = building[i as 1].true;\n                if (s === 1) {\n                    building[1].current.setValue(selfmade);\n                    building[1].total.setValue(selfmade);\n                }\n                const energy = energyType[s][i] * selfmade;\n                dischargeInfo.energyTrue += energy;\n                energyStage[s] += energy;\n                continue;\n            }\n            building[i as 1].true = 0;\n            building[i].current.setValue('0');\n            building[i].total.setValue('0');\n        }\n        if (s === 1) {\n            if (!player.inflation.vacuum) {\n                discharge.energy = 0;\n                dischargeInfo.energyTrue = 0;\n            }\n        } else if (s === 2) {\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 4) {\n            global.collapseInfo.trueStars = 0;\n            assignBuildingsProduction.S4Levels(false);\n        } else if (s === 6) {\n            player.darkness.energy = 0;\n        }\n\n        if (type === 'discharge') { continue; }\n        const upgrades = player.upgrades[s];\n\n        for (let i = 0; i < global.upgradesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'upgrades')) { continue; }\n            upgrades[i] = 0;\n        }\n        autoUpgradesSet(s);\n\n        if (type === 'vaporization') { continue; }\n        const researches = player.researches[s];\n\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researches')) { continue; }\n            researches[i] = 0;\n            calculateResearchCost(i, s, 'researches');\n        }\n        autoResearchesSet('researches', s);\n\n        if (type === 'rank') { continue; }\n        const researchesExtra = player.researchesExtra[s];\n\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            if (!allowedToBeReset(i, s, 'researchesExtra')) { continue; }\n            researchesExtra[i] = 0;\n            calculateResearchCost(i, s, 'researchesExtra');\n        }\n        autoResearchesSet('researchesExtra', s);\n    }\n\n    if (player.inflation.vacuum && (!stageIndex.includes(6) || stageIndex.length !== 1)) {\n        let deficit = dischargeInfo.energyTrue - discharge.energy - energyRefund;\n        for (let s = 2; s < 6; s++) {\n            if (stageIndex.includes(s)) { continue; }\n            const building = buildings[s];\n            for (let i = global.buildingsInfo.maxActive[s] - 1; i >= 1; i--) {\n                if (!allowedToBeReset(i, s, 'structures')) { continue; }\n\n                if (deficit > 0) {\n                    const max = Math.min(Math.ceil(deficit / energyType[s][i]), building[i as 1].true);\n                    if (max > 0) {\n                        building[i as 1].true -= max;\n                        deficit -= max * energyType[s][i];\n                        energyStage[s] -= max * energyType[s][i];\n                        if (s === 4) { global.collapseInfo.trueStars -= max; }\n                    }\n                }\n                building[i].current.setValue(building[i as 1].true);\n                building[i].total.setValue(building[i as 1].true);\n            }\n            if (s !== 5) {\n                building[0].current.setValue(playerStart.buildings[s][0].current);\n                building[0].total.setValue(playerStart.buildings[s][0].current);\n            }\n            if (s === 2) {\n                assignBuildingsProduction.S2Levels(true);\n                assignBuildingsProduction.S2FreeBuilds();\n            } else if (s === 5) {\n                assignBuildingsProduction.S4Levels(true);\n            }\n        }\n\n        discharge.energy += deficit;\n        dischargeInfo.energyTrue = discharge.energy;\n    }\n\n    assignBuildingsProduction.globalCache();\n    if (player.inflation.vacuum) { assignResetInformation.solarHardcap(); }\n};\n\n/** Default value for update is true; Default value for full is true (and null value for update), should be set to false only if Stage is permanent from false Vacuum */\nexport const resetStage = (stageIndex: number[], update = true as null | boolean, full = true) => {\n    const { strangeness } = player;\n    for (const s of stageIndex) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current.setValue('0');\n            buildings[i].total.setValue('0');\n            buildings[i].trueTotal.setValue('0');\n        }\n\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n\n        global.lastUpgrade[s][0] = null;\n        if (s === 1) {\n            player.discharge.current = 0;\n            player.discharge.energy = 0;\n            global.dischargeInfo.energyTrue = 0;\n        } else if (s === 2) {\n            player.vaporization.clouds = 0;\n            assignBuildingsProduction.S2Levels(false);\n        } else if (s === 3) {\n            if (player.inflation.vacuum) {\n                player.accretion.rank = 1;\n            } else {\n                player.accretion.rank = 0;\n                buildings[0].current.setValue('5.9722e27');\n            }\n        } else if (s === 4) {\n            global.collapseInfo.pointsLoop = 0;\n            global.collapseInfo.trueStars = 0;\n            player.collapse.mass = 0.01235;\n            player.collapse.stars = [0, 0, 0];\n            player.collapse.maxElement = 0;\n            assignBuildingsProduction.S4Levels(false);\n            player.elements = cloneArray(playerStart.elements);\n            player.elements[0] = strangeness[4][8] >= 1 ? 1 : 0;\n            autoElementsSet();\n            global.lastElement = null;\n        } else if (s === 5) {\n            player.merge.rewards = [0, 0, 0, 0];\n            player.merge.resets = 0;\n            player.merge.since = 0;\n        } else if (s === 6) {\n            player.darkness.energy = 0;\n            player.darkness.fluid = 0;\n        }\n    }\n    if (full) {\n        player.time.stage = 0;\n        player.stage.time = 0;\n        player.stage.peak = 0;\n        player.stage.peakedAt = 0;\n        global.debug.timeLimit = false;\n        player.researchesAuto[0] = strangeness[3][6];\n        player.researchesAuto[1] = strangeness[4][6];\n        player.researchesAuto[2] = player.inflation.vacuum ? (strangeness[1][4] < 1 ? 0 : strangeness[3][4] < 1 ? 1 : strangeness[2][4] < 1 ? 2 : strangeness[4][4] < 1 ? 3 : strangeness[5][9] < 1 ? 4 : 5) :\n            (strangeness[Math.min(player.stage.current, 4)][4] >= 1 ? 1 : 0);\n    } else { assignBuildingsProduction.globalCache(); }\n    assignResetInformation.trueEnergy(true);\n\n    for (const s of stageIndex) { //Less errors if do it separatly\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        if (s === 6 ? strangeness[6][3] < 2 : strangeness[s][5] < 1) { player.ASR[s] = 0; }\n\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    if (update !== null) {\n        switchTab();\n        stageUpdate(update);\n    }\n};\n\n/** Level 0 is Vacuum reset, level 1 is Universe reset, level 2 is End reset */\nexport const resetVacuum = (level = 0) => {\n    const vacuum = player.inflation.vacuum;\n    if (level >= 2) {\n        player.inflation.voidVerses = 0;\n        for (let i = 0; i < playerStart.verses.length; i++) {\n            player.verses[i].true = 0;\n            player.verses[i].current = 1 + player.inflation.ends[2] - player.inflation.ends[1];\n        }\n        for (let i = 0; i < playerStart.tree[0].length; i++) {\n            player.tree[0][i] = 0;\n            calculateResearchCost(i, 0, 'inflations');\n        }\n        const supervoid = player.challenges.supervoid;\n        const total = player.challenges.stability + supervoid[1] + supervoid[2] + supervoid[3] + supervoid[4] + supervoid[5];\n        player.cosmon[0].current = total;\n        player.cosmon[0].total = total;\n        player.inflation.resets = 0;\n        player.time.end = 0;\n    }\n    if (level >= 1) {\n        player.inflation.age = 0;\n        player.time.universe = 0;\n        if (player.challenges.stability < 2 || level > 1) {\n            player.challenges.supervoidMax = cloneArray(playerStart.challenges.supervoid);\n            global.inflationInfo.totalSuper = 0;\n        }\n    }\n    const universes = player.verses[0].current;\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingResetValue = playerStart.buildings[s][0].current;\n        buildings[0].current.setValue(buildingResetValue);\n        buildings[0].total.setValue(buildingResetValue);\n        buildings[0].trueTotal.setValue(buildingResetValue);\n        for (let i = 1; i < playerStart.buildings[s].length; i++) {\n            buildings[i as 1].true = 0;\n            buildings[i].current.setValue('0');\n            buildings[i].total.setValue('0');\n            buildings[i].trueTotal.setValue('0');\n        }\n        if (s < 6) {\n            player.milestones[s] = cloneArray(playerStart.milestones[s]);\n            for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n        }\n        player.upgrades[s] = cloneArray(playerStart.upgrades[s]);\n        player.researches[s] = cloneArray(playerStart.researches[s]);\n        player.researchesExtra[s] = cloneArray(playerStart.researchesExtra[s]);\n        player.strangeness[s] = cloneArray(playerStart.strangeness[s]);\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto[0] = universes >= 3 ? 3 : 0;\n    player.researchesAuto[1] = universes >= 3 ? 2 : 0;\n    player.researchesAuto[2] = universes >= 4 ? (vacuum ? 4 : 1) : 0;\n    player.stage.current = 1;\n    player.stage.resets = 0;\n    player.stage.peak = 0;\n    player.stage.peakedAt = 0;\n    player.stage.time = 0;\n    player.time.stage = 0;\n    player.time.vacuum = 0;\n    player.inflation.time = 0;\n    global.debug.timeLimit = false;\n    global.historyStorage.stage = [];\n    player.history.stage.best = [3.1556952e16, 0, 0];\n\n    for (let i = 0; i < playerStart.strange.length; i++) {\n        player.strange[i].current = 0;\n        player.strange[i].total = 0;\n    }\n    player.discharge.energy = 0;\n    player.discharge.energyMax = 0;\n    player.discharge.current = 0;\n    player.vaporization.clouds = 0;\n    player.vaporization.cloudsMax = 0;\n    assignBuildingsProduction.S2Levels(false);\n    if (vacuum) {\n        player.accretion.rank = 1;\n    } else {\n        player.accretion.rank = 0;\n        player.buildings[3][0].current.setValue('5.9722e27');\n    }\n    global.collapseInfo.pointsLoop = 0;\n    global.collapseInfo.trueStars = 0;\n    player.collapse.mass = 0.01235;\n    player.collapse.massMax = 0.01235;\n    player.collapse.stars = [0, 0, 0];\n    player.collapse.maxElement = 0;\n    assignBuildingsProduction.S4Levels(false);\n    player.elements = cloneArray(playerStart.elements);\n    global.lastElement = null;\n    player.merge.since = 0;\n    player.merge.resets = 0;\n    player.merge.rewards = [0, 0, 0, 0];\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    player.challenges.void = cloneArray(playerStart.challenges.void);\n    player.darkness.energy = 0;\n    player.darkness.fluid = 0;\n\n    if (universes >= 1) {\n        const start = Math.ceil(player.verses[0].true ** (vacuum ? 2 : 1.5));\n        player.strange[0].current = start;\n        player.strange[0].total = start;\n        if (vacuum) { player.strangeness[1][8] = 2; }\n    }\n    if (universes >= 2) { player.strangeness[5][4] = 1; }\n    if (universes >= 3) {\n        player.strangeness[3][6] = 3;\n        player.strangeness[4][6] = 2;\n    }\n    if (universes >= 5) { player.strangeness[5][6] = vacuum ? 1 : 2; }\n    if (universes >= 6) { player.strangeness[5][9] = 1; }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (s < 6 && universes >= 2) {\n            player.ASR[s] = global.ASRInfo.max[s];\n            player.strangeness[s][5] = 1;\n            if (universes >= 4) { player.strangeness[s][4] = 1; }\n        } else { player.ASR[s] = 0; }\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy(true);\n\n    switchTab();\n    stageUpdate();\n};\n\nexport const cloneBeforeReset = (depth: 'stage' | 'vacuum') => {\n    const { clone } = player;\n    clone.depth = depth;\n\n    clone.buildings = [[]];\n    clone.upgrades = [[]];\n    clone.researches = [[]];\n    clone.researchesExtra = [[]];\n    clone.ASR = [0];\n    if (depth !== 'stage') {\n        clone.strangeness = [];\n        clone.milestones = [];\n    }\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        clone.buildings[s] = [{\n            current: buildings[0].current.toString(),\n            total: buildings[0].total.toString(),\n            trueTotal: buildings[0].trueTotal.toString()\n        }];\n        for (let i = 1; i < buildings.length; i++) {\n            clone.buildings[s][i] = {\n                true: buildings[i as 1].true,\n                current: buildings[i].current.toString(),\n                total: buildings[i].total.toString(),\n                trueTotal: buildings[i].trueTotal.toString()\n            };\n        }\n        clone.ASR[s] = player.ASR[s];\n        clone.upgrades[s] = cloneArray(player.upgrades[s]);\n        clone.researches[s] = cloneArray(player.researches[s]);\n        clone.researchesExtra[s] = cloneArray(player.researchesExtra[s]);\n        if (depth !== 'stage') {\n            clone.strangeness[s] = cloneArray(player.strangeness[s]);\n            if (s < 6) { clone.milestones[s] = cloneArray(player.milestones[s]); }\n        }\n    }\n    clone.stage = {\n        current: player.stage.current,\n        time: player.stage.time,\n        peak: player.stage.peak,\n        peakedAt: player.stage.peakedAt\n    };\n    clone.time = {\n        stage: player.time.stage\n    };\n    clone.researchesAuto = cloneArray(player.researchesAuto);\n\n    clone.discharge = {\n        current: player.discharge.current,\n        energy: player.discharge.energy\n    };\n    clone.vaporization = {\n        clouds: player.vaporization.clouds\n    };\n    clone.accretion = {\n        rank: player.accretion.rank\n    };\n    clone.collapse = {\n        mass: player.collapse.mass,\n        stars: cloneArray(player.collapse.stars),\n        maxElement: player.collapse.maxElement\n    };\n    clone.elements = cloneArray(player.elements);\n    clone.merge = {\n        rewards: cloneArray(player.merge.rewards),\n        resets: player.merge.resets,\n        since: player.merge.since\n    };\n    clone.darkness = {\n        energy: player.darkness.energy,\n        fluid: player.darkness.fluid\n    };\n    if (depth !== 'stage') {\n        clone.strange = [];\n        for (let i = 0; i < player.strange.length; i++) {\n            clone.strange.push({\n                current: player.strange[i].current,\n                total: player.strange[i].total\n            });\n        }\n        clone.history = {\n            stage: {\n                list: global.historyStorage.stage.slice(0, player.history.stage.input[0]),\n                best: cloneArray(player.history.stage.best)\n            }\n        };\n        clone.challenges = {\n            void: cloneArray(player.challenges.void)\n        };\n        clone.inflation = {\n            vacuum: player.inflation.vacuum,\n            time: player.inflation.time\n        };\n        clone.time.vacuum = player.time.vacuum;\n        clone.stage.resets = player.stage.resets;\n        clone.discharge.energyMax = player.discharge.energyMax;\n        clone.vaporization.cloudsMax = player.vaporization.cloudsMax;\n        clone.collapse.massMax = player.collapse.massMax;\n    }\n};\n\nexport const loadFromClone = () => {\n    const { clone } = player;\n    const depth = clone.depth;\n\n    for (let s = 1; s <= 6; s++) {\n        const buildings = player.buildings[s];\n        const buildingsClone = clone.buildings[s];\n\n        buildings[0].current.setValue(buildingsClone[0].current);\n        buildings[0].total.setValue(buildingsClone[0].total);\n        buildings[0].trueTotal.setValue(buildingsClone[0].trueTotal);\n        for (let i = 1; i < buildingsClone.length; i++) {\n            buildings[i as 1].true = buildingsClone[i].true;\n            buildings[i].current.setValue(buildingsClone[i].current);\n            buildings[i].total.setValue(buildingsClone[i].total);\n            buildings[i].trueTotal.setValue(buildingsClone[i].trueTotal);\n        }\n        player.ASR[s] = clone.ASR[s];\n        player.upgrades[s] = clone.upgrades[s];\n        player.researches[s] = clone.researches[s];\n        player.researchesExtra[s] = clone.researchesExtra[s];\n        if (depth !== 'stage') {\n            player.strangeness[s] = clone.strangeness[s];\n            if (s < 6) {\n                player.milestones[s] = clone.milestones[s];\n                for (let i = 0; i < playerStart.milestones[s].length; i++) { assignMilestoneInformation(i, s); }\n            }\n        }\n        global.lastUpgrade[s][0] = null;\n    }\n    player.researchesAuto = clone.researchesAuto;\n    player.stage.current = clone.stage.current;\n    player.stage.time = clone.stage.time;\n    player.stage.peak = clone.stage.peak;\n    player.stage.peakedAt = clone.stage.peakedAt;\n    player.time.stage = clone.time.stage;\n    global.debug.timeLimit = false;\n\n    player.discharge.current = clone.discharge.current;\n    player.discharge.energy = clone.discharge.energy;\n    player.vaporization.clouds = clone.vaporization.clouds;\n    player.accretion.rank = clone.accretion.rank;\n    assignBuildingsProduction.S2Levels(true);\n    const trueStars = clone.buildings[4];\n    global.collapseInfo.trueStars = trueStars[1].true + trueStars[2].true + trueStars[3].true + trueStars[4].true + trueStars[5].true;\n    global.collapseInfo.pointsLoop = 0;\n    player.collapse.mass = clone.collapse.mass;\n    player.collapse.stars = clone.collapse.stars;\n    player.collapse.maxElement = clone.collapse.maxElement;\n    assignBuildingsProduction.S4Levels(true);\n    player.elements = clone.elements;\n    global.lastElement = null;\n    player.merge.rewards = clone.merge.rewards;\n    player.merge.resets = clone.merge.resets;\n    player.merge.since = clone.merge.since;\n    player.darkness.energy = clone.darkness.energy;\n    player.darkness.fluid = clone.darkness.fluid;\n\n    if (depth !== 'stage') {\n        for (let i = 0; i < clone.strange.length; i++) {\n            player.strange[i].current = clone.strange[i].current;\n            player.strange[i].total = clone.strange[i].total;\n        }\n        player.stage.resets = clone.stage.resets;\n        player.time.vacuum = clone.time.vacuum;\n        player.inflation.time = clone.inflation.time;\n        global.historyStorage.stage = clone.history.stage.list;\n        player.history.stage.best = clone.history.stage.best;\n        player.challenges.void = clone.challenges.void;\n        player.discharge.energyMax = clone.discharge.energyMax;\n        player.vaporization.cloudsMax = clone.vaporization.cloudsMax;\n        player.collapse.massMax = clone.collapse.massMax;\n        global.lastStrangeness = [null, 0];\n        global.lastMilestone = [null, 0];\n    }\n\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researches'); }\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'researchesExtra'); }\n        calculateMaxLevel(0, s, 'ASR');\n        if (depth !== 'stage') {\n            for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { calculateMaxLevel(i, s, 'strangeness'); }\n        }\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n    }\n    autoElementsSet();\n\n    assignResetInformation.trueEnergy();\n    if (depth !== 'stage') {\n        assignBuildingsProduction.strange1();\n        assignBuildingsProduction.strange0();\n        assignResetInformation.maxRank();\n    }\n\n    switchTab();\n    stageUpdate();\n    player.clone = {};\n};\n", "import type Overlimit from './Limit';\nimport { getId, getQuery } from './Main';\nimport { global, player, playerStart } from './Player';\nimport { resetVacuum } from './Reset';\nimport { globalSave, playEvent, specialHTML } from './Special';\nimport { setActiveStage } from './Stage';\nimport { addIntoLog, visualTrueStageUnlocks } from './Update';\n\n/** Sets playerStart, global and HTML values */\nexport const prepareVacuum = (state: boolean) => { //Must not use direct player values, globalSave is fine probably\n    const { buildings } = playerStart;\n    const { buildingsInfo, upgradesInfo, researchesInfo, researchesExtraInfo, strangenessInfo } = global;\n    const milestone1S1 = getQuery('#milestone1Stage1Div > input') as HTMLImageElement;\n    const milestone1S2 = getQuery('#milestone1Stage2Div > input') as HTMLImageElement;\n    const milestone2S2 = getQuery('#milestone2Stage2Div > input') as HTMLImageElement;\n    const milestone1S3 = getQuery('#milestone1Stage3Div > input') as HTMLImageElement;\n    const milestone2S4 = getQuery('#milestone2Stage4Div > input') as HTMLImageElement;\n    let upgrades1Cost, researches1Cost, researches1Scaling, strangeness1Cost, strangeness1Scaling, strangeness2Cost, strangeness2Scaling, strangeness3Cost, strangeness3Scaling, strangeness4Cost, strangeness4Scaling, strangeness5Cost, strangeness5Scaling;\n\n    if (state) {\n        specialHTML.footerStatsHTML[1][0] = ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'];\n        buildingsInfo.hoverText[2][0] = 'Tritium';\n        buildingsInfo.hoverText[3][0] = 'Preons hardcap';\n        buildingsInfo.type[2][0] = 'improving';\n        buildingsInfo.type[3][0] = 'delaying';\n        buildings[1][0].current.setValue('5.476e-3');\n        buildings[2][0].current.setValue('0');\n        buildings[3][0].current.setValue('9.76185667392e-36');\n        buildingsInfo.maxActive[1] = 6;\n        buildingsInfo.maxActive[2] = 7;\n        buildingsInfo.maxActive[3] = 6;\n        buildingsInfo.maxActive[4] = 6;\n        buildingsInfo.maxActive[6] = 2;\n        if (buildingsInfo.name[1][0] !== 'Mass') {\n            specialHTML.buildingHTML[1].unshift('Preon.png', 'Quarks.png');\n            buildingsInfo.name[1].unshift('Mass', 'Preons');\n            buildingsInfo.hoverText[1].unshift('Mass', 'Preons');\n        }\n        buildingsInfo.firstCost[1] = [0, 0.005476, 6, 3, 24, 3];\n\n        upgrades1Cost = [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000];\n        (upgradesInfo[2].cost[0] as Overlimit).setValue('10');\n        (upgradesInfo[5].cost[3] as Overlimit).setValue('1e160');\n        upgradesInfo[1].maxActive = 11;\n        upgradesInfo[2].maxActive = 9;\n        upgradesInfo[3].maxActive = 14;\n        upgradesInfo[4].maxActive = 5;\n        upgradesInfo[5].maxActive = 7;\n        upgradesInfo[6].maxActive = 2;\n\n        researches1Cost = [1600, 4800, 16000, 32000, 16000, 24000];\n        researches1Scaling = [400, 1200, 8000, 40000, 16000, 16000];\n        researchesInfo[2].scaling[2] = 1e2;\n        researchesInfo[2].scaling[3] = 1e3;\n        researchesInfo[2].maxActive = 7;\n        researchesInfo[4].maxActive = 6;\n        researchesInfo[5].maxActive = 5;\n        researchesInfo[6].maxActive = 4;\n\n        researchesExtraInfo[1].maxActive = 6;\n        researchesExtraInfo[2].maxActive = 5;\n        researchesExtraInfo[3].maxActive = 6;\n        researchesExtraInfo[4].maxActive = 4;\n        researchesExtraInfo[5].maxActive = 6;\n        researchesExtraInfo[6].maxActive = 4;\n\n        global.elementsInfo.cost[27].setValue('1e54');\n        global.elementsInfo.cost[28].setValue('1e58');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000, 32000, 56000];\n        global.ASRInfo.costRange[3][3] = 2.45576045e31;\n\n        strangeness1Cost = [1, 1, 1, 2, 12, 2, 24];\n        strangeness1Scaling = [2.46, 2, 6, 4, 400, 1, 1];\n        strangeness2Cost = [1, 1, 2, 2, 12, 4, 24];\n        strangeness2Scaling = [2.46, 2, 3, 4, 800, 1, 1];\n        strangeness3Cost = [1, 2, 2, 24, 12, 4, 4, 24];\n        strangeness3Scaling = [2, 3.4, 3, 1, 100, 1, 1.74, 1];\n        strangeness4Cost = [1, 2, 4, 2, 12, 6, 6, 24];\n        strangeness4Scaling = [2, 3.4, 3, 4, 1900, 1, 1.74, 1];\n        strangeness5Cost = [24, 36, 4, 24, 15600, 24, 480, 120];\n        strangeness5Scaling = [2, 2, 4, 1, 1, 1, 1, 1];\n        strangenessInfo[1].maxActive = 10;\n        strangenessInfo[2].maxActive = 10;\n        strangenessInfo[3].maxActive = 10;\n        strangenessInfo[4].maxActive = 10;\n        strangenessInfo[5].maxActive = 11;\n        strangenessInfo[6].maxActive = 6;\n\n        getId('milestonesExtra').innerHTML = 'Requires <span class=\"darkvioletText\">Void Milestones</span> Inflation to be active to enable effects';\n        milestone1S1.src = 'Used_art/Preon.png';\n        global.milestonesInfo[2].name[0] = 'Distant Clouds';\n        getQuery('#milestone1Stage2Main > span').textContent = 'Distant Clouds';\n        milestone1S2.src = 'Used_art/Clouds.png';\n        milestone1S2.alt = 'Distant Clouds';\n        milestone2S2.src = 'Used_art/Drop.png';\n        milestone1S3.alt = 'Center of gravity';\n        global.milestonesInfo[3].name[0] = 'Center of gravity';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Center of gravity';\n        milestone2S4.src = 'Used_art/Black%20hole.png';\n        getId('mergeResetText').innerHTML = '<span class=\"darkvioletText\">Merge</span> does a <span class=\"grayText\">Galaxy</span> reset, while also converting all self-made <span class=\"grayText\">Galaxies</span> into bonus ones.';\n        getQuery('#stageAutoInterstellar span').textContent = 'Stage';\n        getQuery('#stageHistory > h3').textContent = 'Stage resets:';\n\n        getId('preonCap').style.display = '';\n        getId('molesProduction').style.display = '';\n        getId('massProduction').style.display = '';\n        getId('mainCapHardS5').style.display = '';\n        getId('element0').style.display = '';\n        getId('strangePeak').style.display = '';\n        getId('stageTimeBestReset').style.display = '';\n        getId('strange1Effect1Allowed').style.display = '';\n        getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}5`).style.display = '';\n        getId('strange7Stage1').style.display = '';\n        getId('strange7Stage2').style.display = '';\n        getId('strange8Stage3').style.display = '';\n        getId('strange8Stage4').style.display = '';\n        getId('strange3Stage5').style.display = '';\n        getId('strange4Stage5').style.display = '';\n        getId('milestone1Stage5Div').style.display = '';\n        getId('milestone2Stage5Div').style.display = '';\n        getId('stageAutoInterstellar').style.display = '';\n        getId('vaporizationLimit').style.display = '';\n        getId('collapseCapped').style.display = '';\n\n        getId('strange1Effect1Disabled').style.display = 'none';\n        getQuery('#stageAutoElse > span').textContent = 'Auto disable if still capable to do more Merges';\n        getQuery('#stageAutoElse > span:last-of-type').style.display = 'none';\n    } else {\n        specialHTML.footerStatsHTML[1][0] = ['Quarks.png', 'stage1borderImage cyanText', 'Quarks'];\n        buildingsInfo.hoverText[2][0] = 'Moles';\n        buildingsInfo.hoverText[3][0] = 'Mass';\n        buildings[1][0].current.setValue('3');\n        buildings[2][0].current.setValue('2.7753108348135e-3');\n        buildings[3][0].current.setValue('1e-19');\n        if (buildingsInfo.name[1][0] === 'Mass') {\n            specialHTML.buildingHTML[1].splice(0, 2);\n            buildingsInfo.name[1].splice(0, 2);\n            buildingsInfo.hoverText[1].splice(0, 2);\n        }\n        buildingsInfo.maxActive[1] = 4;\n        buildingsInfo.maxActive[2] = 6;\n        buildingsInfo.maxActive[3] = 5;\n        buildingsInfo.maxActive[4] = 5;\n        buildingsInfo.maxActive[6] = 1;\n        buildingsInfo.firstCost[1] = [0, 3, 24, 3];\n        buildingsInfo.type[2][0] = 'producing';\n        buildingsInfo.type[3][0] = 'producing';\n        global.buildingsInfo.producing[4][5].setValue('0');\n        getQuery('#star3Effect > span.info').textContent = 'Boost to the Solar mass gain';\n\n        upgrades1Cost = [0, 0, 12, 36, 120, 240, 480, 1600, 3200, 20800];\n        (upgradesInfo[2].cost[0] as Overlimit).setValue('1e4');\n        (upgradesInfo[5].cost[3] as Overlimit).setValue('1e150');\n        upgradesInfo[1].maxActive = 10;\n        upgradesInfo[2].maxActive = 8;\n        upgradesInfo[3].maxActive = 13;\n        upgradesInfo[4].maxActive = 4;\n        upgradesInfo[5].maxActive = 4;\n        upgradesInfo[6].maxActive = 0;\n\n        researches1Cost = [600, 2000, 4000, 4000, 6000, 6000];\n        researches1Scaling = [200, 400, 2000, 12000, 4000, 6000];\n        researchesInfo[2].scaling[2] = 1e3;\n        researchesInfo[2].scaling[3] = 1e2;\n        researchesInfo[2].maxActive = 6;\n        researchesInfo[4].maxActive = 5;\n        researchesInfo[5].maxActive = 2;\n        researchesInfo[6].maxActive = 0;\n\n        researchesExtraInfo[1].maxActive = 0;\n        researchesExtraInfo[2].maxActive = 3;\n        researchesExtraInfo[3].maxActive = 4;\n        researchesExtraInfo[4].maxActive = 3;\n        researchesExtraInfo[5].maxActive = 1;\n        researchesExtraInfo[6].maxActive = 0;\n\n        global.elementsInfo.cost[27].setValue('1e52');\n        global.elementsInfo.cost[28].setValue('1e54');\n\n        global.ASRInfo.costRange[1] = [2000, 8000, 16000];\n        global.ASRInfo.costRange[3][3] = 2e30;\n\n        strangeness1Cost = [1, 1, 1, 2, 4, 2, 24];\n        strangeness1Scaling = [1, 0.5, 1, 2, 0, 0, 0];\n        strangeness2Cost = [1, 1, 2, 2, 4, 2, 24];\n        strangeness2Scaling = [0.5, 0.75, 1, 2, 0, 0, 0];\n        strangeness3Cost = [1, 1, 2, 6, 4, 2, 4, 24];\n        strangeness3Scaling = [0.75, 1.5, 1, 0, 0, 0, 2.5, 0];\n        strangeness4Cost = [1, 1, 3, 2, 4, 2, 4, 24];\n        strangeness4Scaling = [1, 2, 1.5, 2, 0, 0, 68, 0];\n        strangeness5Cost = [20, 24, 240, 24, 6000, 24, 20, 120];\n        strangeness5Scaling = [20, 24, 240, 0, 0, 0, 220, 0];\n        strangenessInfo[1].maxActive = 7;\n        strangenessInfo[2].maxActive = 7;\n        strangenessInfo[3].maxActive = 8;\n        strangenessInfo[4].maxActive = 8;\n        strangenessInfo[5].maxActive = 10;\n        strangenessInfo[6].maxActive = 0;\n\n        getId('milestonesExtra').innerHTML = 'Completing any tier will award 1 <span class=\"greenText\">Strange quark</span>';\n        milestone1S1.src = 'Used_art/Quarks.png';\n        global.milestonesInfo[2].name[0] = 'A Nebula of Drops';\n        getQuery('#milestone1Stage2Main > span').textContent = 'A Nebula of Drops';\n        milestone1S2.src = 'Used_art/Drop.png';\n        milestone1S2.alt = 'A Nebula of Drops';\n        milestone2S2.src = 'Used_art/Puddle.png';\n        milestone1S3.alt = 'Cluster of Mass';\n        global.milestonesInfo[3].name[0] = 'Cluster of Mass';\n        getQuery('#milestone1Stage3Main > span').textContent = 'Cluster of Mass';\n        milestone2S4.src = 'Used_art/Main_sequence%20mass.png';\n        getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together, which will result in <span class=\"orchidText\">Vacuum</span> decaying into its true state.';\n        getQuery('#stageAutoInterstellar span').textContent = 'Interstellar Stage';\n        getQuery('#stageHistory > h3').textContent = 'Interstellar Stage resets:';\n\n        getId('strange8Stage5').style.display = '';\n        getId('milestonesProgressArea').style.display = '';\n        getQuery('#stageAutoElse > span').textContent = 'Reset pre-Interstellar Stages only if all Milestones are maxed';\n        getQuery('#stageAutoElse > span:last-of-type').style.display = '';\n        getId('rankStat0').style.display = '';\n\n        getId('preonCap').style.display = 'none';\n        getId('molesProduction').style.display = 'none';\n        getId('massProduction').style.display = 'none';\n        getId('dustCap').style.display = 'none';\n        getId('submersionBoost').style.display = 'none';\n        getId('mainCap').style.display = 'none';\n        getId('mainCapHardS5').style.display = 'none';\n        getId('mergeBoost').style.display = 'none';\n        getId('mergeEffects').style.display = 'none';\n        getId('mergeBoostTotal').style.display = 'none';\n        getId('darkEnergySpent').style.display = 'none';\n        getId('nucleationBoostTotal').style.display = 'none';\n        getId('researchAuto1').style.display = 'none';\n        getId('researchAuto2').style.display = 'none';\n        getId('vaporizationLimit').style.display = 'none';\n        getId('collapseCapped').style.display = 'none';\n        getId('element0').style.display = 'none';\n        getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}6`).style.display = 'none';\n        for (let s = 1; s <= 5; s++) {\n            for (let i = strangenessInfo[s].maxActive + 1; i <= strangenessInfo[s].firstCost.length; i++) {\n                getId(`strange${i}Stage${s}`).style.display = 'none';\n            }\n        }\n        getId('strange9Stage5').style.display = 'none';\n        getId('toggleAuto9Info').style.display = 'none';\n        getId('energyGainStage1Build1').style.display = 'none';\n        getId('energyGainStage1Build2').style.display = 'none';\n        for (let s = 2; s <= 5; s++) {\n            getId(`energyGainStage${s}`).style.display = 'none';\n        }\n        getId('mergeResets').style.display = 'none';\n        getId('mergeScore').style.display = 'none';\n        getId('mergeResetsS6').style.display = 'none';\n    }\n\n    if (global.collapseInfo.supervoid) {\n        (upgradesInfo[5].cost[3] as Overlimit).multiply('1e2');\n        global.elementsInfo.cost[27].multiply('1e2');\n        global.elementsInfo.cost[28].multiply('1e2');\n    }\n    upgradesInfo[1].cost.splice(0, upgrades1Cost.length, ...upgrades1Cost);\n    researchesInfo[1].firstCost.splice(0, researches1Cost.length, ...researches1Cost);\n    researchesInfo[1].scaling.splice(0, researches1Scaling.length, ...researches1Scaling);\n    strangenessInfo[1].firstCost.splice(0, strangeness1Cost.length, ...strangeness1Cost);\n    strangenessInfo[1].scaling.splice(0, strangeness1Scaling.length, ...strangeness1Scaling);\n    strangenessInfo[2].firstCost.splice(0, strangeness2Cost.length, ...strangeness2Cost);\n    strangenessInfo[2].scaling.splice(0, strangeness2Scaling.length, ...strangeness2Scaling);\n    strangenessInfo[3].firstCost.splice(0, strangeness3Cost.length, ...strangeness3Cost);\n    strangenessInfo[3].scaling.splice(0, strangeness3Scaling.length, ...strangeness3Scaling);\n    strangenessInfo[4].firstCost.splice(0, strangeness4Cost.length, ...strangeness4Cost);\n    strangenessInfo[4].scaling.splice(0, strangeness4Scaling.length, ...strangeness4Scaling);\n    strangenessInfo[5].firstCost.splice(0, strangeness5Cost.length, ...strangeness5Cost);\n    strangenessInfo[5].scaling.splice(0, strangeness5Scaling.length, ...strangeness5Scaling);\n    for (let s = 1; s <= 3; s++) {\n        const newValue = buildings[s][0].current;\n        buildings[s][0].total.setValue(newValue);\n        buildings[s][0].trueTotal.setValue(newValue);\n    }\n};\n\nexport const switchVacuum = () => {\n    if (player.inflation.vacuum) { return; }\n    if (player.stage.true >= 7) {\n        player.cosmon[0].current++;\n        player.cosmon[0].total++;\n    } else {\n        player.stage.true = 6;\n        player.collapse.show = 0;\n        player.event = false;\n        visualTrueStageUnlocks();\n        playEvent(6);\n    }\n\n    if (player.stage.active < 6) { setActiveStage(1); }\n    player.inflation.vacuum = true;\n    player.inflation.resets++;\n    player.time.export[1] = 0;\n    player.time.export[2] = 0;\n    prepareVacuum(true);\n    resetVacuum();\n    addIntoLog('Vacuum reset');\n};\n", "import { checkBuilding, checkUpgrade, checkVerse, milestoneCheck } from './Check';\nimport Overlimit, { compareFunc } from './Limit';\nimport { changeRewardType, getId, loadoutsVisual, simulateOffline } from './Main';\nimport { effectsCache, global, logAny, player, playerStart } from './Player';\nimport { cloneBeforeReset, loadFromClone, reset, resetStage, resetVacuum } from './Reset';\nimport { Confirm, Notify, errorNotify, globalSave, playEvent, specialHTML } from './Special';\nimport type { calculateEffectsType } from './Types';\nimport { addIntoLog, format, numbersUpdate, stageUpdate, switchTab, visualTrueStageUnlocks, visualUpdate } from './Update';\nimport { prepareVacuum, switchVacuum } from './Vacuum';\n\n/** Normal game tick, everything calculated in milliseconds */\nexport const timeUpdate = (tick: number, timeWarp: null | number = null) => {\n    const { time } = player;\n    if (timeWarp !== null) {\n        timeWarp -= tick;\n    } else {\n        const currentTime = Date.now();\n        const passedTime = currentTime - time.updated;\n        time.updated = currentTime;\n        time.export[0] += passedTime * calculateEffects.T0Inflation5();\n        global.lastSave += passedTime;\n        timeWarp = time.offline + passedTime;\n        if (timeWarp < tick) {\n            time.offline = timeWarp;\n            return;\n        } else { time.offline = 0; } //Must be before potential warp\n        if (timeWarp > tick * 600) { return void simulateOffline(timeWarp); }\n        timeWarp -= tick;\n        time.online += tick;\n    }\n    const { auto, buildings: autoBuy } = player.toggles;\n    const { maxActive } = global.buildingsInfo;\n    const activeAll = global.stageInfo.activeAll;\n    let vacuum = player.inflation.vacuum;\n\n    const trueSeconds = tick / 1000;\n    if (vacuum || activeAll.includes(4)) { player.merge.since += trueSeconds; }\n    time.stage += trueSeconds;\n    time.vacuum += trueSeconds;\n    time.universe += trueSeconds;\n    time.end += trueSeconds;\n\n    effectsCache.T0Inflation3 = calculateEffects.T0Inflation3() ** player.tree[0][3];\n    const passedSeconds = trueSeconds * assignBuildingsProduction.globalSpeed();\n    player.stage.time += passedSeconds;\n    player.inflation.time += passedSeconds;\n    player.inflation.age += passedSeconds;\n\n    if (player.toggles.normal[3] && exitChallengeAuto()) { vacuum = player.inflation.vacuum; }\n    if (vacuum) {\n        stageResetCheck(5, trueSeconds);\n    } else {\n        if (auto[9] && activeAll.includes(5) && mergeResetCheck(true)) { vacuum = player.inflation.vacuum; }\n        if (activeAll.includes(4)) { stageResetCheck(5, trueSeconds); }\n        if (auto[0]) {\n            if (activeAll.includes(3)) { stageResetCheck(3, 0); }\n            if (activeAll.includes(2)) { stageResetCheck(2, 0); }\n            if (activeAll.includes(1)) { stageResetCheck(1, 0); }\n        }\n        if (player.challenges.active === 1 && time.stage > 600 && stageResetCheck(player.stage.current)) {\n            stageResetReward(player.stage.current);\n            Notify('Stage reset has been forced');\n        }\n    }\n\n    assignBuildingsProduction.globalCache();\n    if (activeAll.includes(6)) {\n        if (player.strangeness[6][3] >= 3) {\n            if (auto[5]) { autoUpgradesBuy(6); }\n            if (auto[6]) { autoResearchesBuy('researches', 6); }\n        }\n        if (player.strangeness[6][3] >= 4 && auto[7]) { autoResearchesBuy('researchesExtra', 6); }\n        //if (auto[10]) { nucleationResetCheck(true); }\n        assignBuildingsProduction.stage6Cache();\n        if (player.strangeness[1][8] >= 3) {\n            assignBuildingsProduction.verse0();\n            global.inflationInfo.disableAuto = player.buildings[6][0].current.moreOrEqual(calculateEffects.darkHardcap());\n        } else { global.inflationInfo.disableAuto = false; }\n        for (let i = maxActive[6] - 1; i >= 1; i--) {\n            if (autoBuy[6][i]) { buyBuilding(i, 6, 0, true); }\n        }\n        gainBuildings(0, 6, passedSeconds); //Dark matter\n    }\n    if (activeAll.includes(4)) {\n        if (auto[8]) { autoElementsBuy(); }\n        if (activeAll.includes(5)) {\n            if (player.strangeness[5][3] >= 1 || player.verses[0].current >= 3) {\n                if (auto[5]) { autoUpgradesBuy(5); }\n                if (auto[6]) { autoResearchesBuy('researches', 5); }\n                if (auto[7]) { autoResearchesBuy('researchesExtra', 5); }\n            }\n            for (let i = maxActive[5] - 1; i >= 1; i--) {\n                if (autoBuy[5][i]) { buyBuilding(i, 5, 0, true); }\n            }\n            assignBuildingsProduction.stage5Cache();\n            gainBuildings(0, 5, passedSeconds); //Brown dwarfs\n            const research = player.researches[5][0];\n            if (research >= 1) { gainBuildings(1, 5, passedSeconds); } //Main sequence\n            if (research >= 2) { gainBuildings(2, 5, passedSeconds); } //Red supergiants\n            if (research >= 3) { gainBuildings(3, 5, passedSeconds); } //Blue hypergiants\n            if (research >= 4 && (player.challenges.active !== 0 || player.verses[0].current >= 7)) { gainBuildings(4, 5, passedSeconds); } //Quasi-stars\n        } else { assignBuildingsProduction.stage5Cache(); }\n        if (auto[5]) { autoUpgradesBuy(4); }\n        if (auto[6]) { autoResearchesBuy('researches', 4); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 4); }\n        assignBuildingsProduction.stage4Cache();\n        for (let i = maxActive[4] - 1; i >= 1; i--) {\n            if (autoBuy[4][i]) { buyBuilding(i, 4, 0, true); }\n            gainBuildings(i - 1, 4, passedSeconds); //Stardust\n        }\n        assignBuildingsProduction.S4Levels();\n        awardMilestone(0, 5);\n        awardMilestone(0, 4);\n        const failed = !collapseResetCheck(true);\n        awardMilestone(1, 4); //Must be before Merge\n        if (vacuum && failed && auto[9]) { mergeResetCheck(true); }\n    } else if (vacuum) {\n        effectsCache.star2 = 1; //Lazy fix\n        assignResetInformation.solarHardcap();\n    }\n    if (activeAll.includes(3)) {\n        if (auto[5]) { autoUpgradesBuy(3); }\n        if (auto[6]) { autoResearchesBuy('researches', 3); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 3); }\n        if (auto[3]) { rankResetCheck(true); }\n        assignBuildingsProduction.stage3Cache();\n        global.accretionInfo.disableAuto = vacuum && player.researchesExtra[3][5] < 1 && player.strangeness[1][8] >= 2 && assignBuildingsProduction.S3Build1(true) >= calculateEffects.dustHardcap();\n        for (let i = 1; i < maxActive[3]; i++) {\n            if (autoBuy[3][i]) { buyBuilding(i, 3, 0, true); }\n        }\n        gainBuildings(2, 3, passedSeconds); //Planetesimals\n        gainBuildings(1, 3, passedSeconds); //Cosmic dust\n        if (!vacuum) { gainBuildings(0, 3, passedSeconds); } //Mass\n    }\n    if (activeAll.includes(2)) {\n        if (auto[5]) { autoUpgradesBuy(2); }\n        if (auto[6]) { autoResearchesBuy('researches', 2); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 2); }\n        vaporizationResetCheck(trueSeconds);\n        for (let i = maxActive[2] - 1; i >= 1; i--) {\n            if (autoBuy[2][i]) { buyBuilding(i, 2, 0, true); }\n        }\n        gainBuildings(1, 2, passedSeconds); //Drops\n        if (!vacuum) { gainBuildings(0, 2, passedSeconds); } //Moles\n        awardMilestone(1, 2);\n        awardMilestone(0, 2);\n    }\n    if (activeAll.includes(1)) {\n        if (auto[5]) { autoUpgradesBuy(1); }\n        if (auto[6]) { autoResearchesBuy('researches', 1); }\n        if (auto[7]) { autoResearchesBuy('researchesExtra', 1); }\n        dischargeResetCheck(true);\n        assignBuildingsProduction.stage1Cache();\n        gainBuildings(5, 1, passedSeconds); //Molecules\n        for (let i = maxActive[1] - 1; i >= 1; i--) {\n            if (autoBuy[1][i]) { buyBuilding(i, 1, 0, true); }\n            gainBuildings(i - 1, 1, passedSeconds); //Rest of Microworld\n        }\n        awardMilestone(1, 1);\n        awardMilestone(0, 1);\n    }\n\n    if (timeWarp >= tick) {\n        timeUpdate(tick, timeWarp);\n    } else { time.offline += timeWarp; }\n};\n\nexport const calculateEffects: calculateEffectsType = {\n    effectiveEnergy: () => {\n        let energy = player.discharge.energy;\n        if (player.upgrades[1][10] === 1) { energy *= 2; }\n        if (player.inflation.vacuum && player.tree[0][4] >= 1) { energy *= global.milestonesInfo[1].reward[1]; }\n        return energy + 1;\n    },\n    effectiveGoals: () => {\n        let goals = player.discharge.current + (player.strangeness[1][3] / 2);\n        if (player.inflation.vacuum) {\n            goals += player.tree[1][4];\n            if (player.tree[1][6] >= 1) { goals += global.accretionInfo.effective / 2; }\n        }\n        return goals;\n    },\n    dischargeScaling: (research = player.researches[1][3], strangeness = player.strangeness[1][2]) => {\n        let scale = (2 * research) + (strangeness / 2);\n        if (player.inflation.vacuum) { scale += player.tree[1][4] / 2; }\n        return 10 - scale;\n    },\n    dischargeCost: (scaling = calculateEffects.dischargeScaling()) => {\n        let next = scaling ** player.discharge.current;\n        if (player.inflation.vacuum && player.strangeness[5][10] >= 1) { next /= calculateEffects.S5Strange9_stage1(); }\n        return next;\n    },\n    dischargeBase: (research = player.researches[1][4]) => {\n        let base = (4 + research) / 2;\n        if (player.challenges.active === 0) { base = (base + player.tree[1][4] / 2) ** 0.5; }\n        return base;\n    },\n    S1Upgrade6: () => 10 + 3 * player.researches[1][0],\n    S1Upgrade7: (preons = false) => {\n        let base = 2 + player.researches[1][1];\n        const selfBoost = (base + 100) / 100;\n        if (!preons || player.buildings[1][1].true >= 1001) { return selfBoost; }\n\n        base = (base * 1.6 + 100) / 100; //Formula is '(selfPreons * step ** ((true - 1) / 2)) ** true'; Step is '(selfBoost / selfPreons) ** (1 / 500)'\n        return (selfBoost / base) ** ((player.buildings[1][1].true - 1) / 1000) * base;\n    },\n    S1Upgrade9: () => {\n        let effect = calculateEffects.effectiveEnergy();\n        if (player.upgrades[1][10] !== 1) { effect **= 0.5; }\n        return effect;\n    },\n    S1Research2: (level = player.strangeness[1][1]) => 20 + (level * (player.inflation.vacuum ? 1.5 : 1)),\n    S1Research5: () => {\n        const discharges = global.dischargeInfo.total;\n        if (!player.inflation.vacuum) { return discharges > 5 ? discharges + 15 : discharges * 4; }\n        return discharges > 7 ? discharges + 14 : discharges * 3;\n    },\n    S1Extra1: (level = player.researchesExtra[1][1]) => level >= 4 ? 1.1 : level >= 3 ? 1.2 : (20 - 3 * level) / 10,\n    S1Extra3: (level = player.researchesExtra[1][3]) => (level * (player.challenges.supervoid[3] >= 2 ? 6 : 5)) / 100,\n    S1Extra4: (research = player.researchesExtra[1][5]) => (global.dischargeInfo.base + calculateEffects.effectiveEnergy() ** 0.1) * (research + 1) / 100 + 1,\n    preonsHardcap: (laterPreons) => 1e14 * laterPreons * effectsCache.S1SolarDelay * assignBuildingsProduction.S3Build1(),\n    clouds: (post = false) => {\n        let effect = player.vaporization.clouds + 1;\n        if (post) { effect += global.vaporizationInfo.get; }\n\n        if (effect > 1e4) { effect = (effect - 1e4) ** 0.7 + 1e4; }\n        return effect;\n    },\n    cloudsGain: () => player.challenges.active === 0 ? 0.4 : player.inflation.vacuum ? 0.5 : 0.6,\n    S2Upgrade1: () => {\n        const puddles = player.buildings[2][2];\n        const maxTrue = Math.min(puddles.true, 200);\n        return (player.challenges.active === 0 && player.challenges.super ? 1.01 : 1.02) ** ((puddles.current.toNumber() - maxTrue) ** 0.7 + maxTrue);\n    },\n    S2Upgrade2: () => {\n        let effect = 1e10 / (player.inflation.vacuum ? 2.5 : 2) ** player.strangeness[2][3];\n        if (player.inflation.vacuum) {\n            if (player.tree[0][4] >= 1) { effect /= global.milestonesInfo[2].reward[0]; }\n            if (player.challenges.active === 0) { effect /= 8 ** player.tree[1][5]; }\n        }\n        return effect;\n    },\n    S2Upgrade3_power: (research = player.researches[2][2]) => (1 + research / 2) / 100,\n    S2Upgrade3: (power = calculateEffects.S2Upgrade3_power()) => Math.max(player.buildings[2][0].current.toNumber(), 1) ** power,\n    S2Upgrade4_power: (research = player.researches[2][3]) => (1 + research / 2) / 100,\n    S2Upgrade4: (power = calculateEffects.S2Upgrade4_power()) => Math.max(player.buildings[2][1].current.toNumber(), 1) ** power,\n    S2Extra1: (level, post = false) => { //+^0.05 per level; Drops up to +^(0.05 / 3) after softcap\n        if (level <= 0) { return 1; }\n        let effect = player.vaporization.clouds;\n        if (post) { effect += global.vaporizationInfo.get; }\n        return Math.max(effect ** (level / 60) * Math.min(effect, 1e6) ** (level / 30), 1);\n    },\n    S2Extra2: (rain, level = player.researchesExtra[2][2]) => level >= 1 ? (rain - 1) / 32 + 1 : 1,\n    submersion: () => {\n        const drops = player.buildings[2][1].current.toNumber() + 1;\n        return Math.log2(drops ** 0.6 / Math.min(drops, 1e10) ** 0.4 + 1); //^0.2 before softcap, ^0.6 after\n    },\n    effectiveRank: () => {\n        let rank = player.challenges.active === 0 && player.challenges.super ? 1 : player.accretion.rank;\n        if (player.inflation.vacuum) {\n            if (player.tree[0][4] >= 1) { rank += global.milestonesInfo[3].reward[1]; }\n            if (player.challenges.active === 0) { rank += player.tree[1][6]; }\n        }\n        return rank;\n    },\n    S3Upgrade0: () => (101 + player.researches[3][1]) / 100,\n    S3Upgrade1_power: (research = player.researchesExtra[3][3]) => (11 + research) / 100,\n    S3Upgrade1: (power = calculateEffects.S3Upgrade1_power()) => Math.max((player.buildings[3][1].current.toNumber() * (player.buildings[3][1].true + 1)) ** power, 1),\n    S3Upgrade3: () => (204 + player.researches[3][4]) / 200, //1.02 + 0.005\n    S3Research6: (level = player.researches[3][6]) => { //+^0.025 per level; Drops up to +^(0.025 / 3) after softcap\n        const mass = Math.max(player.buildings[3][0].current.toNumber(), 1);\n        return mass ** (level / 120) * Math.min(mass, 1e21) ** (level / 60);\n    },\n    S3Extra1: (level = player.researchesExtra[3][1]) => (100 + 11 * level) / 100,\n    S3Extra4: (level = player.researchesExtra[3][4]) => level > 0 ? 8 ** ((global.accretionInfo.effective + level) / 8) : 1,\n    dustDelay: () => {\n        let delay = effectsCache.S3SolarDelay * (1.4 ** player.strangeness[3][8]);\n        if (player.strangeness[5][10] >= 3) { delay *= calculateEffects.S5Strange9_stage3(); }\n        return delay;\n    },\n    dustHardcap: () => (player.accretion.rank >= 5 ? 1e48 : 8e46) * calculateEffects.dustDelay(),\n    mass: (post = false) => {\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        if (effect > 1) {\n            if (player.elements[21] >= 1) { effect **= 1.1; }\n            if (player.challenges.active === 0) { effect **= 0.2; }\n        }\n        return effect;\n    },\n    star: [\n        (post = false) => {\n            let effect = player.collapse.stars[0] + 1;\n            if (post) {\n                effect += global.collapseInfo.starCheck[0];\n            }\n            if (player.elements[27] >= 1) { effect += player.buildings[4][3].true; }\n\n            if (player.elements[6] >= 1) { effect **= calculateEffects.element6(); }\n            return effect;\n        },\n        (post = false) => {\n            let stars = player.collapse.stars[1] * (1 + player.strangeness[4][8]);\n            if (post) {\n                stars += global.collapseInfo.starCheck[1] * (1 + player.strangeness[4][8]);\n                if (player.elements[22] >= 1) { stars += global.collapseInfo.starCheck[0]; }\n            }\n            if (player.elements[22] >= 1) { stars += player.collapse.stars[0]; }\n\n            let effect = (stars + 1) ** (0.5 + player.strangeness[4][8] / 8);\n            if (player.elements[12] >= 1) { effect *= logAny(stars + 4, 4); }\n            return effect;\n        },\n        (post = false) => {\n            let blackHoles = player.collapse.stars[2];\n            if (post) {\n                blackHoles += global.collapseInfo.starCheck[2];\n            }\n            if (blackHoles <= 0) { return 1; }\n\n            const base = player.elements[18] >= 1 ? 3 : 2;\n            let effect = (blackHoles + 1) / logAny(blackHoles + base, base);\n            if (player.inflation.vacuum && player.tree[0][4] >= 1) { effect *= global.milestonesInfo[4].reward[1]; }\n            return effect;\n        }\n    ],\n    massGain: () => {\n        const elements = player.elements;\n\n        let massGain = 0.004;\n        if (elements[3] >= 1) { massGain += 0.002; }\n        if (elements[5] >= 1) { massGain += 0.0002 * player.buildings[4][1].true; }\n        massGain *= elements[15] >= 1 ? global.collapseInfo.trueStars : player.buildings[4][1].true;\n        if (player.inflation.vacuum) {\n            massGain = (massGain * (player.challenges.active === 0 ? 48 : 96)) + 1;\n        } else {\n            if (elements[10] >= 1) { massGain *= 2; }\n            if (player.researchesExtra[4][1] >= 1) { massGain *= calculateEffects.S4Extra1(); }\n            massGain *= calculateEffects.star[2]();\n            if (player.strangeness[5][7] >= 1) { massGain *= global.strangeInfo.stageBoost[5]; }\n        }\n        return massGain;\n    },\n    S4Shared: () => {\n        const multiplier = new Overlimit(calculateEffects.S4Research1()).power(global.collapseInfo.trueStars);\n        if (player.elements[24] >= 1) { multiplier.multiply(calculateEffects.element24()); }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[1][4] >= 1) { multiplier.multiply(calculateEffects.S1Extra4() ** global.dischargeInfo.total); }\n        }\n        return multiplier;\n    },\n    S4Research0_base: (disc = player.researches[4][2]) => (14 + disc) / 10,\n    S4Research0: (base = calculateEffects.S4Research0_base()) => {\n        let levels = player.researches[4][0];\n        if (player.elements[19] >= 1) { levels++; }\n        return base ** levels;\n    },\n    S4Research1: (level = player.researches[4][1], transfer = player.researchesExtra[4][1]) => {\n        if (level <= 0) { return 1; }\n        return 1 + (transfer >= 1 ? 0.006 : 0.005) * (\n            level >= 12 ? (level + 93) / 16 :\n            level >= 8 ? (level + 41) / 8 :\n            level >= 6 ? (level + 17) / 4 :\n            level >= 5 ? 5.5 : 1 + level\n        );\n    },\n    S4Research4: (post = false, level = player.researches[4][4]) => {\n        if (level < 1) { return 1; }\n\n        let blackHoles = player.collapse.stars[2];\n        let mass = player.collapse.mass;\n        if (post) {\n            blackHoles += global.collapseInfo.starCheck[2];\n            if (global.collapseInfo.newMass > mass) { mass = global.collapseInfo.newMass; }\n        }\n\n        const base = level >= 2 ? 2 : 3;\n        let effect = logAny(blackHoles + base, base);\n        if (player.elements[23] >= 1 && mass > 1) { effect *= mass ** 0.1; }\n        return effect;\n    },\n    S4Extra1: () => (10 + player.researches[4][1]) / 10,\n    mergeRequirement: (stability = player.challenges.active === 1) => {\n        let base = 22;\n        if (stability) { base += player.challenges.stability; }\n        return base;\n    },\n    mergeMaxResets: () => {\n        let max = 2 + player.researchesExtra[5][3];\n        if (player.elements[30] >= 1) { max += player.collapse.maxElement - 29; }\n        return max;\n    },\n    reward: [\n        (post = false) => {\n            let effect = player.merge.rewards[0] + 1;\n            if (post) { effect += global.mergeInfo.checkReward[0]; }\n            return effect * calculateEffects.S5Extra2(global.mergeInfo.S5Extra2, post); //Just in case doesn't count boost from Clusters\n        }, (post = false) => {\n            let level = player.researchesExtra[5][2] + player.merge.rewards[1];\n            if (post) { level += global.mergeInfo.checkReward[1]; }\n            return calculateEffects.S5Extra2(level, post) / calculateEffects.S5Extra2(player.researchesExtra[5][2], post);\n        }\n    ],\n    mergeScore: () => global.mergeInfo.galaxies + (player.merge.rewards[0] * 2) + (player.merge.rewards[1] * 4),\n    S5Upgrade0: () => 3 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade1: () => 2 * ((player.inflation.vacuum ? 1.6 : 1.8) ** player.strangeness[5][1]),\n    S5Upgrade2: (post = false, level = player.upgrades[5][2]) => {\n        if (level < 1) { return 0; }\n        let effect = player.collapse.mass;\n        if (post) {\n            if (global.collapseInfo.newMass > effect) { effect = global.collapseInfo.newMass; }\n        }\n\n        effect = Math.log10(Math.max(effect / 1e5, 1)) / 4 + 0.25;\n        if (!player.inflation.vacuum) { effect *= 2; }\n        return effect;\n    },\n    S5Research2: () => 1 + player.researches[5][2] / 160,\n    S5Research3: () => 1 + player.researches[5][3] / 160,\n    S5Extra2: (level, post = false) => {\n        let groups = player.merge.rewards[0];\n        if (post) { groups += global.mergeInfo.checkReward[0]; }\n        return (8 + level * groups) / 8;\n    },\n    S5Extra4: (level = player.researchesExtra[5][4]) => (19 - level) * level / 2, //Starts at 9 and -1 is the step\n    element6: () => player.researchesExtra[4][2] >= 1 ? 2 : 1.5,\n    element24_power: () => player.elements[27] >= 1 ? 0.02 : 0.01,\n    element24: () => new Overlimit(player.buildings[4][0].current).max('1').power(calculateEffects.element24_power()),\n    element26: () => {\n        let effect = new Overlimit(player.buildings[4][0].trueTotal).log(10).toNumber() - 48;\n        if (player.elements[29] >= 1) { effect = (199 + effect) * effect / 200; }\n        return Math.max(effect, 0);\n    },\n    darkHardcap: () => {\n        const early = 1e8 * global.buildingsInfo.producing[6][1];\n        if (player.researchesExtra[6][3] < 1) { return early; }\n        return Math.max(20 * global.versesInfo.producing[0] * global.inflationInfo.globalSpeed, early);\n    },\n    effectiveDarkEnergy: () => player.darkness.energy * effectsCache.fluid + 1,\n    darkFluid: (post = false) => {\n        let effect = player.darkness.fluid;\n        if (post && effect < global.inflationInfo.newFluid) { effect = global.inflationInfo.newFluid; }\n        return effect + 1;\n    },\n    S2Strange9: () => Math.log10(player.vaporization.clouds + 1) / 80 + 1,\n    S5Strange9_stage1: () => global.mergeInfo.galaxies ** 2 + 1,\n    S5Strange9_stage2: () => global.mergeInfo.galaxies + 1,\n    S5Strange9_stage3: () => global.mergeInfo.galaxies / 100 + 1,\n    T0Inflation0: () => Math.max(2 ** (1 - player.time.stage / 3600), 1),\n    T0Inflation1: () => {\n        const mass = player.buildings[6][0].current.toNumber() + 1;\n        return mass ** 0.01 * Math.min(mass, 1e8) ** 0.03;\n    },\n    T0Inflation3: () => (1 + global.inflationInfo.totalSuper) / 10 + 1,\n    T0Inflation5: (level = player.tree[0][5]) => {\n        let base = 48 / (48 - level * 11);\n        if (level >= 1 && player.challenges.active !== null) { base *= 4; }\n        return base;\n    },\n    strangeGain: (interstellar, quarks = true) => {\n        let base = !quarks ? 0 : player.inflation.vacuum ?\n            (player.strangeness[5][3] >= 1 ? 5 : 4) :\n            (player.milestones[1][0] >= 6 ? 2 : 1);\n        if (interstellar) {\n            base = (base + effectsCache.element26) * effectsCache.interstellarQuarks;\n        }\n        if (quarks) {\n            base *= (1.4 ** player.strangeness[5][2]) * (1.4 ** player.tree[0][2]) * (1.2 ** player.tree[1][1]);\n            if (player.challenges.active === 1) {\n                base /= 2 ** Math.max(player.stage.resets - 7, 0) * 2 ** player.challenges.stability;\n                if (!interstellar) { base /= 2 ** (player.challenges.stability + 2); }\n            } else if (player.challenges.active === 0 && player.challenges.super) { return 1; }\n        } else { base *= (1.4 ** player.strangeness[6][1]) * (1.4 ** player.tree[1][3]); }\n        return base * global.strangeInfo.strangeletsInfo[1] * effectsCache.T0Inflation3;\n    }\n};\n\nexport const assignBuildingsProduction = {\n    globalSpeed: (): number => {\n        const tree = player.tree;\n        const challenge = player.challenges.active;\n        let speed = (1.1 ** player.researches[6][2]) * (1.2 ** player.researchesExtra[6][0]) * (1.4 ** player.strangeness[6][0]) * (calculateEffects.T0Inflation1() ** tree[0][1]) * effectsCache.T0Inflation3 * (1.4 ** tree[1][0]);\n        if (tree[1][2] >= 1) {\n            speed *= 2 ** tree[0][0];\n        } else {\n            if (tree[0][0] >= 1) { speed *= 2; }\n            if (tree[0][0] >= 2 && challenge === null && (player.inflation.vacuum || tree[0][4] >= 1)) { speed *= calculateEffects.T0Inflation0(); }\n        }\n        if (challenge !== null) {\n            speed *= 6 / (6 - tree[0][5]);\n            if (challenge === 0) {\n                speed *= 1.2 ** Math.min(tree[0][2], tree[0][3] * 2);\n                if (player.challenges.super) { speed /= 5; }\n            } else if (challenge === 1) {\n                speed /= 8 ** player.challenges.stability;\n            }\n        }\n        return (global.inflationInfo.globalSpeed = speed);\n    },\n    /** Have to be after auto Strangeness, Inflation and interstellar Stage */\n    globalCache: () => {\n        global.dischargeInfo.total = calculateEffects.effectiveGoals();\n        global.dischargeInfo.base = calculateEffects.dischargeBase();\n        effectsCache.S2Upgrade3 = player.upgrades[2][3] === 1 ? calculateEffects.S2Upgrade3() : 1;\n        effectsCache.S2Upgrade4 = player.upgrades[2][4] === 1 ? calculateEffects.S2Upgrade4() : 1;\n        global.accretionInfo.effective = calculateEffects.effectiveRank();\n        global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n    },\n    /** Have to be after auto Upgrades */\n    stage1Cache: () => {\n        effectsCache.S1Upgrade6 = player.upgrades[1][6] === 1 ? calculateEffects.S1Upgrade6() : 0;\n        effectsCache.S1Upgrade7 = player.upgrades[1][7] === 1 ? calculateEffects.S1Upgrade7() : 1;\n        let multiplier = (player.inflation.vacuum ? 2 : 1.8) ** player.strangeness[1][0];\n        if (player.upgrades[1][5] === 1) { multiplier *= global.dischargeInfo.base ** global.dischargeInfo.total; }\n        if (player.strangeness[1][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[1]; }\n        if (player.inflation.vacuum) {\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[1].reward[0]; }\n            if (player.challenges.active === 0) { multiplier /= 4; }\n        }\n        effectsCache.microworld = multiplier;\n    },\n    /** Preons, true vacuum only, visual will assign effect */\n    S1Build1: (noHardcap = false, visual = false): number => {\n        const structure = player.buildings[1][1];\n\n        const laterPreons = calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3();\n        let multiplier = 6e-4 * effectsCache.microworld * laterPreons;\n        const preonsExcess = new Overlimit(structure.current).minus(structure.true);\n        if (preonsExcess.moreThan('1')) {\n            multiplier *= preonsExcess.power(0.11).toNumber() + structure.true;\n        } else { multiplier *= structure.current.toNumber(); }\n        if (player.upgrades[1][7] === 1) { multiplier *= calculateEffects.S1Upgrade7(true) ** Math.min(structure.true, 1001); }\n        if (!noHardcap) {\n            const preonCap = calculateEffects.preonsHardcap(laterPreons);\n            if (multiplier > preonCap) { multiplier = preonCap; }\n        }\n        if (visual) { global.buildingsInfo.producing[1][1].setValue(multiplier); }\n        return multiplier;\n    },\n    /** Quarks, true vacuum only */\n    S1Build2: (): Overlimit => global.buildingsInfo.producing[1][2].setValue(effectsCache.S1Upgrade7).power(player.buildings[1][2].true).multiply(0.4 * effectsCache.microworld, player.buildings[1][2].current),\n    /** Particles */\n    S1Build3: (): Overlimit => {\n        const index = player.inflation.vacuum ? 3 : 1;\n\n        let multiplier = (player.inflation.vacuum ? 0.2 : 1.6) * effectsCache.microworld;\n        if (player.upgrades[1][0] === 1) { multiplier *= 8; }\n        return global.buildingsInfo.producing[1][index].setValue(effectsCache.S1Upgrade7).power(player.buildings[1][index].true).multiply(multiplier, player.buildings[1][index].current);\n    },\n    /** Atoms */\n    S1Build4: (): Overlimit => {\n        const vacuum = player.inflation.vacuum;\n        const index = vacuum ? 4 : 2;\n\n        let multiplier = (vacuum ? 0.8 : 0.4) * effectsCache.microworld * (effectsCache.S1Upgrade7 ** player.buildings[1][index].true);\n        if (player.upgrades[1][3] === 1) { multiplier *= vacuum ? 6 : 4; }\n        return global.buildingsInfo.producing[1][index].setValue(multiplier).multiply(player.buildings[1][index].current);\n    },\n    /** Molecules, visual will assign effect */\n    S1Build5: (visual = false): number => {\n        const index = player.inflation.vacuum ? 5 : 3;\n\n        let multiplier = 0.2 * effectsCache.microworld * player.buildings[1][index].current.toNumber() * (effectsCache.S1Upgrade7 ** player.buildings[1][index].true);\n        if (player.upgrades[1][4] === 1) { multiplier *= 4; }\n        if (visual) { global.buildingsInfo.producing[1][index].setValue(multiplier); }\n        return multiplier;\n    },\n    /* Tritium */\n    S1Build6: (): number => {\n        let multiplier = assignBuildingsProduction.S1Build5();\n        if (multiplier < 1) { multiplier = 1; }\n        multiplier = logAny(multiplier, calculateEffects.S1Extra1()) * (calculateEffects.S1Research2() ** player.researches[1][2]) * (calculateEffects.S1Research5() ** player.researches[1][5]);\n        if (player.upgrades[1][9] === 1) { multiplier *= calculateEffects.S1Upgrade9(); }\n        if (player.inflation.vacuum) { multiplier *= assignBuildingsProduction.S2Build1(); }\n        return (effectsCache.tritium = multiplier);\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S2Levels: (reset = null as boolean | null) => {\n        const info = global.vaporizationInfo;\n        if (reset !== null) {\n            info.S2Extra1 = 0;\n            info.S2Research1 = 0;\n            info.S2Research0 = 0;\n            if (!reset) { return; }\n        }\n        const totalDrops = player.buildings[2][1].total.toNumber(); //Infinity is fine here\n        if (info.S2Extra1 !== player.researchesExtra[2][1]) { info.S2Extra1 = Math.min(player.researchesExtra[2][1], logAny(totalDrops * 9.99e-10 + 1, 1e3)); }\n        if (info.S2Research1 !== player.researches[2][1]) { info.S2Research1 = Math.min(player.researches[2][1], logAny(totalDrops / 100 + 1, 5)); } //Formula is: logAny(totalDrops * (scaling - 1) / startCost + 1, scaling)'\n        if (info.S2Research0 !== player.researches[2][0]) { info.S2Research0 = Math.min(player.researches[2][0], Math.max(logAny(totalDrops / 10, 1.366) + 1, logAny(totalDrops * 0.0366 + 1, 1.366))); }\n    },\n    S2FreeBuilds: () => {\n        const buildings = player.buildings[2];\n        const upgrades = player.upgrades[2];\n\n        let water5 = buildings[5].true;\n        let water4 = buildings[4].true;\n        let water3 = buildings[3].true;\n        let water2 = buildings[2].true;\n        if (upgrades[8] === 1) { water5 += buildings[6].true; }\n        if (upgrades[7] === 1) { water4 += water5 * (1 + player.researches[2][6]); }\n        if (upgrades[6] === 1) { water3 += water4 * (1 + player.researches[2][5]); }\n        if (upgrades[5] === 1) { water2 += water3 * (1 + player.researches[2][4]); }\n        buildings[5].current.setValue(water5);\n        buildings[4].current.setValue(water4);\n        buildings[3].current.setValue(water3);\n        buildings[2].current.setValue(water2);\n    },\n    /** Drops */\n    S2Build1: (): number => {\n        const vacuum = player.inflation.vacuum;\n        const structure = player.buildings[2][1];\n\n        let multiplier = structure.current.toNumber();\n        if (player.challenges.active === 0) {\n            if (multiplier > 1) { multiplier = 1; }\n        } else if (vacuum) {\n            const excess = multiplier - structure.true;\n            if (excess > 1) { multiplier = excess ** 0.2 + structure.true; }\n        }\n        multiplier *= (vacuum ? 2 : 8e-4) * ((player.challenges.active === 0 && player.challenges.super ? 2 : 3) ** global.vaporizationInfo.S2Research0) * (2 ** player.strangeness[2][0]);\n        if (player.upgrades[2][0] === 1) { multiplier *= (vacuum ? 1.02 : 1.04) ** structure.true; }\n        if (vacuum && multiplier < 1) { multiplier = 1; }\n        return (global.buildingsInfo.producing[2][1] = multiplier);\n    },\n    /** Puddles, visuals only assigns Structures past Puddles and has no return value */\n    S2Build2: (visual = false): number => {\n        const producings = global.buildingsInfo.producing[2];\n        const structures = player.buildings[2];\n        if (structures[2].true < 1 && !visual) {\n            const rain = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n            return (producings[2] = (rain - 1) * calculateEffects.S2Extra2(rain));\n        }\n        const rain = calculateEffects.S2Extra1(global.vaporizationInfo.S2Extra1);\n        const flow = 1.24 ** player.strangeness[2][7];\n\n        const inVoid = player.challenges.active === 0;\n        const start = inVoid && player.challenges.super ? 1 : 2;\n        producings[6] = structures[6].true < 1 ? 1 : (player.upgrades[2][8] === 1 ? 1.1 : 1.08) ** structures[6].true * flow;\n        producings[5] = Math.max(start * structures[5].current.toNumber() * calculateEffects.S2Extra2(rain) * flow, 1);\n        producings[4] = Math.max(start * structures[4].current.toNumber() * flow, 1);\n        producings[3] = Math.max(start * structures[3].current.toNumber() * flow, 1);\n        if (visual) { return 0; }\n\n        let multiplier = (inVoid ? 6e-4 : 4.8) * structures[2].current.toNumber() * calculateEffects.clouds() * producings[3] * producings[4] * producings[5] * producings[6] * effectsCache.S2Upgrade3 * effectsCache.S2Upgrade4 * ((inVoid && player.challenges.super ? 1.4 : 2) ** global.vaporizationInfo.S2Research1) * rain * ((player.inflation.vacuum ? 1.8 : 1.6) ** player.strangeness[2][1]);\n        if (player.upgrades[2][1] === 1) { multiplier *= calculateEffects.S2Upgrade1(); }\n        if (player.inflation.vacuum) {\n            multiplier *= calculateEffects.S3Extra4();\n            if (player.elements[1] >= 1) { multiplier *= 2; }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[2].reward[1]; }\n            if (player.strangeness[5][10] >= 2) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n        }\n        if (player.strangeness[2][6] >= 1) { multiplier *= global.strangeInfo.stageBoost[2]; }\n        return (producings[2] = multiplier);\n    },\n    /** Have to be after auto Upgrades */\n    stage3Cache: () => {\n        const producings = global.buildingsInfo.producing[3];\n        producings[5] = 1.1 ** player.buildings[3][5].true;\n        effectsCache.S3Strange1 = (player.inflation.vacuum ? 1.48 : 1.6) ** player.strangeness[3][1];\n\n        producings[4] = (player.upgrades[3][12] === 1 ? 1.14 : 1.1) ** player.buildings[3][4].true * producings[5];\n        effectsCache.S3Strange3 = producings[4] ** (player.inflation.vacuum ? 0.1 : 0.2);\n    },\n    /** Cosmic dust and related softcap */\n    S3Build1: (noHardcap = false): number => {\n        const researchesS3 = player.researches[3];\n        const upgradesS3 = player.upgrades[3];\n        const vacuum = player.inflation.vacuum;\n\n        let multiplier = (vacuum ? 2 : 8e-20) * player.buildings[3][1].current.toNumber() * (3 ** researchesS3[0]) * (2 ** researchesS3[3]) * (3 ** researchesS3[5]) * (1.11 ** player.researchesExtra[3][0]) * (calculateEffects.S3Extra1() ** global.accretionInfo.effective) * (1.8 ** player.strangeness[3][0]);\n        if (vacuum) {\n            multiplier *= calculateEffects.submersion();\n            if (player.elements[4] >= 1) { multiplier *= 1.4; }\n            if (player.elements[14] >= 1) { multiplier *= 1.4; }\n            if (player.strangeness[5][10] >= 3) { multiplier *= calculateEffects.S5Strange9_stage2(); }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[3].reward[0]; }\n        }\n        if (upgradesS3[0] === 1) { multiplier *= calculateEffects.S3Upgrade0() ** player.buildings[3][1].true; }\n        if (upgradesS3[1] === 1) { multiplier *= calculateEffects.S3Upgrade1(); }\n        if (upgradesS3[2] === 1) { multiplier *= 2; }\n        if (upgradesS3[5] === 1) { multiplier *= 3; }\n        if (upgradesS3[6] === 1) { multiplier *= 2 * 1.5 ** researchesS3[7]; }\n        if (upgradesS3[9] === 1) { multiplier *= 2; }\n        if (upgradesS3[10] === 1) { multiplier *= 8 * 2 ** researchesS3[8]; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        if (player.challenges.active === 0) {\n            global.accretionInfo.dustSoft = player.accretion.rank >= 5 ? 0.8 : 0.9;\n        } else if (player.accretion.rank >= 5) {\n            global.accretionInfo.dustSoft = vacuum || multiplier > 1 ? 0.9 : 1.1;\n        } else { global.accretionInfo.dustSoft = 1; }\n        multiplier **= global.accretionInfo.dustSoft;\n        if (vacuum) {\n            if (player.researchesExtra[3][5] >= 2) {\n                multiplier *= calculateEffects.dustDelay();\n            } else if (!noHardcap && player.researchesExtra[3][5] < 1) {\n                const dustCap = calculateEffects.dustHardcap();\n                if (multiplier > dustCap) { multiplier = dustCap; }\n            }\n            if (multiplier < 1) { multiplier = 1; }\n        }\n        return (global.buildingsInfo.producing[3][1] = multiplier);\n    },\n    /** Planetesimals */\n    S3Build2: (): number => {\n        let multiplier = player.buildings[3][2].current.toNumber() * (3 ** player.researches[3][2]) * calculateEffects.S3Research6() * effectsCache.S3Strange1;\n        if (player.upgrades[3][3] === 1) { multiplier *= calculateEffects.S3Upgrade3() ** player.buildings[3][2].true; }\n        if (player.upgrades[3][4] === 1) { multiplier *= 3; }\n        if (player.strangeness[3][3] >= 1) { multiplier *= effectsCache.S3Strange3; }\n        return (global.buildingsInfo.producing[3][2] = multiplier);\n    },\n    /** Protoplanets */\n    S3Build3: (): number => {\n        let multiplier = 0.4 * player.buildings[3][3].current.toNumber() * global.buildingsInfo.producing[3][4] * effectsCache.S3Strange1;\n        if (player.researchesExtra[3][2] >= 1) { multiplier *= 2; }\n        if (player.upgrades[3][7] === 1) { multiplier *= 1.02 ** player.buildings[3][3].true; }\n        return (global.buildingsInfo.producing[3][3] = multiplier);\n    },\n    /** Have to be after auto Upgrades */\n    stage4Cache: () => {\n        effectsCache.mass = calculateEffects.mass();\n        effectsCache.star1 = calculateEffects.star[1]();\n        effectsCache.star2 = calculateEffects.star[2]();\n\n        let multiplier = calculateEffects.S4Research0() * effectsCache.mass * effectsCache.star1 * calculateEffects.S4Research4() * (1.6 ** player.strangeness[4][0]);\n        if (player.elements[4] >= 1) { multiplier *= 1.4; }\n        if (player.elements[14] >= 1) { multiplier *= 1.4; }\n        if (player.inflation.vacuum) {\n            if (player.researchesExtra[2][3] >= 1) { multiplier *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][3] >= 3) {\n                multiplier *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][3] === 2) { multiplier *= effectsCache.S2Upgrade4 ** 0.5; }\n            if (player.tree[0][4] >= 1) { multiplier *= global.milestonesInfo[4].reward[0]; }\n            if (player.challenges.active === 0) { multiplier /= 8000; }\n        }\n        if (player.strangeness[4][7] >= 1) { multiplier *= global.strangeInfo.stageBoost[4]; }\n        effectsCache.interstellar = multiplier;\n    },\n    /** Reset being false will set all levels to 0, true will recalculate them afterwards */\n    S4Levels: (reset = null as boolean | null) => {\n        if (reset !== null) {\n            global.mergeInfo.S5Extra2 = 0;\n            if (!reset) { return; }\n        }\n        const extra2s5Max = player.researchesExtra[5][2] + player.merge.rewards[1];\n        if (global.mergeInfo.S5Extra2 !== extra2s5Max) { global.mergeInfo.S5Extra2 = Math.min(extra2s5Max, Math.max(new Overlimit(player.buildings[4][0].total).divide('1e280').log(1e30).toNumber(), 0)); }\n    },\n    /** Brown dwarfs */\n    S4Build1: (): Overlimit => {\n        const multiplierList = [player.buildings[4][1].current, calculateEffects.S4Shared()];\n        let multiplier = 40 * effectsCache.interstellar;\n        if (player.elements[1] >= 1) { multiplier *= 2; }\n        if (player.elements[19] >= 1 && effectsCache.mass > 1) { multiplier *= effectsCache.mass; }\n        const level = player.inflation.vacuum ? 4 : 3;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][1].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Main sequence */\n    S4Build2: (): Overlimit => {\n        const multiplierList = [player.buildings[4][2].current, calculateEffects.S4Shared()];\n        let multiplier = 1200 * effectsCache.interstellar * calculateEffects.star[0]() * (2 ** player.researches[4][3]);\n        const level = player.inflation.vacuum ? 3 : 2;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][2].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Red supergiants */\n    S4Build3: (): Overlimit => {\n        const multiplierList = [player.buildings[4][3].current, calculateEffects.S4Shared()];\n        let multiplier = 6e7 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 2 : 1;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][3].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Blue hypergiants */\n    S4Build4: (): Overlimit => {\n        const multiplierList = [player.buildings[4][4].current, calculateEffects.S4Shared()];\n        let multiplier = 6e9 * effectsCache.interstellar;\n        const level = player.inflation.vacuum ? 1 : 0;\n        if (player.researches[5][1] >= level) {\n            multiplierList.push(global.buildingsInfo.producing[5][2]);\n            multiplier /= 2 ** level;\n        }\n        return global.buildingsInfo.producing[4][4].setValue(multiplier).multiply(...multiplierList);\n    },\n    /** Quasi-stars */\n    S4Build5: (): Overlimit => {\n        if (player.challenges.active === 0) { return global.buildingsInfo.producing[4][5].setValue('0'); }\n        let multiplier = 2e11 * effectsCache.interstellar;\n        if (player.elements[33] >= 1) { multiplier *= effectsCache.star2; }\n        return global.buildingsInfo.producing[4][5].setValue(multiplier).multiply(player.buildings[4][5].current, calculateEffects.S4Shared(), global.buildingsInfo.producing[5][2]);\n    },\n    /** All Intergalactic Structures productions, have to be after auto Galaxies */\n    stage5Cache: () => {\n        const vacuum = player.inflation.vacuum;\n        const production = global.buildingsInfo.producing[5][3];\n        const moreStars = 10 ** player.researches[5][4];\n\n        let base = (vacuum ? 2 : 6) + calculateEffects.S5Upgrade2();\n        if (vacuum && player.tree[0][4] >= 1) { base += global.milestonesInfo[5].reward[1]; }\n        effectsCache.galaxyBase = base;\n\n        production.setValue(base).power(player.buildings[5][3].true);\n        if (global.mergeInfo.galaxies > 0) {\n            let multiplier3 = (global.mergeInfo.galaxies + 1) / (player.buildings[5][3].true + 1);\n            if (vacuum) { multiplier3 *= calculateEffects.reward[0](); }\n            if (player.upgrades[5][6] === 1) { multiplier3 *= 100 * moreStars; }\n            production.multiply(multiplier3);\n        }\n\n        let globalMult = (vacuum ? 1.4 : 1.6) ** player.strangeness[5][0];\n        if (vacuum && player.tree[0][4] >= 1) { globalMult *= global.milestonesInfo[5].reward[0]; }\n\n        let multiplier2 = 2 * (2 ** player.researches[5][1]) * globalMult;\n        if (player.upgrades[5][1] === 1) { multiplier2 *= calculateEffects.S5Upgrade1(); }\n        if (player.upgrades[5][5] === 1) { multiplier2 *= 1000 * moreStars; }\n        if (vacuum && player.upgrades[3][13] === 1) { multiplier2 *= (calculateEffects.S3Research6() / 2e5) ** 0.5 + 1; }\n        global.buildingsInfo.producing[5][2].setValue(multiplier2).multiply(player.buildings[5][2].current, production, calculateEffects.S5Research3() ** player.buildings[5][2].true).max(2 ** player.researches[5][1]);\n\n        let multiplier1 = 6 * (2 ** player.researches[5][0]) * globalMult;\n        if (player.upgrades[5][0] === 1) { multiplier1 *= calculateEffects.S5Upgrade0(); }\n        if (player.upgrades[5][4] === 1) { multiplier1 *= 1000 * moreStars; }\n        if (vacuum) {\n            if (player.researchesExtra[2][4] >= 1) { multiplier1 *= effectsCache.S2Upgrade3; }\n            if (player.researchesExtra[2][4] >= 3) {\n                multiplier1 *= effectsCache.S2Upgrade4;\n            } else if (player.researchesExtra[2][4] === 2) { multiplier1 *= effectsCache.S2Upgrade4 ** 0.5; }\n        }\n        global.buildingsInfo.producing[5][1].setValue(multiplier1).multiply(player.buildings[5][1].current, production, calculateEffects.S5Research2() ** player.buildings[5][1].true);\n    },\n    stage6Cache: () => {\n        effectsCache.fluid = calculateEffects.darkFluid();\n    },\n    S6Build1: (): number => {\n        let multiplier = 2 * player.buildings[6][1].true * ((1 + player.researches[6][3] / 100) ** player.buildings[6][1].true) * (1 + player.researches[6][2]) * (calculateEffects.effectiveDarkEnergy() ** (player.researchesExtra[6][1] / 2));\n        if (multiplier < 1) { multiplier = 1; }\n        return (global.buildingsInfo.producing[6][1] = multiplier);\n    },\n    verse0: (): number => {\n        const delay = assignBuildingsProduction.S6Build1(); //Required\n        const universes = player.verses[0];\n        let multiplier = (universes.true < 1 ? universes.current : (universes.true ** (universes.true / 4) * (universes.current + 1) / (universes.true + 1))) * effectsCache.fluid * (2 ** (player.researches[6][0] + player.researches[6][1])) * (delay ** (player.researchesExtra[6][3] / 8));\n        if (player.upgrades[6][1] === 1) { multiplier *= (global.mergeInfo.galaxies + 1) ** 0.5; }\n        return (global.versesInfo.producing[0] = multiplier);\n    },\n    /** Quarks */\n    strange0: (iron = player.elements[26] >= 1) => {\n        const vacuum = player.inflation.vacuum;\n        const stageBoost = global.strangeInfo.stageBoost;\n        const strangeQuarks = player.strange[0].current + 1;\n\n        stageBoost[1] = strangeQuarks ** (vacuum ? 0.26 : 0.22);\n        stageBoost[2] = strangeQuarks ** (vacuum ? 0.22 : 0.18);\n        stageBoost[3] = strangeQuarks ** (vacuum ? 0.68 : 0.76);\n        stageBoost[4] = strangeQuarks ** (iron ? 0.32 : 0.16);\n        stageBoost[5] = strangeQuarks ** 0.06;\n    },\n    /** Strangelets */\n    strange1: () => {\n        const information = global.strangeInfo.strangeletsInfo;\n        const strangelets = player.strange[1].current;\n\n        information[0] = (Math.log2(strangelets + 2) - 1) / 100;\n        information[1] = strangelets ** 0.4 / 80 + 1;\n    }\n};\n\nexport const assignResetInformation = {\n    /** And energyType, energyStage, darkEnergy */\n    trueEnergy: (reset = false) => {\n        const energyType = global.dischargeInfo.energyType;\n        if (player.inflation.vacuum) {\n            energyType[1] = [0, 1, 3, 5, 10, 20];\n            energyType[2] = [0, 20, 30, 40, 50, 60, 120];\n            energyType[3] = [0, 20, 40, 60, 120, 160];\n            energyType[4] = [0, 80, 160, 240, 320, 400];\n            energyType[5] = [0, 400, 400, 2000];\n\n            energyType[1][1] += player.strangeness[1][7] * 2;\n            if (player.strangeness[5][10] >= 1) { energyType[5][3] *= 5; }\n        } else { energyType[1] = [0, 1, 5, 20]; }\n\n        let energyTrue = 0;\n        for (let s = 1; s < (player.inflation.vacuum ? 6 : 2); s++) {\n            let add = 0;\n            for (let i = 1; i < energyType[s].length; i++) {\n                if (player.challenges.active === 0 && s !== 1) { energyType[s][i] /= (s >= 4 ? 4 : 2); }\n                if (!reset) { add += energyType[s][i] * player.buildings[s][i as 1].true; }\n            }\n            global.dischargeInfo.energyStage[s] = add;\n            if (!reset) { energyTrue += add; }\n        }\n        global.dischargeInfo.energyTrue = energyTrue;\n\n        //Dark energy\n        energyType[6] = [0, 1];\n        global.dischargeInfo.energyStage[6] = 0;\n        for (let i = 1; i < energyType[6].length; i++) {\n            energyType[6][i] *= 1 + player.researchesExtra[6][2];\n            if (!reset) { global.dischargeInfo.energyStage[6] += energyType[6][i] * player.buildings[6][i as 1].true; }\n        }\n    },\n    newClouds: (): number => {\n        const softcap = calculateEffects.cloudsGain();\n        return (global.vaporizationInfo.get = (player.vaporization.clouds ** (1 / softcap) + player.buildings[2][1][player.researchesExtra[2][0] >= 1 || (player.inflation.vacuum && player.tree[1][5] >= 1) ? 'total' : 'current'].toNumber() / calculateEffects.S2Upgrade2()) ** softcap - player.vaporization.clouds);\n    },\n    maxRank: () => {\n        if (player.inflation.vacuum) {\n            global.accretionInfo.maxRank = player.strangeness[3][9] >= 1 ? 7 : 6;\n        } else {\n            global.accretionInfo.maxRank = player.stage.true >= 4 || (player.stage.true === 3 && player.event) ? 5 : 4;\n        }\n    },\n    solarHardcap: () => {\n        effectsCache.S3SolarDelay = calculateEffects.massGain();\n        let effectS1 = effectsCache.star2;\n        if (player.elements[10] >= 1) { effectS1 *= 2; }\n        if (player.researchesExtra[4][1] >= 1) { effectS1 *= calculateEffects.S4Extra1(); }\n        effectsCache.S1SolarDelay = effectS1;\n\n        global.collapseInfo.solarCap = 0.01235 * effectsCache.S3SolarDelay * effectS1;\n        if (player.strangeness[5][7] >= 1) { global.collapseInfo.solarCap *= global.strangeInfo.stageBoost[5]; }\n        if (player.tree[1][6] >= 3) { global.collapseInfo.solarCap *= 1.01 ** global.accretionInfo.effective; }\n    },\n    /** Have to be after assignResetInformation.newMass() */\n    timeUntil: (): number => {\n        if (player.inflation.vacuum) {\n            assignBuildingsProduction.stage3Cache();\n            assignBuildingsProduction.stage1Cache();\n            const time = (global.collapseInfo.solarCap / 8.96499278339628e-67 - player.buildings[1][0].current.toNumber()) / assignBuildingsProduction.S1Build1() / global.inflationInfo.globalSpeed;\n            return isNaN(time) ? Infinity : time;\n        } else { return 0; }\n    },\n    newMass: () => {\n        if (player.inflation.vacuum) {\n            assignResetInformation.solarHardcap();\n            global.collapseInfo.newMass = Math.min(player.buildings[1][0].current.toNumber() * 8.96499278339628e-67, global.collapseInfo.solarCap); //1.78266192e-33 / 1.98847e33\n        } else { global.collapseInfo.newMass = calculateEffects.massGain(); }\n    },\n    newStars: (reset = false) => {\n        const starCheck = global.collapseInfo.starCheck;\n        if (reset) {\n            starCheck[0] = 0;\n            starCheck[1] = 0;\n            starCheck[2] = 0;\n            return;\n        }\n        const building = player.buildings[4];\n        const stars = player.collapse.stars;\n        starCheck[0] = building[2].trueTotal.moreThan('0') ? Math.max(building[2].true + Math.floor(building[1].true * player.strangeness[4][3] / 10) - stars[0], 0) : 0;\n        starCheck[1] = Math.max(building[3].true - stars[1], 0);\n        starCheck[2] = Math.max(building[4].true + (building[5].true * player.researches[4][5]) - stars[2], 0);\n    },\n    /** Returns Groups Galaxy requirement */\n    mergeReward: (): number => {\n        const researchesExtra = player.researchesExtra[5];\n        const requirement = 50 - calculateEffects.S5Extra4();\n\n        global.mergeInfo.checkReward[0] = researchesExtra[1] >= 2 ?\n            Math.max(Math.floor(global.mergeInfo.galaxies / requirement) - player.merge.rewards[0], 0) :\n            researchesExtra[1] >= 1 ? Math.floor(player.buildings[5][3].true / requirement) : 0;\n        global.mergeInfo.checkReward[1] = researchesExtra[5] >= 1 ? Math.floor(player.buildings[5][3].true / 100) : 0;\n        return requirement;\n    },\n    newFluid: (): number => (global.inflationInfo.newFluid = (Math.log10(Math.max(player.buildings[6][0].current.toNumber(), 10)) + player.darkness.energy) ** 0.2 - 1),\n    /** Interstellar only, also assigns related cache */\n    quarksGain: () => {\n        let multiplier = player.buildings[5][3].current.toNumber() + 1;\n        if (player.inflation.vacuum) { multiplier *= calculateEffects.S5Extra2(player.researchesExtra[5][2] + player.merge.rewards[1]) * (calculateEffects.S2Strange9() ** player.strangeness[2][9]); }\n        effectsCache.interstellarQuarks = multiplier;\n\n        effectsCache.element26 = calculateEffects.element26();\n        global.strangeInfo.quarksGain = player.stage.true >= 6 || player.strange[0].total >= 1 ? calculateEffects.strangeGain(true) : 1;\n    },\n    supervoid: (supervoid = player.challenges.active === 0 && player.challenges.super) => {\n        if (global.collapseInfo.supervoid === supervoid) { return; }\n        global.collapseInfo.supervoid = supervoid;\n        const offset = new Overlimit(`1e${supervoid ? '' : '-'}2`);\n        const startEl = global.elementsInfo.cost;\n        const startU4 = global.upgradesInfo[4].cost as Overlimit[];\n        const startU5 = global.upgradesInfo[5].cost as Overlimit[];\n        const startR4 = global.researchesInfo[4].firstCost as Overlimit[];\n        const startR5 = global.researchesInfo[5].firstCost as Overlimit[];\n        const startE4 = global.researchesExtraInfo[4].firstCost as Overlimit[];\n        const startE5 = global.researchesExtraInfo[5].firstCost as Overlimit[];\n        for (let i = 1; i < startEl.length; i++) { startEl[i].multiply(offset); }\n        for (let i = 0; i < startU4.length; i++) { startU4[i].multiply(offset); }\n        for (let i = 0; i < startU5.length; i++) { startU5[i].multiply(offset); }\n        for (let i = 0; i < startR4.length; i++) { startR4[i].multiply(offset); }\n        for (let i = 0; i < startR5.length; i++) { startR5[i].multiply(offset); }\n        for (let i = 0; i < startE4.length; i++) { startE4[i].multiply(offset); }\n        for (let i = 0; i < startE5.length; i++) { startE5[i].multiply(offset); }\n    }\n};\n\nexport const buyBuilding = (index: number, stageIndex: number, howMany = player.toggles.shop.input, auto = false) => {\n    if (!checkBuilding(index, stageIndex) || (auto ? player.ASR[stageIndex] < index : global.offline.active)) { return; }\n    const building = player.buildings[stageIndex][index as 1];\n\n    let currency; //Readonly\n    let minus;\n    let free = false;\n    let multi = true;\n    if (stageIndex === 1) {\n        currency = player.buildings[1][index - 1].current;\n        if (player.tree[1][7] >= 1) {\n            free = true;\n        } else if (index === 1 && player.inflation.vacuum) {\n            free = player.strangeness[1][8] >= 1 && (player.challenges.supervoid[1] >= 2 || player.researchesExtra[1][2] >= 1);\n        }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][index === 1 ? 0 : 1].current;\n        free = player.tree[1][7] >= 2;\n    } else if (stageIndex === 3) {\n        currency = player.buildings[3][0].current;\n        free = player.tree[1][7] >= 3;\n        if (global.accretionInfo.disableAuto) {\n            if (player.accretion.rank >= 6) {\n                minus = global.collapseInfo.solarCap * 1.98847e33;\n            } else if (player.strangeness[3][4] < 2 && player.challenges.supervoid[1] >= 2) {\n                minus = global.accretionInfo.rankCost[player.accretion.rank];\n            }\n        }\n    } else if (stageIndex === 5 && index === 3) {\n        currency = player.collapse.mass;\n        multi = false;\n    } else if (stageIndex === 6) {\n        currency = player.buildings[6][0].current;\n    } else {\n        currency = player.buildings[4][0].current;\n        free = player.tree[1][7] >= 4;\n    }\n\n    const budget = new Overlimit(currency);\n    if (auto && !free && multi && building.true >= 1) {\n        if (minus !== undefined) { budget.minus(minus); }\n        const divide = stageIndex === 6 && global.inflationInfo.disableAuto ? 1 : player.toggles.shop.wait[stageIndex];\n        if (divide > 1) { budget.divide(player.toggles.shop.wait[stageIndex]); }\n    }\n\n    const total = calculateBuildingsCost(index, stageIndex);\n    if (total.moreThan(budget)) { return; }\n\n    let afford = 1;\n    if (howMany !== 1 && multi) {\n        const scaling = global.buildingsInfo.increase[stageIndex][index]; //Must be >1\n        if (free) {\n            afford = Math.floor(budget.divide(total).log(scaling).toNumber()) + 1;\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n        } else {\n            afford = Math.floor(budget.multiply(scaling - 1).divide(total).plus('1').log(scaling).toNumber());\n\n            if (howMany > 0) {\n                if (afford < howMany) { return; }\n                afford = howMany;\n            }\n            if (afford > 1) { total.multiply(new Overlimit(scaling).power(afford).minus('1').divide(scaling - 1)); }\n        }\n\n        if (!isFinite(afford)) {\n            errorNotify(`Error encountered, couldn't create ${afford} of ${global.buildingsInfo.name[stageIndex][index]}`);\n            return;\n        }\n    }\n    building.true += afford;\n    building.current.plus(afford);\n    building.total.plus(afford);\n    building.trueTotal.plus(afford);\n\n    if (typeof currency === 'object') {\n        if (!free) {\n            currency.minus(total);\n            if (player.inflation.vacuum) {\n                if (stageIndex === 1) {\n                    if (index === 1) { player.buildings[3][0].current.setValue(currency).multiply('1.78266192e-33'); }\n                } else if (stageIndex === 2) {\n                    if (index === 1) { player.buildings[1][5].current.setValue(currency).multiply('6.02214076e23'); }\n                } else if (stageIndex === 3) {\n                    player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33');\n                }\n            }\n        }\n\n        if (player.inflation.vacuum || stageIndex === 1) { addEnergy(afford, index, stageIndex); }\n        if (stageIndex === 1) { //True vacuum only\n            if (index === 5 && player.upgrades[1][8] === 0) { player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23'); }\n        } else if (stageIndex === 2) {\n            if (index === 1) {\n                if (player.buildings[2][2].true < 1) { assignBuildingsProduction.S2Levels(); }\n            } else { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 3) {\n            if (index >= 4) {\n                assignBuildingsProduction.stage3Cache();\n                awardMilestone(1, 3);\n            }\n        } else if (stageIndex === 4) {\n            global.collapseInfo.trueStars += afford;\n        }\n\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Made ${format(afford)} '${global.buildingsInfo.name[stageIndex][index]}'`; }\n        }\n    } else if (stageIndex === 5 && index === 3) {\n        //global.mergeInfo.galaxies = player.buildings[5][3].current.toNumber();\n        reset('galaxy', player.inflation.vacuum ? [1, 2, 3, 4, 5] : [4, 5]);\n        calculateMaxLevel(0, 4, 'researches');\n        calculateMaxLevel(1, 4, 'researches');\n        calculateMaxLevel(2, 4, 'researches');\n        calculateMaxLevel(5, 4, 'researches');\n        awardVoidReward(5);\n        awardMilestone(1, 5);\n        addIntoLog('Galaxy reset');\n        if (!auto) {\n            numbersUpdate();\n            if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Galaxy reset'; }\n        }\n    }\n};\n\n/** Increase is how many new Structures have been gained */\nexport const addEnergy = (increase: number, index: number, stage: number) => {\n    const { discharge } = player;\n    const { dischargeInfo } = global;\n\n    const add = dischargeInfo.energyType[stage][index] * increase;\n    dischargeInfo.energyStage[stage] += add;\n    if (stage === 6) {\n        if (player.upgrades[6][0] !== 1) { return; }\n        player.darkness.energy += add;\n        return;\n    }\n    dischargeInfo.energyTrue += add;\n    discharge.energy += add;\n    if (discharge.energyMax < discharge.energy) { discharge.energyMax = discharge.energy; }\n};\n\nexport const calculateBuildingsCost = (index: number, stageIndex: number): Overlimit => {\n    const scaling = global.buildingsInfo.increase[stageIndex];\n    let firstCost = global.buildingsInfo.firstCost[stageIndex][index];\n    if (stageIndex === 1) {\n        scaling[index] = (140 - effectsCache.S1Upgrade6) / 100;\n        if (index === 1) {\n            if (!player.inflation.vacuum && player.upgrades[1][2] === 1) { firstCost /= 8; }\n        } else if (index === 3) {\n            if (player.upgrades[1][1] === 1) { firstCost /= 16; }\n        } else if (index === 4) {\n            if (player.upgrades[1][2] === 1) { firstCost /= 8; }\n            if (player.researchesExtra[1][0] >= 1) { firstCost /= 16; }\n        }\n    } else if (stageIndex === 3) {\n        if (player.strangeness[3][7] >= 1) { firstCost /= global.strangeInfo.stageBoost[3]; }\n        if (index === 4) {\n            scaling[4] = player.upgrades[3][11] === 1 ? 5 : 10;\n        }\n    } else if (stageIndex === 4) {\n        if (index === 5 && player.challenges.active === 0) {\n            scaling[index] = 10;\n        } else {\n            let increase = 125 + 15 * index;\n            if (player.elements[2] >= 1) { increase -= 10; }\n            if (player.elements[8] >= 1) { increase -= 5; }\n            scaling[index] = increase / 100;\n        }\n        firstCost /= 2 ** player.strangeness[4][1];\n        if (player.researchesExtra[4][3] >= 1) { firstCost /= effectsCache.star1; }\n        if (player.elements[13] >= 1) { firstCost /= 100; }\n    } else if (stageIndex === 5) {\n        if (index === 3) {\n            scaling[3] = player.elements[32] >= 1 ? 110 : 111;\n            if (player.challenges.active === 0) {\n                scaling[3] += 5;\n            } else if (player.challenges.active === 1) {\n                scaling[3] += 1;\n            }\n            scaling[3] /= 100;\n        }\n    } else if (stageIndex === 6) {\n        if (index === 1) {\n            scaling[1] = (140 - 5 * player.researches[6][3]) / 100;\n        }\n    }\n\n    return new Overlimit(scaling[index]).power(player.buildings[stageIndex][index as 1].true).multiply(firstCost);\n};\n\nexport const buyVerse = (index: number) => {\n    if (!checkVerse(index) || global.offline.active || calculateVerseCost(index) > calculateEffects.mergeScore()) { return; }\n\n    const inVoid = player.challenges.active === 0;\n    if (inVoid) {\n        player.inflation.voidVerses++;\n    } else { player.verses[index].true++; }\n    player.verses[index].current++;\n    if (index === 0) {\n        if (player.stage.true < 8) {\n            if (player.verses[0].true === 6) {\n                playEvent(11);\n            } else if (player.stage.true < 7) {\n                player.stage.true = 7;\n                player.event = false;\n                visualTrueStageUnlocks();\n                playEvent(9);\n            }\n        }\n        if (player.stage.active < 6) { setActiveStage(1); }\n        const income = player.verses[0].true + player.inflation.voidVerses;\n        player.cosmon[0].current += income;\n        player.cosmon[0].total += income;\n        player.inflation.resets++;\n        player.time.export[1] = 0;\n        player.time.export[2] = 0;\n        player.challenges.active = null;\n        player.clone = {};\n        if (inVoid) {\n            resetVacuum();\n            addIntoLog('Void Universe reset');\n        } else {\n            player.inflation.vacuum = false;\n            prepareVacuum(false);\n            resetVacuum(1);\n            addIntoLog('Universe reset');\n        }\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Universe reset'; }\n    }\n};\n\nexport const calculateVerseCost = (index: number): number => global.versesInfo.firstCost[index] * global.versesInfo.increase[index] ** (index === 0 && player.challenges.active === 0 ? player.inflation.voidVerses : player.verses[index].true);\n\nconst gainBuildings = (get: number, stageIndex: number, time: number) => {\n    let stageGet = stageIndex;\n    const add = new Overlimit(time);\n    if (stageIndex === 1) {\n        if (!player.inflation.vacuum && get < 5) { get += 2; }\n        add.multiply(assignBuildingsProduction[`S1Build${get + 1}` as 'S1Build1']());\n        if (get === 5 && player.upgrades[1][8] !== 1) { return; }\n        if (!player.inflation.vacuum) { get -= 2; }\n    } else if (stageIndex === 5) {\n        add.multiply(global.buildingsInfo.producing[5][1]).divide(4 ** get);\n        stageGet = 4;\n        get++;\n    } else if (stageIndex === 6) {\n        add.multiply(assignBuildingsProduction.verse0());\n    } else {\n        add.multiply(assignBuildingsProduction[`S${stageIndex}Build${get + 1}` as 'S2Build1']());\n        if (stageIndex === 4) { get = 0; }\n    }\n    if (!add.notEqual('0')) { return; }\n    if (!add.isFinite()) {\n        errorNotify(`Error encountered, couldn't gain ${add} of ${global.buildingsInfo.name[stageGet][get]}`);\n        return;\n    }\n\n    const building = player.buildings[stageGet][get];\n    building.current.plus(add);\n    building.total.plus(add);\n    building.trueTotal.plus(add);\n\n    if (stageIndex === 1) {\n        if (player.inflation.vacuum) {\n            if (get === 0) {\n                player.buildings[3][0].current.setValue(building.current).multiply('1.78266192e-33');\n                player.buildings[3][0].total.setValue(building.total).multiply('1.78266192e-33');\n                awardMilestone(0, 3);\n            } else if (get === 5) {\n                player.buildings[2][0].current.setValue(building.current).divide('6.02214076e23');\n            }\n        }\n    } else if (stageIndex === 2) {\n        if (get === 1) {\n            assignBuildingsProduction.S2Levels();\n        }\n    } else if (stageIndex === 3) {\n        if (get === 0) { //False vacuum only\n            if (player.accretion.rank < 5 && building.current.moreThan('1e30')) { building.current.setValue('1e30'); }\n            awardMilestone(0, 3);\n        }\n    } else if (stageIndex === 6) {\n        const hardcap = calculateEffects.darkHardcap();\n        if (building.current.moreThan(hardcap)) { building.current.setValue(hardcap); }\n    }\n};\n\nconst gainStrange = (time: number) => {\n    const strange = player.strange[0];\n    const add = global.strangeInfo.strangeletsInfo[0] * (global.strangeInfo.quarksGain / player.time.stage) * time;\n    if (add === 0) { return; }\n    if (!isFinite(add)) {\n        errorNotify(`Error encountered, couldn't gain ${add} of ${global.strangeInfo.name[0]}`);\n        return;\n    }\n    strange.current += add;\n    strange.total += add;\n    assignBuildingsProduction.strange0();\n};\n\nexport const buyUpgrades = (upgrade: number, stageIndex: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; } //Auto should had already checked\n\n    let free = false;\n    let currency: Overlimit; //Readonly\n    if (stageIndex === 1) {\n        currency = new Overlimit(player.discharge.energy);\n        if (player.inflation.vacuum) { free = (player.challenges.supervoid[4] >= 1 || player.accretion.rank >= 6) && player.strangeness[1][9] >= 1; }\n    } else if (stageIndex === 2) {\n        currency = player.buildings[2][1].current;\n    } else if (stageIndex === 3) {\n        currency = player.buildings[3][0].current;\n    } else if (stageIndex === 6) {\n        currency = type === 'researchesExtra' ? new Overlimit(player.darkness.energy) : player.buildings[6][0].current;\n    } else {\n        currency = player.buildings[4][0].current;\n    }\n    if (currency.isNaN()) {\n        errorNotify(`Error encountered, prevented spending of NaN ${global.stageInfo.costName[stageIndex]}`);\n        return false;\n    }\n\n    if (type === 'upgrades') {\n        const pointer = global.upgradesInfo[stageIndex];\n\n        if (player.upgrades[stageIndex][upgrade] >= 1 || currency.lessThan(pointer.cost[upgrade])) { return false; }\n        player.upgrades[stageIndex][upgrade]++;\n        if (!free) { currency.minus(pointer.cost[upgrade]); }\n\n        /* Special cases */\n        if (stageIndex === 2) {\n            if (upgrade === 3) {\n                effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3();\n            } else if (upgrade === 4) {\n                effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4();\n            } else if (upgrade >= 5 /*&& upgrade < 9*/) { assignBuildingsProduction.S2FreeBuilds(); }\n        } else if (stageIndex === 4 && upgrade === 1 && global.tabs.current === 'upgrade') { switchTab(); }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New upgrade '${pointer.name[upgrade]}', has been created`; }\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex];\n\n        const tillMax = pointer.max[upgrade] - level[upgrade];\n        if (tillMax <= 0) { return false; }\n        let cost = pointer.cost[upgrade];\n        if (currency.lessThan(cost)) { return false; }\n\n        let newLevels = 1;\n        if (tillMax > 1 && (auto || (player.toggles.max[0] !== global.hotkeys.shift))) {\n            const scaling = pointer.scaling[upgrade]; //Must be >1 (>0 for Stage 1)\n            if (typeof cost === 'number') {\n                if (free) {\n                    newLevels = Math.min(Math.floor((currency.toNumber() - cost) / scaling + 1), tillMax);\n                } else {\n                    const simplify = cost - scaling / 2;\n                    newLevels = Math.min(Math.floor(((simplify ** 2 + 2 * scaling * currency.toNumber()) ** 0.5 - simplify) / scaling), tillMax);\n                    if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                }\n            } else {\n                newLevels = Math.min(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), tillMax);\n                if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost); }\n            }\n        }\n\n        level[upgrade] += newLevels;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        calculateResearchCost(upgrade, stageIndex, type);\n        if (type === 'researches') {\n            if (stageIndex === 1) {\n                if (upgrade === 4) {\n                    global.dischargeInfo.base = calculateEffects.dischargeBase();\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 0 || upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                } else if (upgrade === 2) {\n                    if (player.upgrades[2][3] === 1) { effectsCache.S2Upgrade3 = calculateEffects.S2Upgrade3(); }\n                } else if (upgrade === 3) {\n                    if (player.upgrades[2][4] === 1) { effectsCache.S2Upgrade4 = calculateEffects.S2Upgrade4(); }\n                } else if (upgrade >= 4) {\n                    assignBuildingsProduction.S2FreeBuilds();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(0, 4, 'researches');\n                    if (auto) { buyUpgrades(0, 4, 'researches', true); }\n                    autoResearchesAddOne('researches', 4, 0);\n                }\n            }\n        } else if (type === 'researchesExtra') {\n            if (stageIndex === 1) {\n                if (upgrade === 2) {\n                    let update = false;\n                    if (player.stage.current < 4) {\n                        player.stage.current = player.researchesExtra[1][2] > 1 ? 2 : 3;\n                        if (player.toggles.normal[0]) {\n                            if (player.stage.active < 4) {\n                                setActiveStage(player.stage.current);\n                                update = true;\n                            } else if (global.trueActive < 4) {\n                                global.trueActive = player.stage.current;\n                            }\n                        }\n                    }\n                    stageUpdate(update);\n                    awardVoidReward(1);\n                }\n            } else if (stageIndex === 2) {\n                if (upgrade === 1) {\n                    assignBuildingsProduction.S2Levels();\n                }\n            } else if (stageIndex === 4) {\n                if (upgrade === 2 || upgrade === 3) {\n                    calculateMaxLevel(1, 4, 'researches', true);\n                }\n            } else if (stageIndex === 6) {\n                if (upgrade === 0) {\n                    calculateMaxLevel(1, 6, 'researches', true);\n                } else if (upgrade === 2) {\n                    assignResetInformation.trueEnergy();\n                } else if (upgrade === 3) {\n                    if (player.stage.true < 8 && level[upgrade] >= 4) {\n                        player.stage.true = 8;\n                        player.event = false;\n                        visualTrueStageUnlocks();\n                        playEvent(12);\n                    }\n                }\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for the '${pointer.name[upgrade]}' ${type === 'researches' ? 'Stage' : specialHTML.researchExtraDivHTML[player.stage.active]} Research`; }\n    } else if (type === 'researchesAuto' || type === 'ASR') {\n        if (type === 'ASR') { upgrade = stageIndex; }\n        const pointer = global[`${type}Info`];\n        const level = player[type];\n\n        let effective = level[upgrade];\n        if (effective >= pointer.max[upgrade]) { return false; }\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                if (player.strangeness[4][6] >= 1) { effective--; }\n            } else if (upgrade === 2) {\n                if (player.strangeness[1][4] >= 1) { effective--; }\n                if (player.strangeness[2][4] >= 1) { effective--; }\n                if (player.strangeness[3][4] >= 1) { effective--; }\n                if (player.strangeness[4][4] >= 1) { effective--; }\n                if (player.strangeness[5][9] >= 1) { effective--; }\n            }\n        }\n        const cost = pointer.costRange[upgrade][Math.max(effective, 0)];\n        if (currency.lessThan(cost)) { return false; }\n\n        level[upgrade]++;\n        if (!free) { currency.minus(cost); }\n\n        /* Special cases */\n        if (type === 'researchesAuto') {\n            if (upgrade === 1) {\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 2) {\n                if (player.inflation.vacuum) {\n                    if (level[upgrade] === 1 && player.strangeness[3][4] >= 1) { level[upgrade] = 2; }\n                    if (level[upgrade] === 2 && player.strangeness[2][4] >= 1) { level[upgrade] = 3; }\n                    if (level[upgrade] === 3 && player.strangeness[4][4] >= 1) { level[upgrade] = 4; }\n                    if (level[upgrade] === 4 && player.strangeness[5][9] >= 1) { level[upgrade] = 5; }\n                }\n            }\n        } else if (type === 'ASR') {\n            if (stageIndex === 6 && player.strangeness[6][3] >= 2 && player.clone.depth === 'stage') { player.clone.ASR[6] = level[upgrade]; }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${level[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(level[upgrade])} for the '${type === 'ASR' ? pointer.name : pointer.name[upgrade]}' automatization Research`; }\n    } else if (type === 'elements') {\n        let level = player.elements[upgrade];\n        if (level >= 1) { return false; }\n\n        if (level === 0) {\n            if (currency.lessThan(global.elementsInfo.cost[upgrade])) { return false; }\n            currency.minus(global.elementsInfo.cost[upgrade]);\n        } else if (!auto) { return false; }\n        level = player.researchesAuto[1] >= 1 || level > 0 ? 1 : 0.5;\n        player.elements[upgrade] = level;\n\n        /* Special cases */\n        if (player.collapse.show < upgrade) { player.collapse.show = upgrade; }\n        if (level === 1) {\n            if (player.collapse.maxElement < upgrade) { player.collapse.maxElement = upgrade; }\n\n            if ([7, 16, 20, 25, 28, 31, 34].includes(upgrade)) {\n                calculateMaxLevel(1, 4, 'researches', true);\n            } else if (upgrade === 9 || upgrade === 17) {\n                calculateMaxLevel(0, 4, 'researches', true);\n            } else if (upgrade === 11) {\n                calculateMaxLevel(2, 4, 'researches', true);\n            } else if (upgrade === 26) {\n                player.stage.current = 5;\n                if (player.stage.true < 5) {\n                    player.stage.true = 5;\n                    player.event = false;\n                    visualTrueStageUnlocks();\n                }\n                let update = false;\n                if (player.toggles.normal[0] && (player.strangeness[5][3] >= 1 || !player.inflation.vacuum)) {\n                    if (player.stage.active === 4) {\n                        setActiveStage(5);\n                        update = true;\n                    } else if (global.trueActive === 4) {\n                        global.trueActive = 5;\n                    }\n                }\n                stageUpdate(update);\n                assignBuildingsProduction.strange0();\n                awardVoidReward(4);\n            } else if (upgrade === 35) {\n                calculateMaxLevel(5, 4, 'researches', true);\n            }\n        }\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `New Element '${global.elementsInfo.name[upgrade]}' ${player.elements[upgrade] >= 1 ? 'obtained' : 'awaiting activation'}`; }\n    }\n\n    if (!free) {\n        if (stageIndex === 1) {\n            player.discharge.energy = Math.round(currency.toNumber());\n        } else if (stageIndex === 2) {\n            const drops = player.buildings[2][1];\n            const old = drops.true;\n            if (player.buildings[2][2].true < 1 && currency.lessThan(old)) {\n                drops.true = Math.floor(currency.toNumber());\n                if (player.inflation.vacuum) {\n                    addEnergy(drops.true - old, 1, 2);\n                } else if (currency.lessOrEqual('0')) {\n                    player.buildings[2][0].current.max('2.7753108348135e-3');\n                }\n            }\n        } else if (stageIndex === 3) {\n            if (player.inflation.vacuum) { player.buildings[1][0].current.setValue(currency).divide('1.78266192e-33'); }\n        } else if (stageIndex === 6) {\n            if (type === 'researchesExtra') { player.darkness.energy = Math.round(currency.toNumber()); }\n        }\n    }\n\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const buyStrangeness = (upgrade: number, stageIndex: number, type: 'strangeness' | 'inflations', auto = false): boolean => {\n    if (!auto && (!checkUpgrade(upgrade, stageIndex, type) || global.offline.active)) { return false; }\n\n    if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n        const strangeness = player.strangeness[stageIndex];\n        const currency = player.strange[0];\n\n        if (strangeness[upgrade] >= pointer.max[upgrade] || currency.current < pointer.cost[upgrade]) { return false; }\n        const max = !auto && (player.toggles.max[1] !== global.hotkeys.shift);\n        do {\n            strangeness[upgrade]++;\n            currency.current -= pointer.cost[upgrade];\n            calculateResearchCost(upgrade, stageIndex, 'strangeness');\n        } while (max && currency.current >= pointer.cost[upgrade] && strangeness[upgrade] < pointer.max[upgrade]);\n\n        /* Special cases */\n        if (stageIndex === 1) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[3][4] < 1 ? 1 : player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 0) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] < 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 1 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[1] = global.ASRInfo.max[1]; }\n                player.ASR[1] = global.ASRInfo.max[1];\n            } else if (upgrade === 7) {\n                assignResetInformation.trueEnergy();\n            }\n        } else if (stageIndex === 2) {\n            if (upgrade === 2) {\n                calculateMaxLevel(4, 2, 'researches', true);\n                calculateMaxLevel(5, 2, 'researches', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 2) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 2) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 2 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[2] = global.ASRInfo.max[2]; }\n                player.ASR[2] = global.ASRInfo.max[2];\n            } else if (upgrade === 8) {\n                calculateMaxLevel(2, 2, 'researches', true);\n                calculateMaxLevel(3, 2, 'researches', true);\n            }\n        } else if (stageIndex === 3) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 3, 'researchesExtra', true);\n                calculateMaxLevel(1, 3, 'researchesExtra', true);\n            } else if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[2][4] < 1 ? 2 : player.strangeness[4][4] < 1 ? 3 : player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 1) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 1) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 3 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[3] = global.ASRInfo.max[3]; }\n                player.ASR[3] = global.ASRInfo.max[3];\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[0] = Math.max(strangeness[6], player.clone.researchesAuto[0]); }\n                player.researchesAuto[0] = Math.max(strangeness[6], player.researchesAuto[0]);\n            } else if (upgrade === 9) {\n                calculateMaxLevel(2, 0, 'researchesAuto', true);\n                global.debug.rankUpdated = null;\n                assignResetInformation.maxRank();\n                if (player.strangeness[5][9] >= 1) {\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 4) { player.clone.researchesAuto[2] = 5; }\n                    if (player.researchesAuto[2] === 4) { player.researchesAuto[2] = 5; }\n                }\n            }\n        } else if (stageIndex === 4) {\n            if (upgrade === 4) {\n                if (player.inflation.vacuum) {\n                    const maxLevel = player.strangeness[5][9] < 1 ? 4 : 5;\n                    if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 3) { player.clone.researchesAuto[2] = maxLevel; }\n                    if (player.researchesAuto[2] === 3) { player.researchesAuto[2] = maxLevel; }\n                } else if (player.stage.current === 4 && player.researchesAuto[2] < 1) { player.researchesAuto[2] = 1; }\n            } else if (upgrade === 5) {\n                if (player.clone.depth === 'stage') { player.clone.ASR[4] = global.ASRInfo.max[4]; }\n                player.ASR[4] = global.ASRInfo.max[4];\n            } else if (upgrade === 6) {\n                if (player.clone.depth === 'stage') { player.clone.researchesAuto[1] = Math.max(strangeness[6], player.clone.researchesAuto[1]); }\n                player.researchesAuto[1] = Math.max(strangeness[6], player.researchesAuto[1]);\n                for (let i = 1; i < playerStart.elements.length; i++) {\n                    i = player.elements.indexOf(0.5, i);\n                    if (i < 1) { break; }\n                    buyUpgrades(i, 4, 'elements', true);\n                }\n            } else if (upgrade === 8) {\n                if (player.clone.depth === 'stage') { player.clone.elements[0] = 1; }\n                if (player.elements[0] < 1) { player.elements[0] = 1; }\n            }\n        } else if (stageIndex === 5) {\n            if (upgrade === 3) {\n                if (player.inflation.vacuum) { stageUpdate(false); }\n                if (player.challenges.active === 0 && player.challenges.super && player.strangeness[3][9] === 0) {\n                    global.strangenessInfo[3].cost[9] = 0;\n                    buyStrangeness(9, 3, 'strangeness', true);\n                }\n            } else if (upgrade === 4) {\n                if (strangeness[5] >= 1) {\n                    if (player.clone.depth === 'stage') { player.clone.ASR[5] = global.ASRInfo.max[5]; }\n                    player.ASR[5] = global.ASRInfo.max[5];\n                }\n            } else if (upgrade === 5) {\n                const newLevel = strangeness[4] >= 1 ? global.ASRInfo.max[5] : 2;\n                if (player.clone.depth === 'stage') { player.clone.ASR[5] = newLevel; }\n                player.ASR[5] = newLevel;\n            } else if (upgrade === 9) {\n                if (player.clone.depth === 'stage' && player.clone.researchesAuto[2] === 4) { player.clone.researchesAuto[2] = 5; }\n                if (player.researchesAuto[2] === 4) { player.researchesAuto[2] = 5; }\n            } else if (upgrade === 10) {\n                assignResetInformation.trueEnergy();\n            }\n        } else if (stageIndex === 6) {\n            if (upgrade === 2) {\n                calculateMaxLevel(8, 1, 'strangeness', true);\n                calculateMaxLevel(0, 4, 'strangeness', true);\n                calculateMaxLevel(3, 4, 'strangeness', true);\n                calculateMaxLevel(4, 4, 'strangeness', true);\n            } else if (upgrade === 3) {\n                calculateMaxLevel(0, 6, 'ASR', true);\n            }\n        }\n        assignBuildingsProduction.strange0();\n        if (!auto && globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${strangeness[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(strangeness[upgrade])} for the '${pointer.name[upgrade]}' ${global.stageInfo.word[stageIndex]} Strangeness`; }\n    } else if (type === 'inflations') {\n        const pointer = global.treeInfo[stageIndex];\n        const tree = player.tree[stageIndex];\n        const currency = player.cosmon[stageIndex];\n\n        if (tree[upgrade] >= pointer.max[upgrade] || currency.current < pointer.cost[upgrade]) { return false; }\n        const max = !auto && (player.toggles.max[2] !== global.hotkeys.shift);\n        do {\n            tree[upgrade]++;\n            currency.current -= pointer.cost[upgrade];\n            calculateResearchCost(upgrade, stageIndex, 'inflations');\n        } while (max && currency.current >= pointer.cost[upgrade] && tree[upgrade] < pointer.max[upgrade]);\n\n        /* Special cases */\n        if (!auto && stageIndex === 0 && (getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') {\n            global.loadouts.input.push(upgrade);\n            loadoutsVisual(global.loadouts.input);\n        }\n        if (stageIndex === 0) {\n            if (upgrade === 0) {\n                if (player.tree[1][2] < 1) {\n                    for (let i = 0; i < global.challengesInfo.length; i++) {\n                        assignChallengeInformation(i);\n                    }\n                    for (let s = 1; s < playerStart.milestones.length; s++) {\n                        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n                            assignMilestoneInformation(i, s);\n                        }\n                    }\n                }\n            } else if (upgrade === 5) {\n                for (let i = 0; i < global.challengesInfo.length; i++) {\n                    assignChallengeInformation(i);\n                }\n            }\n        } else if (stageIndex === 1) {\n            if (upgrade === 2) {\n                calculateMaxLevel(0, 0, 'inflations', true);\n                for (let i = 0; i < global.challengesInfo.length; i++) {\n                    assignChallengeInformation(i);\n                }\n                for (let s = 1; s < playerStart.milestones.length; s++) {\n                    for (let i = 0; i < playerStart.milestones[s].length; i++) {\n                        assignMilestoneInformation(i, s);\n                    }\n                }\n            } else if (upgrade === 3) {\n                calculateMaxLevel(2, 0, 'inflations', true);\n            } else if (upgrade === 5) {\n                calculateMaxLevel(0, 2, 'researchesExtra', true);\n                calculateMaxLevel(9, 2, 'strangeness', true);\n            } else if (upgrade === 6) {\n                calculateMaxLevel(0, 4, 'researches', true);\n                calculateMaxLevel(9, 3, 'strangeness', true);\n            }\n        }\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Level increased ${tree[upgrade] >= pointer.max[upgrade] ? 'and maxed at' : 'to'} ${format(tree[upgrade])} for the '${pointer.name[upgrade]}' Inflation`; }\n    }\n\n    if (!auto) { numbersUpdate(); }\n    return true;\n};\n\nexport const loadoutsLoadAuto = () => {\n    const array = [];\n    for (let i = 0; i < player.tree[0].length; i++) {\n        for (let r = player.tree[0][i]; r > 0; r--) { array.push(i); }\n    }\n    global.loadouts.input = array;\n    loadoutsVisual(array);\n};\n/** Returns true if refund successfull or nothing to refund */\nexport const inflationRefund = async(noConfirmation = false, loadout = false): Promise<boolean> => {\n    if (global.offline.active) { return false; }\n    const inflaton = player.cosmon[0];\n    if (inflaton.current === inflaton.total && player.tree[0][0] < 1) { return true; }\n    const challenge = player.challenges.active;\n    if (!noConfirmation && !await Confirm(loadout ? 'Refund basic Inflations before loading this loadout?' :\n        `This will force a Stage reset${challenge !== null ? ' and restart current Challenge' : ''}, continue?`)) { return loadout; }\n\n    if (challenge !== null) { challengeReset(); }\n    stageFullReset();\n    if (challenge !== null) { challengeReset(challenge); }\n\n    inflaton.current = inflaton.total;\n    for (let i = 0; i < playerStart.tree[0].length; i++) {\n        player.tree[0][i] = 0;\n        calculateResearchCost(i, 0, 'inflations');\n    }\n\n    /* Special cases */\n    addIntoLog('Inflations refunded');\n    for (let i = 0; i < global.challengesInfo.length; i++) {\n        assignChallengeInformation(i);\n    }\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    if (!loadout) {\n        if ((getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') { loadoutsVisual(global.loadouts.input = []); }\n        numbersUpdate();\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Inflations have been refunded'; }\n    }\n    return true;\n};\n\nexport const calculateResearchCost = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'strangeness' | 'inflations') => {\n    if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n\n        if (typeof pointer.cost[research] === 'number') {\n            pointer.cost[research] = (pointer.firstCost[research] as number) + pointer.scaling[research] * player[type][stageIndex][research];\n        } else {\n            (pointer.cost[research] as Overlimit).setValue(pointer.scaling[research]).power(player[type][stageIndex][research]).multiply(pointer.firstCost[research]);\n        }\n    } else if (type === 'strangeness') {\n        const pointer = global.strangenessInfo[stageIndex];\n\n        pointer.cost[research] = player.inflation.vacuum ?\n            Math.floor(Math.round((pointer.firstCost[research] * pointer.scaling[research] ** player.strangeness[stageIndex][research]) * 100) / 100) :\n            Math.floor(Math.round((pointer.firstCost[research] + pointer.scaling[research] * player.strangeness[stageIndex][research]) * 100) / 100);\n    } else if (type === 'inflations') {\n        const pointer = global.treeInfo[stageIndex];\n\n        pointer.cost[research] = Math.floor(Math.round((pointer.firstCost[research] + pointer.scaling[research] * player.tree[stageIndex][research]) * 100) / 100);\n    }\n};\n\nexport const calculateMaxLevel = (research: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations', addAuto = false) => {\n    let max = null as unknown as number;\n    if (type === 'researches') {\n        if (stageIndex === 2) {\n            if (research === 2) {\n                max = 4;\n                if (player.strangeness[2][8] >= 1) { max += 3; }\n            } else if (research === 3) {\n                max = 4;\n                if (player.strangeness[2][8] >= 2) { max++; }\n            } else if (research === 4) {\n                max = 2;\n                if (player.strangeness[2][2] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.strangeness[2][2] >= 2) { max++; }\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 3 + (3 * player.researches[4][2]) + (3 * player.researches[4][3]);\n                if (player.elements[9] >= 1) { max += 12; }\n                if (player.elements[17] >= 1) { max += 24; }\n                if (player.inflation.vacuum && player.tree[1][6] >= 2) { max += Math.floor(global.accretionInfo.effective); }\n            } else if (research === 1) {\n                max = 2 + player.researchesExtra[4][2] + player.researchesExtra[4][3];\n                if (player.elements[7] >= 1) { max += 2; }\n                if (player.elements[16] >= 1) { max++; }\n                if (player.elements[20] >= 1) { max++; }\n                if (player.elements[25] >= 1) { max++; }\n                if (player.elements[28] >= 1) { max++; }\n                if (player.elements[31] >= 1) { max++; }\n                if (player.elements[34] >= 1) { max++; }\n            } else if (research === 2) {\n                max = 1;\n                if (player.elements[11] >= 1) { max++; }\n            } else if (research === 5) {\n                max = 1;\n                if (player.elements[35] >= 1) { max++; }\n            }\n        } else if (stageIndex === 5) {\n            if (research === 0 || research === 1) {\n                max = player.inflation.vacuum ? 4 : 3;\n            } else if (research === 2 || research === 3) {\n                max = player.verses[0].true >= 5 ? 8 : player.verses[0].true >= 4 ? 4 : 2;\n            }\n        } else if (stageIndex === 6) {\n            if (research === 1) {\n                max = 14 + player.researchesExtra[6][0];\n            }\n        }\n    } else if (type === 'researchesExtra') {\n        if (stageIndex === 2) {\n            if (research === 0) {\n                max = player.inflation.vacuum && player.tree[1][5] >= 2 ? 4 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = Math.floor(14 + (2 * calculateEffects.effectiveRank()));\n                if (player.strangeness[3][2] >= 1) { max += 6; }\n            } else if (research === 1) {\n                max = 6;\n                if (player.strangeness[3][2] >= 2) { max += 2; }\n            } else if (research === 4) {\n                max = player.accretion.rank - 2;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 1) {\n                max = player.verses[0].true >= 4 ? 2 : 1;\n            } else if (research === 2) {\n                max = player.verses[0].true >= 5 ? 8 : 2;\n            } else if (research === 3) {\n                max = player.verses[0].true >= 5 ? 2 : 1;\n            } else if (research === 4) {\n                max = player.verses[0].true >= 6 ? 2 : 1;\n            }\n        }\n    } else if (type === 'researchesAuto') {\n        if (research === 2) {\n            max = player.inflation.vacuum ? (player.strangeness[3][9] >= 1 ? 5 : 4) : 1;\n        }\n    } else if (type === 'ASR') {\n        if (stageIndex === 1) {\n            max = player.inflation.vacuum ? 5 : 3;\n        } else if (stageIndex === 2) {\n            max = player.inflation.vacuum ? 6 : 5;\n        } else if (stageIndex === 3) {\n            max = player.inflation.vacuum ? 5 : 4;\n        } else if (stageIndex === 4) {\n            max = player.inflation.vacuum ? 5 : 4;\n        } else if (stageIndex === 6) {\n            max = player.strangeness[6][3] >= 1 ? 1 : 0;\n        }\n    } else if (type === 'strangeness') {\n        if (stageIndex === 1) {\n            if (research === 0) {\n                max = 6;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 8) {\n                max = player.strangeness[6][2] >= 3 ? 3 : 2;\n            }\n        } else if (stageIndex === 2) {\n            if (research === 1) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 9) {\n                max = player.tree[1][5] >= 4 ? 2 : 1;\n            }\n        } else if (stageIndex === 3) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 4) {\n                max = player.inflation.vacuum && player.challenges.void[4] >= 1 ? 2 : 1;\n            } else if (research === 9) {\n                max = player.tree[1][6] >= 4 ? 2 : 1;\n            }\n        } else if (stageIndex === 4) {\n            if (research === 0) {\n                max = 8;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n                if (player.strangeness[6][2] >= 2) { max += 4; }\n            } else if (research === 1) {\n                max = 4;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 3) {\n                max = 2;\n                if (player.strangeness[6][2] >= 4) { max += 4; }\n            } else if (research === 4) {\n                max = 1;\n                if (player.inflation.vacuum) {\n                    if (player.challenges.void[4] >= 1) { max++; }\n                    if (player.strangeness[6][2] >= 1) { max++; }\n                }\n            } else if (research === 6) {\n                max = player.inflation.vacuum || player.milestones[4][0] >= 8 || player.verses[0].current >= 3 ? 2 : 1;\n            }\n        } else if (stageIndex === 5) {\n            if (research === 2) {\n                max = 2;\n                if (player.inflation.vacuum) { max += Math.min(player.challenges.void[3], 4); }\n            } else if (research === 6) {\n                max = !player.inflation.vacuum && (player.milestones[5][0] >= 8 || player.verses[0].current >= 5) ? 2 : 1;\n            } else if (research === 8) {\n                max = player.challenges.void[5] >= 2 ? 2 : 1;\n            }\n        }\n    } else if (type === 'inflations') {\n        if (stageIndex === 0) {\n            if (research === 0) {\n                max = 2;\n                if (player.tree[1][2] >= 2) { max += player.tree[1][2] - 1; }\n            } else if (research === 2) {\n                max = 8 + player.tree[1][3];\n            }\n        }\n    }\n    if (max !== null) {\n        if (max < 0) { max = 0; }\n        if (type === 'inflations') {\n            global.treeInfo[stageIndex].max[research] = max;\n        } else if (type === 'researchesAuto' || type === 'ASR') {\n            global[`${type}Info`].max[type === 'ASR' ? stageIndex : research] = max;\n        } else {\n            global[`${type}Info`][stageIndex].max[research] = max;\n        }\n    }\n\n    if (type !== 'researchesAuto' && type !== 'ASR') { calculateResearchCost(research, stageIndex, type); }\n    if (addAuto && (type === 'researches' || type === 'researchesExtra')) { autoResearchesAddOne(type, stageIndex, research); }\n};\n\nexport const autoUpgradesSet = (which: number) => {\n    if (!player.toggles.auto[5]) { return; }\n    const array = [];\n    const level = player.upgrades[which];\n    for (let i = 0; i < global.upgradesInfo[which].maxActive; i++) {\n        if (level[i] < 1) { array.push(i); }\n    }\n    if (which === 1) {\n        const startCost = global.upgradesInfo[which].cost as number[];\n        array.sort((a, b) => startCost[a] - startCost[b]);\n    } else {\n        const startCost = global.upgradesInfo[which].cost as Overlimit[];\n        array.sort((a, b) => compareFunc(startCost[a], startCost[b]));\n    }\n    global.automatization.autoU[which] = array;\n};\n\nconst autoUpgradesBuy = (stageIndex: number) => {\n    const auto = global.automatization.autoU[stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < 1) { return; }\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, stageIndex, 'upgrades')) { continue; }\n        buyUpgrades(index, stageIndex, 'upgrades', true);\n\n        if (player.upgrades[stageIndex][index] >= 1) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const autoResearchesSet = (type: 'researches' | 'researchesExtra', which: number) => {\n    if (!player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n    const array = [];\n    const level = player[type][which];\n    const pointer = global[`${type}Info`][which];\n    for (let i = 0; i < pointer.maxActive; i++) {\n        if (level[i] < pointer.max[i]) { array.push(i); }\n    }\n\n    const cost = pointer.cost;\n    if (typeof pointer.cost[0] === 'number') {\n        array.sort((a, b) => (cost[a] as number) - (cost[b] as number));\n    } else {\n        array.sort((a, b) => compareFunc(cost[a] as Overlimit, cost[b]));\n    }\n    global.automatization[type === 'researches' ? 'autoR' : 'autoE'][which] = array;\n};\n/** Add Research if it isn't already present */\nconst autoResearchesAddOne = (type: 'researches' | 'researchesExtra', stageIndex: number, which: number) => {\n    const pointer = global[`${type}Info`][stageIndex];\n    if (player[type][stageIndex][which] >= pointer.max[which] || !player.toggles.auto[type === 'researches' ? 6 : 7]) { return; }\n\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.includes(which)) { return; }\n    const cost = pointer.cost[which];\n    for (let i = 0; i < auto.length; i++) {\n        if (typeof cost === 'number' ? cost < (pointer.cost[auto[i]] as number) : cost.lessThan(pointer.cost[auto[i]])) {\n            auto.splice(i, 0, which);\n            return;\n        }\n    }\n    auto.push(which);\n};\n\nconst autoResearchesBuy = (type: 'researches' | 'researchesExtra', stageIndex: number) => {\n    const auto = global.automatization[type === 'researches' ? 'autoR' : 'autoE'][stageIndex];\n    if (auto.length < 1 || player.researchesAuto[0] < (type === 'researches' ? 2 : 3)) { return; }\n    const pointer = global[`${type}Info`][stageIndex];\n\n    for (let i = 0; i < auto.length; i++) {\n        if (!checkUpgrade(auto[i], stageIndex, type)) { continue; }\n        const bought = buyUpgrades(auto[i], stageIndex, type, true);\n\n        if (player[type][stageIndex][auto[i]] >= pointer.max[auto[i]]) {\n            auto.splice(i, 1);\n            i--;\n        } else if (bought) {\n            const index = i;\n            const current = pointer.cost[auto[index]];\n            if (typeof current === 'number') {\n                while (current > (pointer.cost[auto[i + 1]] as number)) { i++; }\n            } else {\n                while (current.moreThan(pointer.cost[auto[i + 1]])) { i++; }\n            }\n            if (index === i) { break; }\n            auto.splice(i, 0, auto.splice(index, 1)[0]);\n            i = index - 1;\n        } else { break; }\n    }\n};\n\nexport const autoElementsSet = () => {\n    if (!player.toggles.auto[8]) { return; }\n\n    const array = [];\n    const elements = player.elements;\n    for (let i = 1; i < (player.inflation.vacuum ? playerStart.elements.length : 29); i++) {\n        if (elements[i] < 1) { array.push(i); }\n    }\n    global.automatization.elements = array;\n};\n\nconst autoElementsBuy = () => {\n    const auto = global.automatization.elements;\n    if (auto.length < 1 || player.researchesAuto[1] < 2) { return; }\n    const elements = player.elements;\n\n    for (let i = 0; i < auto.length; i++) {\n        const index = auto[i];\n\n        if (!checkUpgrade(index, 4, 'elements')) { break; }\n        buyUpgrades(index, 4, 'elements', true);\n\n        if (elements[index] > 0) {\n            auto.splice(i, 1);\n            i--;\n        } else { break; }\n    }\n};\n\nexport const toggleSwap = (number: number, type: 'buildings' | 'normal' | 'hover' | 'max' | 'auto', change = false) => {\n    const toggles = type === 'buildings' ? player.toggles.buildings[player.stage.active] : player.toggles[type];\n\n    if (change) {\n        if (global.offline.active) { return; }\n        if (type === 'buildings') {\n            const maxLength = playerStart.buildings[player.stage.active].length;\n            if (number === 0) {\n                toggles[0] = !toggles[0];\n                for (let i = 1; i < maxLength; i++) {\n                    toggles[i] = toggles[0];\n                    toggleSwap(i, 'buildings');\n                }\n            } else {\n                if (number >= maxLength) { return; }\n\n                let anyOn = false;\n                toggles[number] = !toggles[number];\n                for (let i = 1; i <= player.ASR[player.stage.active]; i++) {\n                    if (toggles[i]) {\n                        anyOn = true;\n                        break;\n                    }\n                }\n                if (toggles[0] !== anyOn) {\n                    toggles[0] = anyOn;\n                    toggleSwap(0, 'buildings');\n                }\n            }\n        } else { toggles[number] = !toggles[number]; }\n    }\n\n    let extraText;\n    let toggleHTML;\n    if (type === 'buildings') {\n        toggleHTML = getId(`toggleBuilding${number}`);\n        extraText = number === 0 ? 'All ' : 'Auto ';\n    } else if (type === 'hover') {\n        toggleHTML = getId(`toggleHover${number}`);\n        extraText = 'Hover to create ';\n    } else if (type === 'max') {\n        toggleHTML = getId(`toggleMax${number}`);\n        extraText = 'Max create ';\n    } else if (type === 'auto') {\n        toggleHTML = getId(`toggleAuto${number}`);\n        extraText = 'Auto ';\n    } else {\n        toggleHTML = getId(`toggleNormal${number}`);\n        extraText = '';\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = `${extraText}OFF`;\n    } else {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = `${extraText}ON`;\n    }\n};\n\nexport const toggleConfirm = (number: number, change = false) => {\n    const toggles = player.toggles.confirm;\n    if (change) { toggles[number] = toggles[number] === 'Safe' ? 'None' : 'Safe'; }\n\n    const toggleHTML = getId(`toggleConfirm${number}`);\n    toggleHTML.textContent = toggles[number];\n    if (toggles[number] === 'Safe') {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n    }\n};\n\n/** Returns true for Auto, only if reset happened */\nexport const stageResetCheck = (stageIndex: number, quarks = null as number | null): boolean => {\n    if (stageIndex === 5) {\n        assignResetInformation.quarksGain(); //Also visually updates numbers\n        if (quarks !== null) {\n            if (player.elements[26] < 0.5) { return false; }\n\n            const { stage } = player;\n            const peakCheck = global.strangeInfo.quarksGain / player.time.stage;\n            if (stage.peak < peakCheck) {\n                stage.peak = peakCheck;\n                stage.peakedAt = player.time.stage;\n            }\n\n            if (player.elements[26] < 1) { return false; }\n            if (player.strangeness[5][8] >= 1) { gainStrange(quarks); }\n\n            if (!player.toggles.auto[0] || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2) || player.challenges.active === 0 ||\n                stage.input === 0 || stage.input > player.time.stage || (player.toggles.normal[2] && player.inflation.vacuum && player.upgrades[5][3] === 1 && player.merge.resets < calculateEffects.mergeMaxResets())) { return false; }\n            stageResetReward(stageIndex);\n            return true;\n        }\n        return player.elements[26] >= 1;\n    } else if (stageIndex === 3) {\n        if (player.buildings[3][0].current.lessThan('2.45576045e31')) { return false; }\n    } else if (stageIndex === 2) {\n        if (player.buildings[2][1].current.lessThan('1.19444e29')) { return false; }\n    } else if (stageIndex === 1) {\n        if (player.buildings[1][3].current.lessThan('1.67133125e21')) { return false; }\n    } else { return false; }\n\n    if (quarks !== null) { //Just checks if auto\n        if (player.strangeness[5][6] < 1) { return false; }\n        if (player.toggles.normal[2]) { //False vacuum only\n            const info = global.milestonesInfo[stageIndex];\n            const unlimitedTime = player.tree[0][4] >= 1;\n            for (let i = 0; i < info.scaling.length; i++) {\n                if (player.milestones[stageIndex][i] < info.scaling[i].length && (unlimitedTime || info.reward[i] >= player.time.stage)) { return false; }\n            }\n        }\n        stageResetReward(stageIndex);\n    }\n    return true;\n};\nexport const stageResetUser = async() => {\n    if (global.offline.active) { return; }\n    const active = player.inflation.vacuum || (player.stage.active === 4 && (player.stage.true >= 7 || player.event)) ? 5 : player.stage.active;\n    if (!stageResetCheck(active)) { return; }\n\n    if (player.toggles.confirm[0] !== 'None' && active === 5) {\n        const array = [];\n        if (player.upgrades[5][3] === 1) {\n            if (player.inflation.vacuum) {\n                if (calculateVerseCost(0) <= calculateEffects.mergeScore()) {\n                    array.push('can create an Universe');\n                }\n                if (player.merge.resets < calculateEffects.mergeMaxResets()) {\n                    array.push('still capable to do more Merge resets');\n                }\n            } else if (player.buildings[5][3].true >= calculateEffects.mergeRequirement()) {\n                array.push('can Collapse Vacuum into its true state');\n            }\n        }\n        if (player.researchesExtra[5][0] >= 1) {\n            const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n            if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n                array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n            }\n        }\n        if (player.challenges.active === 0) {\n            array.push('currently inside the Void');\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Stage reset because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!stageResetCheck(active)) { return Notify('Stage reset canceled, requirements are no longer met'); }\n        }\n    }\n    stageResetReward(active);\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Stage reset'; }\n};\n\nconst stageResetReward = (stageIndex: number) => {\n    const { stage } = player;\n\n    let fullReset = true;\n    let update: null | boolean = true;\n    const resetThese = player.inflation.vacuum ? [1, 2, 3, 4, 5] : [stageIndex];\n    if (player.inflation.vacuum) {\n        if (stage.active === 1 || stage.active >= 6) {\n            update = false;\n        } else { setActiveStage(1); }\n        stage.current = 1;\n        if (stage.true >= 7) {\n            resetThese.push(6);\n        } else if (stage.resets < 1) { playEvent(7); }\n    } else if (stageIndex === stage.current) {\n        if (stageIndex < 4) {\n            const check = stage.current === stage.active;\n            stage.current++;\n            if (stage.current === 2 && player.milestones[2][1] >= 7) { stage.current++; }\n            if (stage.current === 3 && player.milestones[3][1] >= 7) { stage.current++; }\n            if (check) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            if (stage.current > stage.true) {\n                stage.true = stage.current;\n                player.event = false;\n                visualTrueStageUnlocks();\n            }\n        } else {\n            stage.current = player.milestones[1][1] < 6 ? 1 : player.milestones[2][1] < 7 ? 2 : player.milestones[3][1] < 7 ? 3 : 4;\n            if ((stage.active === 4 && stage.current !== 4) || stage.active === 5) {\n                setActiveStage(stage.current);\n            } else { update = false; }\n            resetThese.unshift(4);\n        }\n        if (stage.true >= 7) { resetThese.push(6); }\n    } else {\n        update = stageIndex === stage.active ? false : null;\n        fullReset = false;\n    }\n\n    if (stage.true >= 5) {\n        const { strange } = player;\n        const exportReward = player.time.export;\n        const conversion = (1 + player.tree[0][5]) * player.tree[0][5] / 50;\n        const quarks = stageIndex >= 4 ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n        const strangelets = player.strangeness[5][8] >= 1 ? calculateEffects.strangeGain(stageIndex >= 4, false) : 0;\n        strange[0].current += quarks;\n        strange[0].total += quarks;\n        if (strangelets > 0) {\n            strange[1].current += strangelets;\n            strange[1].total += strangelets;\n            assignBuildingsProduction.strange1();\n            const strangeletsTest = strangelets * conversion + exportReward[2];\n            if (strangeletsTest > strangelets) {\n                exportReward[2] = strangeletsTest;\n            } else if (strangelets > exportReward[2]) {\n                exportReward[2] = strangelets;\n            }\n        }\n        assignBuildingsProduction.strange0(false);\n        const quarksTest = quarks * conversion + exportReward[1];\n        if (quarksTest > quarks) {\n            exportReward[1] = quarksTest;\n        } else if (quarks > exportReward[1]) {\n            exportReward[1] = quarks;\n        }\n        if (stageIndex >= 4) {\n            const history = player.history.stage;\n            const storage = global.historyStorage.stage;\n            const realTime = player.time.stage;\n            storage.unshift([realTime, quarks, strangelets]);\n            if (storage.length > 100) { storage.length = 100; }\n            if (quarks / realTime > history.best[1] / history.best[0]) {\n                history.best = [realTime, quarks, strangelets];\n            }\n        }\n        addIntoLog(`${player.inflation.vacuum ? '' : `${global.stageInfo.word[stageIndex === 5 ? 4 : stageIndex]} `}Stage reset, new Strange quarks are ${format(strange[0].current, { padding: true })}${stageIndex === 5 ? `\\nPeak was ${format(player.stage.peak, { type: 'income' })}, reached at ${format(player.stage.peakedAt, { type: 'time' })}` : ''}`);\n    } else { addIntoLog(`${global.stageInfo.word[stageIndex]} Stage ended`); }\n\n    stage.resets++;\n    resetStage(resetThese, update, fullReset);\n};\nconst stageFullReset = (noReward = false) => {\n    const vacuum = player.inflation.vacuum;\n    const current = vacuum ? 5 : player.stage.current;\n    if (!vacuum) {\n        if (current !== 1 && player.milestones[1][1] >= 6) {\n            if (!noReward && stageResetCheck(1)) {\n                stageResetReward(1);\n            } else {\n                resetStage([1], false, false);\n            }\n        }\n        if (current !== 2 && player.milestones[2][1] >= 7) {\n            if (!noReward && stageResetCheck(2)) {\n                stageResetReward(2);\n            } else {\n                resetStage([2], false, false);\n            }\n        }\n        if (current !== 3 && player.milestones[3][1] >= 7) {\n            if (!noReward && stageResetCheck(3)) {\n                stageResetReward(3);\n            } else {\n                resetStage([3], false, false);\n            }\n        }\n    }\n\n    if (!noReward && stageResetCheck(current)) {\n        stageResetReward(current);\n    } else {\n        const resetThese = vacuum ? [1, 2, 3, 4, 5] : [current];\n        if (player.stage.true >= 7) { resetThese.push(6); }\n        let update = false;\n        if (vacuum) {\n            if (player.stage.active !== 1 && player.stage.active < 6) {\n                setActiveStage(1);\n                update = true;\n            }\n            player.stage.current = 1;\n        }\n        resetStage(resetThese, update);\n    }\n};\n\nexport const switchStage = (stage: number, active = stage) => {\n    if (!global.stageInfo.activeAll.includes(stage) || player.stage.active === stage) {\n        if (player.stage.active === stage && global.trueActive !== stage) {\n            global.trueActive = stage;\n            getId(`stageSwitch${stage}`).style.textDecoration = 'underline';\n        }\n        visualUpdate();\n        numbersUpdate();\n        return;\n    }\n\n    setActiveStage(stage, active);\n    stageUpdate();\n};\n\n/** Doesn't check for Stage being unlocked, requires stageUpdate() call afterwards */\nexport const setActiveStage = (stage: number, active = stage) => {\n    if (!global.offline.active) { getId(`stageSwitch${player.stage.active}`).style.textDecoration = ''; }\n    player.stage.active = stage;\n    global.trueActive = active;\n    if (global.offline.active) {\n        global.offline.stage[0] = stage;\n        return;\n    }\n    getId(`stageSwitch${stage}`).style.textDecoration = 'underline' + (global.trueActive !== stage ? ' dashed' : '');\n\n    if (global.tabs.current === 'Elements') {\n        if (stage !== 4 && stage !== 5) { switchTab('upgrade'); }\n    }\n    if (global.tabs.current === 'upgrade') {\n        if (global.tabs.upgrade.current === 'Elements' && stage !== 4 && stage !== 5) { switchTab('upgrade', 'Upgrades'); }\n    }\n};\n\n/** Returns true for Auto, only if reset happened */\nconst dischargeResetCheck = (goals = false): boolean => {\n    if (player.upgrades[1][5] !== 1) { return false; }\n    const info = global.dischargeInfo;\n    const energy = player.discharge.energy;\n    const level = player.strangeness[1][4];\n\n    info.next = calculateEffects.dischargeCost();\n    if (goals) {\n        if (level >= 2) {\n            while (info.energyTrue >= info.next) {\n                dischargeReset(true);\n                info.total = calculateEffects.effectiveGoals();\n                info.next = calculateEffects.dischargeCost();\n            }\n        } else if (level < 1 && (player.researchesAuto[2] < 1 || (!player.inflation.vacuum && player.stage.current !== 1))) { return false; }\n        if (!player.toggles.auto[1] || (energy >= info.energyTrue && (level >= 2 || energy < info.next))) { return false; }\n        dischargeReset();\n        return true;\n    }\n    return energy < info.energyTrue || (level < 2 && energy >= info.next);\n};\nexport const dischargeResetUser = async() => {\n    if (global.offline.active || !dischargeResetCheck()) { return; }\n\n    if (player.toggles.confirm[1] !== 'None') {\n        if (player.stage.active !== 1) {\n            if (!await Confirm(\"Prevented Discharge because current active Stage isn't Microworld\\nReset anyway?\")) { return; }\n            if (!dischargeResetCheck()) { return Notify('Discharge canceled, requirements are no longer met'); }\n        }\n    }\n\n    dischargeReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Discharge reset'; }\n};\n\nconst dischargeReset = (freeGoals = false) => {\n    const increased = freeGoals || (player.strangeness[1][4] < 2 && player.discharge.energy >= global.dischargeInfo.next);\n    if (increased) {\n        player.discharge.current++;\n        if (!freeGoals) { player.discharge.energy -= global.dischargeInfo.next; }\n    }\n    awardVoidReward(1);\n    if (!freeGoals) {\n        addIntoLog(`Discharge reset${increased ? ', Goal reached' : ''}`);\n        reset('discharge', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : [1]);\n    }\n};\n\n/** Returns true for Auto, only if reset happened */\nconst vaporizationResetCheck = (clouds = null as number | null): boolean => {\n    if (player.upgrades[2][2] !== 1 || assignResetInformation.newClouds() <= 0) { return false; }\n\n    if (clouds !== null) {\n        const level = player.strangeness[2][4];\n        if (level >= 2 || (player.inflation.vacuum && player.researchesExtra[2][0] >= 1 && player.tree[1][5] >= 1)) {\n            vaporizationReset(clouds);\n            if (player.toggles.normal[1] || !player.toggles.auto[2]) { return false; }\n            assignResetInformation.newClouds();\n        } else if (!player.toggles.auto[2]) { return false; }\n        if (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 3 : (player.researchesAuto[2] < 1 || player.stage.current !== 2))) { return false; }\n\n        const vaporization = player.vaporization;\n        if (player.inflation.vacuum && vaporization.input[1] > 0 && vaporization.clouds >= vaporization.input[1]) { return false; }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        if ((calculateEffects.clouds(true) / calculateEffects.clouds()) * (rainAfter / rainNow) * (calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow)) < vaporization.input[0]) { return false; }\n        vaporizationReset();\n    }\n    return true;\n};\nexport const vaporizationResetUser = async() => {\n    if (global.offline.active || !vaporizationResetCheck()) { return; }\n\n    if (player.toggles.confirm[2] !== 'None') {\n        const array = [];\n        if (player.strangeness[2][4] >= 2 || (player.inflation.vacuum && player.researchesExtra[2][0] >= 1 && player.tree[1][5] >= 1)) {\n            array.push('already gaining Clouds without needing to reset');\n        }\n        const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n        const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n        if ((calculateEffects.clouds(true) / calculateEffects.clouds()) * (rainAfter / rainNow) * (calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow)) < 2) {\n            array.push('boost from doing it is below 2x');\n        }\n        if (player.stage.active !== 2) {\n            array.push(\"current active Stage isn't Submerged\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Vaporization because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!vaporizationResetCheck()) { return Notify('Vaporization canceled, requirements are no longer met'); }\n        }\n    }\n\n    vaporizationReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Vaporization reset'; }\n};\n\nconst vaporizationReset = (autoClouds = null as number | null) => {\n    const vaporization = player.vaporization;\n\n    if (autoClouds !== null) {\n        const level = player.researchesExtra[2][0];\n        if (level >= 1 && player.tree[1][5] >= 1) {\n            autoClouds /= 20 / (level + level ** 2);\n            if (player.strangeness[2][4] < 2) { autoClouds /= 4; }\n        } else { autoClouds /= 40; }\n        vaporization.clouds += global.vaporizationInfo.get * autoClouds;\n    } else {\n        vaporization.clouds += global.vaporizationInfo.get;\n        addIntoLog(`Vaporization reset, new Clouds are ${format(player.vaporization.clouds, { padding: true })}`);\n        reset('vaporization', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2] : [2]);\n    }\n    if (vaporization.cloudsMax < vaporization.clouds) { vaporization.cloudsMax = vaporization.clouds; }\n    awardVoidReward(2);\n};\n\n/** Returns true for Auto, only if reset happened */\nconst rankResetCheck = (auto = false): boolean => {\n    if (player.accretion.rank >= global.accretionInfo.maxRank || (player.buildings[3][0][player.strangeness[3][4] >= 2 ? 'total' : 'current']).lessThan(global.accretionInfo.rankCost[player.accretion.rank])) { return false; }\n\n    if (auto) {\n        if (player.strangeness[3][4] < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 2 : (player.researchesAuto[2] < 1 || player.stage.current !== 3))) { return false; }\n        rankReset();\n    }\n    return true;\n};\nexport const rankResetUser = async() => {\n    if (global.offline.active || !rankResetCheck()) { return; }\n\n    if (player.toggles.confirm[3] !== 'None' && player.accretion.rank !== 0) {\n        const array = [];\n        if (player.inflation.vacuum && (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds <= 0) && player.accretion.rank >= 4) {\n            array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make next Rank slow`);\n        }\n        if (player.stage.active !== 3) {\n            array.push(\"current active Stage isn't Accretion\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Rank increase because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!rankResetCheck()) { return Notify('Rank increase canceled, requirements are no longer met'); }\n        }\n    }\n\n    rankReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = `Increased Rank to '${global.accretionInfo.rankName[player.accretion.rank]}'`; }\n};\n\nconst rankReset = () => {\n    player.accretion.rank++;\n    if (player.accretion.rank === 6) {\n        player.stage.current = 4;\n        let update = false;\n        if (player.toggles.normal[0]) {\n            if (player.stage.active < 4) {\n                setActiveStage(4);\n                update = true;\n            } else if (global.trueActive < 4) {\n                global.trueActive = 4;\n            }\n        }\n        stageUpdate(update);\n    }\n    awardVoidReward(3);\n    //global.accretionInfo.effective = calculateEffects.effectiveRank();\n    //global.dischargeInfo.total = calculateEffects.effectiveGoals();\n    if (player.accretion.rank > 1) { addIntoLog(`Rank reset, new Rank is \"${global.accretionInfo.rankName[player.accretion.rank]}\"`); }\n    reset('rank', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3] : [3]);\n    calculateMaxLevel(0, 3, 'researchesExtra', true);\n    calculateMaxLevel(4, 3, 'researchesExtra', true);\n    calculateMaxLevel(0, 4, 'researches', true);\n    if (player.stage.active === 3) { visualUpdate(); }\n};\n\n/** Returns true for Auto, only if reset happened */\nconst collapseResetCheck = (remnants = false): boolean => {\n    if (player.upgrades[4][0] !== 1) { return false; }\n    assignResetInformation.newStars();\n    assignResetInformation.newMass();\n    const info = global.collapseInfo;\n    const collapse = player.collapse;\n    const level = player.strangeness[4][4];\n\n    if (remnants) {\n        if (level >= 2) {\n            if (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0) {\n                collapse.stars[0] += info.starCheck[0];\n                collapse.stars[1] += info.starCheck[1];\n                collapse.stars[2] += info.starCheck[2];\n                effectsCache.star1 = calculateEffects.star[1]();\n                effectsCache.star2 = calculateEffects.star[2]();\n                assignResetInformation.newStars(true);\n                assignResetInformation.newMass();\n                awardVoidReward(4);\n            }\n            if (level >= 3) {\n                if (info.newMass > collapse.mass) {\n                    collapse.mass = info.newMass;\n                    if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n                    awardVoidReward(4);\n                }\n                return false;\n            }\n        } else if (level < 1 && (player.inflation.vacuum ? player.researchesAuto[2] < 4 : (player.researchesAuto[2] < 1 || player.stage.current < 4))) { return false; }\n        if (!player.toggles.auto[4]) { return false; }\n\n        if (player.strangeness[5][4] >= 1 && player.toggles.buildings[5][3] && player.ASR[5] >= 3 && player.researchesExtra[5][0] >= 1 && calculateBuildingsCost(3, 5).toNumber() <= info.newMass) {\n            collapseReset(false);\n            return true;\n        }\n        const timeUntil = assignResetInformation.timeUntil();\n        if (timeUntil > 0 && timeUntil < collapse.input[1]) { return false; }\n        while (info.pointsLoop < collapse.points.length) {\n            const point = collapse.points[info.pointsLoop];\n            if (point > info.newMass || (point > 40 && player.strangeness[5][4] < 1)) { break; }\n            info.pointsLoop++;\n            if (point > collapse.mass) {\n                collapseReset();\n                return true;\n            }\n        }\n        const massBoost = (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n        if (massBoost >= collapse.input[0]) {\n            collapseReset();\n            return true;\n        } else if (level >= 2) { return false; }\n        const calculateStar = calculateEffects.star;\n        const starProd = global.buildingsInfo.producing[4];\n        const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n        if (!(massBoost * new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).toNumber() * (calculateStar[1](true) / effectsCache.star1) * (calculateStar[2](true) / effectsCache.star2) >= collapse.input[0])) { return false; } //Done this way to remove NaN\n        collapseReset();\n        return true;\n    }\n    return (level < 3 && info.newMass > collapse.mass) || (level < 2 && (info.starCheck[0] > 0 || info.starCheck[1] > 0 || info.starCheck[2] > 0)) || player.elements.includes(0.5, 1);\n};\nexport const collapseResetUser = async() => {\n    if (global.offline.active || !collapseResetCheck()) { return; }\n\n    if (player.toggles.confirm[4] !== 'None') {\n        const array = [];\n        if (player.inflation.vacuum) {\n            const timeUntil = assignResetInformation.timeUntil();\n            const unlockedG = player.researchesExtra[5][0] >= 1;\n            const cantAffordG = !unlockedG || calculateBuildingsCost(3, 5).toNumber() > global.collapseInfo.newMass;\n            if (timeUntil > 0 && timeUntil < 1e6 && cantAffordG) {\n                array.push(`${unlockedG ? 'will not be able to afford new Galaxy and ' : ''}Solar mass isn't hardcapped, but can be hardcapped soon`);\n            }\n            if (player.researchesExtra[2][1] <= 0 || player.vaporization.clouds <= 0) {\n                array.push(`current ${player.researchesExtra[2][1] <= 0 ? \"level for Clouds Research 'Rain Clouds'\" : 'Cloud amount'} is 0, which could make recovering from Collapse really slow`);\n            }\n        }\n        if (player.stage.active !== 4 && player.stage.active !== 5) {\n            array.push(\"current active Stage isn't Interstellar\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Collapse because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!collapseResetCheck()) { return Notify('Collapse canceled, requirements are no longer met'); }\n        }\n    }\n\n    collapseReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Collapse reset'; }\n};\n\nconst collapseReset = (log = true) => {\n    const collapseInfo = global.collapseInfo;\n    const collapse = player.collapse;\n\n    collapse.stars[0] += collapseInfo.starCheck[0];\n    collapse.stars[1] += collapseInfo.starCheck[1];\n    collapse.stars[2] += collapseInfo.starCheck[2];\n    if (collapseInfo.newMass > collapse.mass) {\n        collapse.mass = collapseInfo.newMass;\n        if (collapse.massMax < collapse.mass) { collapse.massMax = collapse.mass; }\n    }\n    for (let i = 1; i < playerStart.elements.length; i++) { //Must be below mass and star checks\n        i = player.elements.indexOf(0.5, i);\n        if (i < 1) { break; }\n        buyUpgrades(i, 4, 'elements', true);\n    }\n\n    if (log) { addIntoLog(`Collapse reset, Solar mass is at ${format(collapse.mass, { padding: true })}`); }\n    reset('collapse', player.challenges.active === 0 ? [1, 2, 3, 4, 5] : player.inflation.vacuum ? [1, 2, 3, 4] : (player.strangeness[5][3] < 1 ? [4, 5] : [4]));\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    awardVoidReward(4);\n};\n\n/** Returns true for Auto, only if reset happened */\nconst mergeResetCheck = (auto = false): boolean => {\n    if (player.upgrades[5][3] !== 1) { return false; }\n    const galaxies = player.buildings[5][3].true;\n    if (!player.inflation.vacuum) {\n        if (galaxies < calculateEffects.mergeRequirement()) { return false; }\n        if (auto) {\n            if (player.strangeness[5][9] < 1) { return false; }\n            mergeReset();\n        }\n        return true;\n    }\n    const merge = player.merge;\n    if (merge.resets >= calculateEffects.mergeMaxResets() || galaxies < 1) { return false; }\n\n    if (auto) {\n        if ((player.strangeness[5][9] < 1 && player.researchesAuto[2] < 5) || (merge.input[1] !== 0 ? merge.since < merge.input[1] : assignResetInformation.timeUntil() > 0) || galaxies < merge.input[0]) { return false; }\n        mergeReset();\n    }\n    return true;\n};\nexport const mergeResetUser = async() => {\n    if (global.offline.active || !mergeResetCheck()) { return; }\n\n    if (player.toggles.confirm[5] !== 'None' && player.inflation.vacuum) {\n        const array = [];\n        const galaxyCost = calculateBuildingsCost(3, 5).toNumber();\n        if (galaxyCost <= Math.max(player.collapse.mass, global.collapseInfo.newMass)) {\n            array.push(`can afford a Galaxy${galaxyCost > player.collapse.mass ? ' after Collapse' : ''}`);\n        }\n        if (player.stage.active !== 5 && player.stage.active !== 6) {\n            array.push(\"current active Stage isn't Intergalactic\");\n        }\n        if (array.length > 0) {\n            if (!await Confirm(`Prevented Merging because ${array.join(',\\nAlso ')}\\nReset anyway?`)) { return; }\n            if (!mergeResetCheck()) { return Notify('Merge canceled, requirements are no longer met'); }\n        }\n    }\n\n    mergeReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = player.inflation.vacuum ? 'Merged Galaxies' : 'Decayed Vacuum'; }\n};\n\nconst mergeReset = () => {\n    if (!player.inflation.vacuum) {\n        if (awardStabilityReward()) { return; }\n        return switchVacuum();\n    }\n    assignResetInformation.mergeReward();\n\n    player.merge.resets++;\n    player.merge.rewards[0] += global.mergeInfo.checkReward[0];\n    player.merge.rewards[1] += global.mergeInfo.checkReward[1];\n    addIntoLog(`Merge reset, Galaxies before reset ${format(player.buildings[5][3].current, { padding: 'exponent' })} [${format(player.buildings[5][3].true)}]`);\n    player.buildings[5][3].true = 0;\n    reset('galaxy', [1, 2, 3, 4, 5]);\n    calculateMaxLevel(0, 4, 'researches');\n    calculateMaxLevel(1, 4, 'researches');\n    calculateMaxLevel(2, 4, 'researches');\n    calculateMaxLevel(5, 4, 'researches');\n    if (player.stage.current < 6) {\n        player.stage.current = 6;\n        stageUpdate(false);\n    }\n};\n\n/** Returns true for Auto, only if reset happened */\nconst nucleationResetCheck = (auto = false): boolean => {\n    if (player.upgrades[6][0] !== 1) { return false; }\n    assignResetInformation.newFluid();\n    if (auto) {\n        if (player.strangeness[6][3] < 5 || (global.dischargeInfo.energyStage[6] <= player.darkness.energy && calculateEffects.darkFluid(true) / calculateEffects.darkFluid() < player.darkness.input)) { return false; }\n        nucleationReset();\n        return true;\n    }\n    return global.dischargeInfo.energyStage[6] > player.darkness.energy || global.inflationInfo.newFluid > player.darkness.fluid;\n};\nexport const nucleationResetUser = async() => {\n    if (global.offline.active || !nucleationResetCheck()) { return; }\n\n    if (player.toggles.confirm[7] !== 'None') {\n        if (player.stage.active !== 6) {\n            if (!await Confirm(\"Prevented Nucleation reset because current active Stage isn't Abyss\\nReset anyway?\")) { return; }\n            if (!nucleationResetCheck()) { return Notify('Nucleation reset canceled, requirements are no longer met'); }\n        }\n    }\n\n    nucleationReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused Nucleation reset'; }\n};\n\nconst nucleationReset = () => {\n    if (global.inflationInfo.newFluid > player.darkness.fluid) { player.darkness.fluid = global.inflationInfo.newFluid; }\n    addIntoLog(`Nucleation reset, Dark fluid is at ${format(player.darkness.fluid, { padding: true })}`);\n    reset('collapse', player.challenges.active === 0 ? [1, 2, 3, 4, 5, 6] : [6]);\n};\n\nconst endResetCheck = (): boolean => player.darkness.energy >= 1000;\nexport const endResetUser = async() => {\n    if (global.offline.active || !endResetCheck()) { return; }\n\n    if (player.toggles.confirm[6] !== 'None') {\n        if (player.inflation.vacuum && calculateVerseCost(0) <= calculateEffects.mergeScore()) {\n            if (!await Confirm('Prevented End reset because can create an Universe\\nReset anyway?')) { return; }\n            if (!endResetCheck()) { return Notify('End reset canceled, requirements are no longer met'); }\n        }\n    }\n\n    endReset();\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Caused End reset'; }\n};\n\nconst endReset = () => {\n    if (player.stage.active < 6) { setActiveStage(1); }\n    const resets = player.inflation.ends;\n    const realTime = player.time.end;\n    const selfMade = player.verses[0].true;\n    const income = player.verses[0].current;\n    player.cosmon[1].current += income;\n    player.cosmon[1].total += income;\n    resets[0]++;\n    if (selfMade < resets[1]) { resets[1] = selfMade; }\n    if (selfMade > resets[2]) { resets[2] = selfMade; }\n    player.inflation.vacuum = false;\n    player.time.export[1] = 0;\n    player.time.export[2] = 0;\n    player.challenges.active = null;\n    player.clone = {};\n    prepareVacuum(false);\n    resetVacuum(2);\n    addIntoLog(`End reset, new Cosmons are ${format(player.cosmon[1].current, { padding: 'exponent' })}`);\n\n    const history = player.history.end;\n    const storage = global.historyStorage.end;\n    storage.unshift([realTime, income]);\n    if (storage.length > 100) { storage.length = 100; }\n    if (income / realTime > history.best[1] / history.best[0]) {\n        history.best = [realTime, income];\n    }\n};\n\nexport const assignMilestoneInformation = (index: number, stageIndex: number) => {\n    const pointer = global.milestonesInfo[stageIndex];\n    const level = player.milestones[stageIndex][index];\n    if (player.inflation.vacuum) {\n        if (stageIndex === 1) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e24').power(level).multiply('1e24');\n                pointer.reward[0] = 1.05 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(24000 + 24000 * level);\n                pointer.reward[1] = 1.03 ** level;\n            }\n        } else if (stageIndex === 2) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.12 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue('1e3').power(level).multiply('1e3');\n                pointer.reward[1] = 1.08 ** level;\n            }\n        } else if (stageIndex === 3) {\n            if (index === 0) {\n                pointer.need[0].setValue(1e-12 * 1e4 ** level);\n                pointer.reward[0] = 1.08 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(8 + 8 * level);\n                pointer.reward[1] = level / 4;\n            }\n        } else if (stageIndex === 4) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e6').power(level).multiply('1e6');\n                pointer.reward[0] = 1.06 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(28 + 28 * level);\n                pointer.reward[1] = 1.01 ** level;\n            }\n        } else if (stageIndex === 5) {\n            if (index === 0) {\n                pointer.need[0].setValue('1e1').power(level).multiply('1e1');\n                pointer.reward[0] = 1.04 ** level;\n            } else if (index === 1) {\n                pointer.need[1].setValue(1 + level);\n                pointer.reward[1] = level / 100;\n            }\n        }\n    } else {\n        let time = 0;\n        if (player.challenges.active !== 1) {\n            const percentage = level / (pointer.scaling[index].length - 1);\n            if (stageIndex === 1) {\n                time = 14400 / (percentage * (index === 1 ? 11 : 3) + 1) ** percentage;\n            } else if (stageIndex === 2) {\n                time = 28800 / (percentage * (index === 1 ? 23 : 7) + 1) ** percentage;\n            } else if (stageIndex === 3) {\n                time = 43200 / (percentage * (index === 1 ? 35 : 11) + 1) ** percentage;\n            } else if (stageIndex === 4) {\n                time = 57600 / (percentage * (index === 1 ? 47 : 15) + 1) ** percentage;\n            } else if (stageIndex === 5) {\n                time = index === 0 ? (3600 / (percentage * 2 + 1)) : 1200;\n            }\n            if (player.tree[1][2] < 1 && player.tree[0][0] === 1) { time /= 4; }\n        }\n        pointer.reward[index] = time;\n        pointer.need[index].setValue(pointer.scaling[index][level]);\n    }\n};\n\nconst awardMilestone = (index: number, stageIndex: number) => {\n    if (!milestoneCheck(index, stageIndex)) { return; }\n\n    player.milestones[stageIndex][index]++;\n    assignMilestoneInformation(index, stageIndex);\n\n    const name = global.milestonesInfo[stageIndex].name[index];\n    const maxed = !player.inflation.vacuum && player.milestones[stageIndex][index] >= global.milestonesInfo[stageIndex].scaling[index].length;\n    addIntoLog(`Milestone \"${name}\" new tier completed${maxed ? ', Maxed' : ''}`);\n    Notify(`Milestone '${name}' new tier completed${maxed ? ', Maxed' : ''}`);\n    if (!player.inflation.vacuum) {\n        player.strange[0].current++;\n        player.strange[0].total++;\n        assignBuildingsProduction.strange0();\n        if (stageIndex === 4) {\n            if (index === 0 && maxed) { calculateMaxLevel(6, 4, 'strangeness', true); }\n        } else if (stageIndex === 5) {\n            if (index === 0 && maxed) { calculateMaxLevel(6, 5, 'strangeness', true); }\n        }\n    } else if (stageIndex === 3 && index === 1) {\n        global.accretionInfo.effective = calculateEffects.effectiveRank();\n        global.dischargeInfo.total = calculateEffects.effectiveGoals();\n        calculateMaxLevel(0, 3, 'researchesExtra', true);\n        calculateMaxLevel(0, 4, 'researches', true);\n    }\n    awardMilestone(index, stageIndex);\n};\n\n/** Also updates related information */\nexport const toggleSupervoid = (change = false) => {\n    const info = global.challengesInfo[0];\n    if (change) {\n        if (player.challenges.active === 0) { return Notify(`Can't be toggled while inside the '${info.name}'`); }\n        player.challenges.super = !player.challenges.super && (player.stage.true >= 8 || (player.stage.true === 7 && player.event));\n    }\n\n    if (player.challenges.super) {\n        info.name = 'Supervoid';\n        info.resetType = 'vacuum';\n        changeRewardType(true);\n    } else {\n        info.name = 'Void';\n        info.resetType = 'stage';\n        changeRewardType(false);\n    }\n    if (change) {\n        assignChallengeInformation(0);\n        numbersUpdate();\n    }\n};\n\nexport const assignChallengeInformation = (index: number) => {\n    let time = (index === 1 ? 7200 : //[1]\n        player.challenges.super ? 1200 : 3600) / (6 / (6 - player.tree[0][5])); //[0]\n    if (player.tree[1][2] < 1 && player.tree[0][0] === 1) { time /= 4; }\n    global.challengesInfo[index].time = time;\n};\n\nconst awardVoidReward = (index: number): void => {\n    const challenges = player.challenges;\n    if (challenges.active !== 0) { return; }\n    const info = global.challengesInfo[0];\n\n    let progress = 1;\n    if (index === 1) {\n        progress += player.researchesExtra[1][2];\n    } else if (index === 2) {\n        if (player.vaporization.clouds > 1e4) { progress++; }\n        if (player.vaporization.clouds > 1e12 && (player.tree[1][5] >= 2 || player.accretion.rank <= 1)) { progress++; }\n    } else if (index === 3) {\n        progress = Math.min(player.accretion.rank - 1, 6);\n    } else if (index === 4) {\n        if (player.collapse.stars[0] >= 1) { progress++; }\n        if (player.collapse.stars[1] >= 1) { progress++; }\n        if (player.collapse.stars[2] >= 1) { progress++; }\n        if (player.elements[26] >= 1) { progress++; }\n    } else if (index === 5) {\n        if (player.merge.resets >= 1) { progress++; }\n        if (player.merge.rewards[0] >= 1) { progress++; }\n    }\n\n    const pointer = challenges.void;\n    if (pointer[index] < progress && player.time.stage <= info.time) {\n        pointer[index]++;\n        const excess = progress !== pointer[index];\n        if (excess) { progress = pointer[index]; }\n        if (challenges.voidCheck[index] < progress) { challenges.voidCheck[index] = progress; }\n        const totalProgress = pointer[1] + pointer[2] + pointer[3] + pointer[4] + pointer[5];\n        player.strange[0].current += totalProgress;\n        player.strange[0].total += totalProgress;\n        assignBuildingsProduction.strange0();\n\n        addIntoLog(`Completed new Void reward, new total is ${totalProgress}`);\n        Notify(`New Void reward unlocked:\\n${info.rewardText[0][index][progress - 1]}`);\n        if (index === 3) {\n            if (progress <= 4) {\n                calculateMaxLevel(0, 1, 'strangeness', true);\n                calculateMaxLevel(3, 1, 'strangeness', true);\n                calculateMaxLevel(1, 2, 'strangeness', true);\n                calculateMaxLevel(3, 2, 'strangeness', true);\n                calculateMaxLevel(0, 3, 'strangeness', true);\n                calculateMaxLevel(1, 3, 'strangeness', true);\n                calculateMaxLevel(0, 4, 'strangeness', true);\n                calculateMaxLevel(1, 4, 'strangeness', true);\n                calculateMaxLevel(2, 5, 'strangeness', true);\n            }\n        } else if (index === 4) {\n            if (progress === 1) {\n                calculateMaxLevel(4, 1, 'strangeness', true);\n                calculateMaxLevel(4, 2, 'strangeness', true);\n                calculateMaxLevel(4, 3, 'strangeness', true);\n                calculateMaxLevel(4, 4, 'strangeness', true);\n            }\n        } else if (index === 5) {\n            if (progress === 2) {\n                calculateMaxLevel(8, 5, 'strangeness', true);\n            }\n        }\n        if (excess) { return awardVoidReward(index); }\n    }\n\n    if (!challenges.super) { return; }\n    const pointer2 = challenges.supervoidMax;\n    if (pointer2[index] < progress && player.time.vacuum <= info.time) {\n        pointer2[index]++;\n        const excess = progress !== pointer2[index];\n        if (excess) { progress = pointer2[index]; }\n        if (challenges.supervoid[index] < progress) {\n            challenges.supervoid[index]++;\n            player.cosmon[0].current++;\n            player.cosmon[0].total++;\n            Notify(`New Supervoid reward unlocked:\\n${info.rewardText[1][index][progress - 1]}`);\n        } else { Notify(\"Strength of the 'Instability' increased\"); }\n        global.inflationInfo.totalSuper = pointer2[1] + pointer2[2] + pointer2[3] + pointer2[4] + pointer2[5];\n\n        addIntoLog(`Completed new Supervoid reward, new total is ${global.inflationInfo.totalSuper}`);\n        if (excess) { return awardVoidReward(index); }\n    }\n};\nconst awardStabilityReward = (): boolean => {\n    const challenges = player.challenges;\n    if (challenges.active !== 1) { return false; }\n\n    const info = global.challengesInfo[1];\n    if (player.time.vacuum <= info.time) {\n        challenges.stability++;\n        player.cosmon[0].current++;\n        player.cosmon[0].total++;\n\n        const rewardText = info.rewardText[challenges.stability - 1];\n        addIntoLog(`New Vacuum stability completion, new value is ${challenges.stability}`);\n        Notify(`New Vacuum stability completion${rewardText !== undefined ? ` and a new reward:\\n${rewardText}` : ''}`);\n\n        if (player.stage.active < 6) { setActiveStage(1); }\n        resetVacuum();\n    }\n    return true;\n};\n\n/** Null means exit if possible, nothing if isn't. Entering same challenge will exit out of it */\nexport const enterExitChallengeUser = (index: number | null) => {\n    if (global.offline.active) { return; }\n    const old = player.challenges.active;\n    if (old === index || index === null) {\n        if (old === null) { return; }\n\n        challengeReset();\n        addIntoLog(`Exited the ${global.challengesInfo[old].name}`);\n        Notify(`Exited the ${global.challengesInfo[old].name}`);\n    } else {\n        if (index === 0) {\n            if (!player.challenges.super && !player.inflation.vacuum) { return; }\n        } else if (index === 1) {\n            if (player.stage.true < 8 && player.verses[0].true < 6) { return; }\n        } else { return; }\n\n        challengeReset(index);\n        addIntoLog(`Entered the ${global.challengesInfo[index].name}`);\n        Notify(`Entered the ${global.challengesInfo[index].name}`);\n    }\n};\nconst exitChallengeAuto = (): boolean => {\n    const old = player.challenges.active;\n    if (old === null) { return false; }\n    const info = global.challengesInfo[old];\n    if (player.time[info.resetType] <= info.time || player.strangeness[5][6] < (player.inflation.vacuum ? 1 : 2)) { return false; }\n\n    challengeReset();\n    addIntoLog(`Exited the ${info.name}`);\n    Notify(`Automatically exited the ${info.name}`);\n    return true;\n};\n/** Automatically exits out of challenge and then enters new one if specified */\nconst challengeReset = (next = null as number | null) => {\n    const challenges = player.challenges;\n    if (challenges.active !== null) {\n        if (challenges.active === 0) {\n            if (challenges.super) {\n                assignResetInformation.supervoid(false);\n            } else if (stageResetCheck(5)) { stageResetReward(5); }\n        }\n        challenges.active = null;\n        if (player.stage.active < 6) { setActiveStage(Math.min(player.clone.stage.current, (player.clone.depth !== 'stage' ? player.clone : player).strangeness[5][3] >= 1 ? 5 : 4)); }\n        const currentState = player.clone.inflation?.vacuum as boolean | undefined;\n        if (currentState !== undefined && currentState !== player.inflation.vacuum) {\n            player.inflation.vacuum = currentState;\n            prepareVacuum(currentState);\n        }\n        loadFromClone();\n    }\n\n    if (next !== null) {\n        challenges.active = next;\n        const resetType = global.challengesInfo[next].resetType;\n        cloneBeforeReset(resetType);\n        if (resetType === 'vacuum') {\n            if (player.stage.active < 6) { setActiveStage(1); }\n            const requiredState = next !== 1;\n            if (player.inflation.vacuum !== requiredState) {\n                player.inflation.vacuum = requiredState;\n                prepareVacuum(requiredState);\n            }\n            if (next === 0) { assignResetInformation.supervoid(true); }\n            resetVacuum();\n        } else {\n            stageFullReset(true);\n        }\n    }\n};\n", "import { checkTab, milestoneGetValue } from './Check';\nimport { changeSubtab } from './Hotkeys';\nimport Overlimit from './Limit';\nimport { getClass, getId, getQuery } from './Main';\nimport { effectsCache, global, player } from './Player';\nimport { MDStrangenessPage, Notify, globalSave, playEvent, resetMinSizes, setTheme, specialHTML } from './Special';\nimport { calculateBuildingsCost, stageResetCheck, toggleSwap, setActiveStage, calculateEffects, assignBuildingsProduction, assignResetInformation, calculateVerseCost } from './Stage';\nimport type { gameSubtab, gameTab } from './Types';\n\n/** Tab being null will test current tab/subtab being unlocked and updates subtab list */\nexport const switchTab = (tab = null as null | gameTab, subtab = null as null | gameSubtab): void => {\n    const oldTab = global.tabs.current;\n    if (tab === null) {\n        if (!checkTab(oldTab)) { return switchTab('stage'); }\n\n        let subtabAmount = 0;\n        for (const inside of global.tabs[oldTab].list) {\n            const unlocked = checkTab(oldTab, inside);\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = unlocked ? '' : 'none';\n            if (unlocked) {\n                subtabAmount++;\n            } else if (global.tabs[oldTab].current === inside) {\n                switchTab(oldTab, global.tabs[oldTab].list[0]);\n            }\n        }\n        getId('subtabs').style.visibility = subtabAmount > 1 ? '' : 'hidden';\n        if (globalSave.SRSettings[0]) {\n            const text = `Current tab is '${oldTab}'${subtabAmount > 1 ? ` and subtab is '${global.tabs[oldTab].current}'` : ''}`;\n            if (getId('SRTab').textContent !== text) { getId('SRTab').textContent = text; } //Just in case to prevent unnessary calls?\n        }\n        return;\n    } else if (subtab === null) {\n        if (oldTab === tab) { return changeSubtab('up'); }\n        getId(`${oldTab}Tab`).style.display = 'none';\n        getId(`${oldTab}TabBtn`).classList.remove('tabActive');\n\n        global.tabs.current = tab;\n        getId(`${tab}Tab`).style.display = '';\n        getId(`${tab}TabBtn`).classList.add('tabActive');\n\n        let subtabAmount = 0;\n        for (const inside of global.tabs[oldTab].list) {\n            getId(`${oldTab}SubtabBtn${inside}`).style.display = 'none';\n        }\n        for (const inside of global.tabs[tab].list) {\n            if (checkTab(tab, inside)) {\n                getId(`${tab}SubtabBtn${inside}`).style.display = '';\n                subtabAmount++;\n            } else if (global.tabs[tab].current === inside) {\n                switchTab(tab, global.tabs[tab].list[0]);\n            }\n        }\n        getId('subtabs').style.visibility = subtabAmount > 1 ? '' : 'hidden';\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current tab is '${tab}'${subtabAmount > 1 ? ` and subtab is '${global.tabs[tab].current}'` : ''}`; }\n    } else {\n        const oldSubtab = global.tabs[tab].current;\n        getId(`${tab}Subtab${oldSubtab}`).style.display = 'none';\n        getId(`${tab}SubtabBtn${oldSubtab}`).classList.remove('tabActive');\n\n        global.tabs[tab].current = subtab;\n        getId(`${tab}Subtab${subtab}`).style.display = '';\n        getId(`${tab}SubtabBtn${subtab}`).classList.add('tabActive');\n        if (oldTab !== tab) { return; }\n        if (globalSave.SRSettings[0]) { getId('SRTab').textContent = `Current subtab is '${subtab}', part of '${tab}' tab`; }\n    }\n\n    const active = player.stage.active;\n    if ((tab === 'upgrade' && global.tabs.upgrade.current === 'Elements') || tab === 'Elements') {\n        if (active !== 4 && active !== 5) {\n            if (tab === 'upgrade' && subtab === null) {\n                switchTab('upgrade', 'Upgrades');\n            } else {\n                setActiveStage(global.trueActive === 5 ? 5 : 4, global.trueActive);\n                stageUpdate();\n            }\n            return;\n        }\n    } else if (global.trueActive !== active) {\n        setActiveStage(global.stageInfo.activeAll.includes(global.trueActive) ? global.trueActive : Math.min(player.stage.current, 5));\n        stageUpdate();\n        return;\n    }\n    visualUpdate();\n    numbersUpdate();\n};\n\nexport const numbersUpdate = (ignoreOffline = false) => {\n    if (global.offline.active && !ignoreOffline) { return; }\n    const tab = global.tabs.current;\n    const subtab = global.tabs[tab].current;\n    const active = player.stage.active;\n    const buildings = player.buildings[active];\n    const vacuum = player.inflation.vacuum;\n\n    if (!global.debug.timeLimit) {\n        const challenge = player.challenges.active;\n        let noTime = null as boolean | null;\n        if (vacuum) {\n            if (challenge !== null) { noTime = player.time[global.challengesInfo[challenge].resetType] > global.challengesInfo[challenge].time; }\n        } else if (player.tree[0][4] < 1 && (player.stage.true >= 7 || player.stage.resets >= 4)) {\n            const s = Math.min(player.stage.current, 4);\n            const info = global.milestonesInfo;\n            let maxTime = 0;\n            for (let i = 0; i < info[s].need.length; i++) {\n                if (player.milestones[s][i] >= info[s].scaling[i].length) {\n                    if (s === 4 && player.milestones[5][i] < info[5].scaling[i].length) {\n                        maxTime = Math.max(info[5].reward[i], maxTime);\n                    }\n                    continue;\n                }\n                maxTime = Math.max(info[s].reward[i], maxTime);\n            }\n            if (maxTime > 0) { noTime = player.time.stage > maxTime; }\n        }\n\n        if (noTime) {\n            Notify(`Time limit has been reached for ${challenge !== null ? `the '${global.challengesInfo[challenge].name}'` : 'all Milestones'}`);\n            global.debug.timeLimit = true;\n        } else if (noTime === null) { global.debug.timeLimit = true; }\n    }\n\n    {\n        if (!globalSave.toggles[4]) {\n            getId('globalStat1Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n            getId('globalStat2Span').textContent = format(player.buildings[2][1].current, { padding: true });\n            getId('globalStat3Span').textContent = format(player.buildings[3][0].current, { padding: true });\n            getId('globalStat4Span').textContent = format(player.buildings[4][0].current, { padding: true });\n            getId('globalStat5Span').textContent = format(player.buildings[6][0].current, { padding: true });\n        }\n        if (active === 1) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.discharge.energy, { padding: 'exponent' });\n        } else if (active === 2) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(buildings[1].current, { padding: true });\n            getId('footerStat3Span').textContent = format(player.vaporization.clouds, { padding: true });\n        } else if (active === 3) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n        } else if (active === 4 || active === 5) {\n            const stars = player.buildings[4];\n\n            getId('footerStat1Span').textContent = format(stars[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.collapse.mass, { padding: true });\n            if (active === 5) {\n                getId('footerStat3Span').textContent = format(new Overlimit(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current), { padding: true });\n            }\n        } else if (active === 6) {\n            getId('footerStat1Span').textContent = format(buildings[0].current, { padding: true });\n            getId('footerStat2Span').textContent = format(player.darkness.energy, { padding: 'exponent' });\n            getId('footerStat3Span').textContent = format(player.darkness.fluid, { padding: true });\n        }\n        const value = global.hotkeys.shift;\n        const shiftButton = getId('shiftFooter');\n        if (specialHTML.cache.innerHTML.get(shiftButton) !== value) {\n            specialHTML.cache.innerHTML.set(shiftButton, value);\n            shiftButton.style.borderColor = value ? 'forestgreen' : '';\n            shiftButton.style.color = value ? 'var(--green-text)' : '';\n            getId('structuresFooter').textContent = value ? 'Toggle all' : 'Structures';\n        }\n    }\n\n    if (tab === 'stage') {\n        if (subtab === 'Structures') {\n            const { buildingsInfo } = global;\n            const producing = buildingsInfo.producing[active];\n            const howMany = global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : player.toggles.shop.input;\n            const speed = global.inflationInfo.globalSpeed;\n\n            //Visual fixes for stuff that makes no sense to assign (yet)\n            if (active === 1) {\n                if (vacuum) { assignBuildingsProduction.S1Build1(false, true); }\n                assignBuildingsProduction.S1Build5(true);\n            } else if (active === 2) {\n                assignBuildingsProduction.S2Build2(true);\n            }\n            for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n                const trueCountID = getId(`building${i}True`);\n                getId(`building${i}Cur`).textContent = format(buildings[i].current, { padding: trueCountID.style.display !== 'none' });\n                getId(`building${i}Prod`).textContent = format(buildingsInfo.type[active][i - 1] === 'producing' ? new Overlimit(producing[i]).multiply(speed) : producing[i], { padding: true });\n                trueCountID.textContent = `[${format(buildings[i as 1].true, { padding: 'exponent' })}]`;\n\n                let lockText;\n                if (active === 3) {\n                    if (i > 1 && player.upgrades[3][global.accretionInfo.unlockA[i - 2]] !== 1) {\n                        lockText = 'Unlocked with Upgrade';\n                    }\n                } else if (active === 4) {\n                    if (i === 5 && player.challenges.active === 0 && player.verses[0].current < 7) {\n                        lockText = \"Can't be created while inside\";\n                    } else if (player.researchesExtra[5][0] < 1 && player.collapse.mass < global.collapseInfo.unlockB[i]) {\n                        lockText = `Unlocked at ${format(global.collapseInfo.unlockB[i])} Mass`;\n                    }\n                }\n                if (lockText !== undefined) {\n                    getId(`building${i}`).classList.remove('availableBuilding');\n                    getId(`building${i}Btn`).textContent = lockText;\n                    getId(`building${i}BuyX`).textContent = 'Locked';\n                    continue;\n                }\n\n                let costName: string;\n                let currency: number | Overlimit;\n                let free = false;\n                let multi = true;\n                if (active === 5 && i === 3) { //Galaxy\n                    costName = 'Mass';\n                    currency = player.collapse.mass;\n                    multi = false;\n                } else {\n                    let e = i - 1;\n                    let extra = active;\n                    if (active === 1) {\n                        if (player.tree[1][7] >= 1) {\n                            free = true;\n                        } else if (i === 1 && vacuum) {\n                            free = (player.challenges.supervoid[1] >= 2 || player.researchesExtra[1][2] >= 1) && player.strangeness[1][8] >= 1;\n                        }\n                    } else if (active === 2) {\n                        if (i !== 1) { e = 1; }\n                        free = player.tree[1][7] >= 2;\n                    } else if (active >= 3) {\n                        e = 0;\n                        if (active === 5) { extra = 4; }\n                        free = player.tree[1][7] >= (active === 3 ? 3 : 4);\n                    }\n\n                    costName = buildingsInfo.name[extra][e];\n                    currency = player.buildings[extra][e].current;\n                }\n\n                let buy = 1;\n                const cost = calculateBuildingsCost(i, active);\n                if (howMany !== 1 && multi) {\n                    const scaling = buildingsInfo.increase[active][i];\n                    if (free) {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).divide(cost).log(scaling).toNumber()) + 1, 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy - 1)); }\n                    } else {\n                        buy = howMany <= 0 ? Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1) : howMany;\n                        if (buy > 1) { cost.multiply(new Overlimit(scaling).power(buy).minus('1').divide(scaling - 1)); }\n                    }\n                }\n\n                getId(`building${i}`).classList[cost.lessOrEqual(currency) ? 'add' : 'remove']('availableBuilding');\n                getId(`building${i}Btn`).textContent = `Need: ${format(cost, { padding: true })} ${costName}`;\n                getId(`building${i}BuyX`).textContent = format(buy, { padding: 'exponent' });\n            }\n            if (active === 1) {\n                const { dischargeInfo } = global;\n                getId('reset0Button').textContent = `Next goal is ${format(calculateEffects.dischargeCost(), { padding: true })} Energy`;\n                getQuery('#tritiumEffect > span').textContent = format(effectsCache.tritium * speed, { padding: true });\n                getQuery('#dischargeEffect > span').textContent = format(dischargeInfo.base ** dischargeInfo.total, { padding: true });\n                getQuery('#energySpent > span').textContent = format(dischargeInfo.energyTrue - player.discharge.energy, { padding: 'exponent' });\n                if (vacuum) {\n                    const preonCap = calculateEffects.preonsHardcap(calculateEffects.effectiveEnergy() ** calculateEffects.S1Extra3());\n                    getQuery('#preonCap > span').textContent = format(preonCap * speed, { padding: true });\n                    getId('preonCapRatio').textContent = format(assignBuildingsProduction.S1Build1(true) / preonCap, { padding: true });\n                }\n            } else if (active === 2) {\n                getId('reset0Button').textContent = `Reset for ${format(global.vaporizationInfo.get, { padding: true })} Clouds`;\n                getQuery('#cloudEffect > span').textContent = format(calculateEffects.clouds(), { padding: true });\n                if (vacuum) {\n                    getQuery('#molesProduction > span').textContent = format(effectsCache.tritium / 6.02214076e23 * speed, { padding: true });\n                }\n\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#vaporizationBoostTotal > span').textContent = format((calculateEffects.clouds(true) / calculateEffects.clouds()) * (rainAfter / rainNow) * storm, { padding: true });\n            } else if (active === 3) {\n                getQuery('#dustSoftcap > span').textContent = format(global.accretionInfo.dustSoft);\n                if (player.accretion.rank < global.accretionInfo.maxRank && player.strangeness[3][4] >= 2) { getId('reset0Button').textContent = `Next Rank after ${format(Math.max(global.accretionInfo.rankCost[player.accretion.rank] - buildings[0].total.toNumber(), 0), { padding: true })} Mass`; }\n                if (vacuum) {\n                    getQuery('#massProduction > span').textContent = format(assignBuildingsProduction.S1Build1() * 1.78266192e-33 * speed, { padding: true });\n                    getQuery('#submersionBoost > span').textContent = format(calculateEffects.submersion(), { padding: true });\n                    if (player.researchesExtra[3][5] < 1) {\n                        const dustCap = calculateEffects.dustHardcap();\n                        getQuery('#dustCap > span').textContent = format(dustCap, { padding: true });\n                        getId('dustCapRatio').textContent = format(assignBuildingsProduction.S3Build1(true) / dustCap, { padding: true });\n                    }\n                }\n            } else if (active === 4 || active === 5) {\n                const { collapseInfo } = global;\n                const calculateStar = calculateEffects.star;\n                const starEffect = [calculateStar[0](), effectsCache.star1, effectsCache.star2];\n                const starProd = buildingsInfo.producing[4];\n                let total = player.strangeness[4][4] >= 3 ? 1 : (calculateEffects.mass(true) / effectsCache.mass) * (calculateEffects.S4Research4(true) / calculateEffects.S4Research4()) * ((1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / effectsCache.galaxyBase) ** (player.buildings[5][3].true * 2));\n                if (player.strangeness[4][4] < 2) {\n                    const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                    total *= new Overlimit(starProd[2]).multiply(calculateStar[0](true) / starEffect[0]).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber() * (calculateStar[1](true) / starEffect[1]) * (calculateStar[2](true) / starEffect[2]);\n                }\n\n                if (active === 4) {\n                    getId('reset0Button').textContent = `Collapse is at ${format(collapseInfo.newMass, { padding: true })} Mass`;\n                    getQuery('#solarMassEffect > span').textContent = format(effectsCache.mass, { padding: true });\n                    for (let i = 0; i < 3; i++) {\n                        getId(`special${i + 1}Cur`).textContent = format(player.collapse.stars[i], { padding: 'exponent' });\n                        getId(`special${i + 1}Get`).textContent = format(collapseInfo.starCheck[i], { padding: 'exponent' });\n                        getQuery(`#star${i + 1}Effect > span`).textContent = format(starEffect[i], { padding: true });\n\n                        /* Fixes text movement */\n                        const mainQuery = getQuery(`#special${i + 1} > p`);\n                        const widthTest = mainQuery.getBoundingClientRect().width;\n                        if (specialHTML.cache.innerHTML.get(mainQuery) !== widthTest) {\n                            specialHTML.cache.innerHTML.set(mainQuery, widthTest);\n                            mainQuery.style.minWidth = `${widthTest}px`;\n                        }\n                    }\n                    if (player.strangeness[4][4] < 3) { getQuery('#collapseBoostTotal > span').textContent = format(total, { padding: true }); }\n                    if (vacuum) {\n                        getQuery('#mainCap > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getId('mainCapTill').textContent = format(assignResetInformation.timeUntil(), { padding: true });\n                    }\n                } else if (active === 5) {\n                    const { merge } = player;\n                    if (vacuum) {\n                        const { mergeInfo } = global;\n\n                        const groupsCost = assignResetInformation.mergeReward();\n                        const mergeEffects = [calculateEffects.reward[0](), calculateEffects.reward[1]()];\n                        const remaining = calculateEffects.mergeMaxResets() - merge.resets;\n                        getId('reset0Button').textContent = `Can reset ${remaining} more time${remaining !== 1 ? 's' : ''}`;\n                        for (let i = 0; i < 2; i++) {\n                            getId(`special${i + 1}Cur`).textContent = format(merge.rewards[i], { padding: 'exponent' });\n                            getId(`special${i + 1}Get`).textContent = format(mergeInfo.checkReward[i], { padding: 'exponent' });\n                            getQuery(`#merge${i + 1}Effect > span`).textContent = format(mergeEffects[i], { padding: true });\n                        }\n                        getQuery('#mainCapHardS5 > span').textContent = format(collapseInfo.solarCap, { padding: true });\n                        getQuery('#mergeBoostTotal > span').textContent = format((buildings[3].true / (mergeInfo.galaxies + 1) + 1) * (calculateEffects.reward[0](true) / mergeEffects[0]) * (calculateEffects.reward[1](true) / mergeEffects[1]), { padding: true });\n\n                        const groupsTotal = player.researchesExtra[5][1] >= 2;\n                        getQuery('#merge1Effect > span > span:last-of-type').textContent = `${groupsCost}`;\n                        getQuery('#merge1Effect > span > span').textContent = `${(groupsTotal ? mergeInfo.galaxies : player.buildings[5][3].true) - (mergeInfo.checkReward[0] + (groupsTotal ? merge.rewards[0] : 0)) * groupsCost}`;\n                        getQuery('#merge2Effect > span > span').textContent = `${player.buildings[5][3].true - mergeInfo.checkReward[1] * 100}`;\n                    }\n                    if (player.strangeness[4][4] < 2) { getQuery('#mainCapPostS5 > span').textContent = format(collapseInfo[vacuum ? 'solarCap' : 'newMass'] * (calculateStar[2](true) / starEffect[2]), { padding: true }); }\n                    getQuery('#elementsProductionS5 > span').textContent = format(new Overlimit(starProd[1]).plus(starProd[2], starProd[3], starProd[4], starProd[5]).multiply(speed), { padding: true });\n                    if (player.strangeness[4][4] < 3) { getQuery('#collapseBoostTotalS5 > span').textContent = format(total, { padding: true }); }\n                    getQuery('#mainCapS5 > span').textContent = format(collapseInfo.newMass, { padding: true });\n                    getQuery('#timeSinceGalaxy > span').textContent = format(merge.since, { type: 'time' });\n                }\n            } else if (active === 6) {\n                getId('darkHardcap').textContent = format(calculateEffects.darkHardcap(), { padding: true });\n                const mergeScore = calculateEffects.mergeScore();\n                for (let i = 0; i < global.versesInfo.firstCost.length; i++) {\n                    getId(`verse${i}Cur`).textContent = format(player.verses[i].current, { padding: 'exponent' });\n                    getId(`verse${i}Prod`).textContent = format(global.versesInfo.producing[i] * speed, { padding: true });\n\n                    let lockText;\n                    if (i === 0) {\n                        if (player.challenges.active === 0) {\n                            if (player.stage.true < 8) {\n                                lockText = \"Can't be created while inside\";\n                            } else if (global.challengesInfo[0].time < player.time.stage) {\n                                lockText = 'Out of Challenge time';\n                            }\n                        } else if (!vacuum) {\n                            lockText = 'Requires true Vacuum state';\n                        }\n                    }\n                    if (lockText !== undefined) {\n                        getId(`verse${i}`).classList.remove('availableBuilding');\n                        getId(`verse${i}Btn`).textContent = lockText;\n                        getId(`verse${i}BuyX`).textContent = 'Locked';\n                        continue;\n                    }\n\n                    const cost = calculateVerseCost(i);\n                    getId(`verse${i}`).classList[cost <= mergeScore ? 'add' : 'remove']('availableBuilding');\n                    getId(`verse${i}Btn`).textContent = `Need: ${format(cost, { padding: true })} Merge score`;\n                    getId(`verse${i}BuyX`).textContent = '1';\n                }\n                getQuery('#verse0True > span').textContent = format(player.verses[0].true, { padding: 'exponent' });\n                getId('voidVerses').textContent = format(player.inflation.voidVerses, { padding: 'exponent' });\n                if (vacuum) {\n                    getId('reset0Button').textContent = `Dark fluid is at ${format(assignResetInformation.newFluid(), { padding: true })}`;\n                    getQuery('#darkEnergySpent > span').textContent = format(global.dischargeInfo.energyStage[6] - player.darkness.energy, { padding: 'exponent' });\n                    getQuery('#nucleationBoostTotal > span').textContent = format((calculateEffects.darkFluid(true) / calculateEffects.darkFluid()), { padding: true });\n\n                    getId('mergeScore0Cur').textContent = format(global.mergeInfo.galaxies, { padding: 'exponent' });\n                    getId('mergeScore1Cur').textContent = format(player.merge.rewards[0] * 2, { padding: 'exponent' });\n                    getId('mergeScore2Cur').textContent = format(player.merge.rewards[1] * 4, { padding: 'exponent' });\n                    getId('mergeScoreTotal').textContent = format(mergeScore, { padding: 'exponent' });\n                    const remaining = calculateEffects.mergeMaxResets() - player.merge.resets;\n                    let post = mergeScore;\n                    if (remaining > 0) {\n                        const groupsCost = assignResetInformation.mergeReward();\n                        const allowed = player.buildings[5][3].true * (remaining - 1);\n                        post += player.buildings[5][3].true + allowed + //Galaxies\n                            Math.floor(player.researchesExtra[5][1] >= 2 ? (global.mergeInfo.galaxies + allowed) / groupsCost - player.merge.rewards[0] : global.mergeInfo.checkReward[0] * remaining) * 2 + //Groups\n                            Math.floor(global.mergeInfo.checkReward[1] * remaining) * 4; //Clusters\n                    }\n                    getId('mergeScoreAfter').textContent = format(post, { padding: 'exponent' });\n\n                    getQuery('#mergeResetsS6 > span').textContent = `${player.merge.resets}`;\n                    getQuery('#mergeResetsS6 > span:last-of-type').textContent = `${calculateEffects.mergeMaxResets()}`;\n                }\n                getQuery('#universeTime > span').textContent = format(player.inflation.age, { type: 'time' });\n                getQuery('#universeTime > span:last-of-type').textContent = format(player.time.universe, { type: 'time' });\n            }\n\n            getId('reset2Button').textContent = player.darkness.energy < 1000 ? `Requires ${format(1000)} Dark energy` : `Reset for ${format(player.verses[0].current, { padding: 'exponent' })} Cosmon`;\n            if (!vacuum && (active >= 6 ? player.stage.current : active) < 4) {\n                getId('stageReward').textContent = format(calculateEffects.strangeGain(false), { padding: true });\n                if (active < 4) { getId('reset1Button').textContent = stageResetCheck(active) ? 'Requirements are met' : `Requires ${active === 3 ? `${format(2.45576045e31)} Mass` : active === 2 ? `${format(1.19444e29)} Drops` : `${format(1.67133125e21)} Molecules`}`; }\n            } else { getId('stageReward').textContent = format(global.strangeInfo.quarksGain, { padding: true }); }\n            getQuery('#stageTime > span').textContent = format(player.stage.time, { type: 'time' });\n            getQuery('#stageTimeReal > span').textContent = format(player.time.stage, { type: 'time' });\n            getQuery('#globalSpeed > span').textContent = format(global.inflationInfo.globalSpeed, { padding: true });\n            if (player.time.offline < 0) { getQuery('#gameDisabled > span').textContent = format(-player.time.offline / 1000, { type: 'time' }); }\n        } else if (subtab === 'Advanced') {\n            const last = global.lastChallenge;\n            getChallengeDescription(last[0]);\n            if (last[0] === 0) {\n                getChallenge0Reward(last[1]);\n            } else if (last[0] === 1) {\n                getChallenge1Reward();\n            }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        if (subtab === 'Upgrades') {\n            for (let i = 0; i < global.upgradesInfo[active].maxActive; i++) { visualUpdateUpgrades(i, active, 'upgrades'); }\n            for (let i = 0; i < global.researchesInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researches'); }\n            for (let i = 0; i < global.researchesExtraInfo[active].maxActive; i++) { visualUpdateResearches(i, active, 'researchesExtra'); }\n            for (let i = 0; i < global.researchesAutoInfo.name.length; i++) { visualUpdateResearches(i, 0, 'researchesAuto'); }\n            visualUpdateResearches(0, active, 'ASR');\n            getUpgradeDescription(global.lastUpgrade[active][0], global.lastUpgrade[active][1]);\n        } else if (subtab === 'Elements') {\n            for (let i = 0; i < global.elementsInfo.name.length; i++) { visualUpdateUpgrades(i, 4, 'elements'); }\n            if (global.lastElement !== 0) { getUpgradeDescription(global.lastElement, 'elements'); }\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab === 'Matter') {\n            const interstellar = vacuum || (active >= 6 ? player.stage.current : active) >= 4;\n            const quarksGain = interstellar ? global.strangeInfo.quarksGain : calculateEffects.strangeGain(false);\n            getId('strange0Gain').textContent = format(quarksGain, { padding: true });\n            getId('strange1Gain').textContent = format(calculateEffects.strangeGain(interstellar, false), { padding: true });\n            getId('strangeRate').textContent = format(quarksGain / player.time.stage, { type: 'income' });\n            getId('strange0Cur').textContent = format(player.strange[0].current, { padding: true });\n            getId('strange1Cur').textContent = format(player.strange[1].current, { padding: true });\n            getId('stageTimeStrangeness').textContent = format(player.time.stage, { type: 'time' });\n            getQuery('#stageTimeBestReset > span').textContent = format(player.history.stage.best[0], { type: 'time' });\n            if (interstellar) {\n                getQuery('#strangePeak > span').textContent = format(player.stage.peak, { type: 'income' });\n                getId('strangePeakedAt').textContent = format(player.stage.peakedAt, { type: 'time' });\n            }\n            if (getId('strange1EffectsMain').style.display !== 'none') {\n                const information = global.strangeInfo.strangeletsInfo;\n                getId('strange1Effect1Stat0').textContent = format(information[0] * 100, { padding: true });\n                if (interstellar) { getId('strange1Effect1Stat1').textContent = format(stageResetCheck(5) ? information[0] * quarksGain / player.time.stage : 0, { type: 'income' }); }\n                getId('strange1Effect2Stat').textContent = format(information[1], { padding: true });\n            }\n            if (getId('strange0EffectsMain').style.display !== 'none') {\n                const { stageBoost } = global.strangeInfo;\n                const { strangeness } = player;\n\n                getId('strange0Effect1Stat').textContent = format(strangeness[1][6] >= 1 ? stageBoost[1] : 1, { padding: true });\n                getId('strange0Effect2Stat').textContent = format(strangeness[2][6] >= 1 ? stageBoost[2] : 1, { padding: true });\n                getId('strange0Effect3Stat').textContent = format(strangeness[3][7] >= 1 ? stageBoost[3] : 1, { padding: true });\n                getId('strange0Effect4Stat').textContent = format(strangeness[4][7] >= 1 ? stageBoost[4] : 1, { padding: true });\n                getId('strange0Effect5Stat').textContent = format(strangeness[5][7] >= 1 ? stageBoost[5] : 1, { padding: true });\n            }\n            for (let s = 1; s < global.strangenessInfo.length; s++) {\n                for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) { visualUpdateResearches(i, s, 'strangeness'); }\n            }\n            getStrangenessDescription(global.lastStrangeness[0], global.lastStrangeness[1], 'strangeness');\n        } else if (subtab === 'Milestones') {\n            const time = player.time[player.challenges.active === 0 && player.challenges.super ? 'vacuum' : 'stage'];\n            const noTime = vacuum ? time > global.challengesInfo[0].time : player.tree[0][4] < 1;\n            for (let s = 1; s < global.milestonesInfo.length; s++) {\n                const info = global.milestonesInfo[s];\n                for (let i = 0; i < info.need.length; i++) {\n                    getId(`milestone${i + 1}Stage${s}Current`).textContent = format(milestoneGetValue(i, s), { padding: true });\n                    getId(`milestone${i + 1}Stage${s}Required`).textContent = !vacuum && player.milestones[s][i] >= info.scaling[i].length ? 'Maxed' :\n                        noTime && (vacuum || time > info.reward[i]) ? 'No time' : format(info.need[i], { padding: true });\n                }\n            }\n            getStrangenessDescription(global.lastMilestone[0], global.lastMilestone[1], 'milestones');\n        }\n    } else if (tab === 'inflation') {\n        if (subtab === 'Inflations') {\n            getId('cosmon0Span').textContent = format(player.cosmon[0].current, { padding: 'exponent' });\n            getId('cosmon1Span').textContent = format(player.cosmon[1].current, { padding: 'exponent' });\n            getId('inflatonGainTrue').textContent = format(player.verses[0].true + player.inflation.voidVerses + 1, { padding: 'exponent' });\n            getId('endTime').textContent = format(player.time.end, { type: 'time' });\n            for (let s = 0; s <= 1; s++) {\n                for (let i = 0; i < global.treeInfo[s].name.length; i++) { visualUpdateResearches(i, s, 'inflations'); }\n            }\n            getStrangenessDescription(global.lastInflation[0], global.lastInflation[1], 'inflations');\n        }\n    } else if (tab === 'settings') {\n        if (subtab === 'Settings') {\n            const exportReward = player.time.export;\n            const improved = player.tree[0][5] >= 1;\n            const conversion = Math.min(exportReward[0] / 86400_000, 1);\n            getId('exportQuarks').textContent = format((improved ? exportReward[1] : exportReward[1] / 2.5 + 1) * conversion, { padding: true });\n            getId('exportStrangelets').textContent = format((improved ? exportReward[2] : exportReward[2] / 2.5) * conversion, { padding: true });\n            const lastSave = global.lastSave / 1000;\n            if (lastSave >= 1) { getId('isSaved').textContent = `${format(lastSave, { type: 'time' })} ago`; }\n        } else if (subtab === 'Stats') {\n            getId('firstPlayAgo').textContent = format((player.time.updated - player.time.started) / 1000, { type: 'time' });\n            getId('onlineTotal').textContent = format(player.time.online / 1000, { type: 'time' });\n            getQuery('#stageResets > span').textContent = `${player.stage.resets}`;\n            getQuery('#endResets > span').textContent = `${player.inflation.ends[0]}`;\n            getId('minEndReset').textContent = `${player.inflation.ends[1]}`;\n            getId('maxEndReset').textContent = `${player.inflation.ends[2]}`;\n\n            const exportReward = player.time.export;\n            const improved = player.tree[0][5] >= 1;\n            getId('exportQuarksMax').textContent = format((improved ? exportReward[1] : exportReward[1] / 2.5 + 1), { padding: true });\n            getId('exportStrangeletsMax').textContent = format((improved ? exportReward[2] : exportReward[2] / 2.5), { padding: true });\n            getId('exportTimeToMax').textContent = format((86400 - exportReward[0] / 1000) / calculateEffects.T0Inflation5(), { type: 'time' });\n            getId('exportQuarksStorage').textContent = format(exportReward[1], { padding: true });\n            getId('exportStrangeletsStorage').textContent = format(exportReward[2], { padding: true });\n            if (active === 1) {\n                getQuery('#dischargeStat > span').textContent = format(global.dischargeInfo.total);\n                getId('dischargeStatTrue').textContent = ` [${player.discharge.current}]`;\n                getQuery('#dischargeScaleStat > span').textContent = format(calculateEffects.dischargeScaling());\n                for (let s = 1; s < (vacuum ? 6 : 2); s++) {\n                    const buildings = player.buildings[s];\n                    const energyType = global.dischargeInfo.energyType[s];\n                    getId(`energyGainStage${s}Total`).textContent = format(global.dischargeInfo.energyStage[s], { padding: 'exponent' });\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Cur`).textContent = format(energyType[i] * buildings[i as 1].true, { padding: 'exponent' });\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}Per`).textContent = format(energyType[i]);\n                    }\n                }\n                getQuery('#effectiveEnergyStat > span').textContent = format(calculateEffects.effectiveEnergy(), { padding: true });\n                getQuery('#maxEnergyStat > span').textContent = format(player.discharge.energyMax, { padding: 'exponent' });\n            } else if (active === 2) {\n                const clouds = calculateEffects.clouds(true) / calculateEffects.clouds();\n                getQuery('#cloudStat > span').textContent = format(clouds, { padding: true });\n                const rainNow = calculateEffects.S2Extra1(player.researchesExtra[2][1]);\n                const rainAfter = calculateEffects.S2Extra1(player.researchesExtra[2][1], true);\n                const rain = rainAfter / rainNow;\n                const storm = calculateEffects.S2Extra2(rainAfter) / calculateEffects.S2Extra2(rainNow);\n                getQuery('#rainStat > span').textContent = format(rain, { padding: true });\n                getQuery('#stormStat > span').textContent = format(storm, { padding: true });\n                getId('cloudEffectTotal').textContent = format(clouds * rain * storm, { padding: true });\n                getQuery('#maxCloudStat > span').textContent = format(player.vaporization.cloudsMax, { padding: true });\n\n                if (vacuum) {\n                    buildings[0].total.setValue(player.buildings[1][5].total).divide('6.02214076e23');\n                    buildings[0].trueTotal.setValue(player.buildings[1][5].trueTotal).divide('6.02214076e23');\n                }\n            } else if (active === 3) {\n                getId('currentRank').textContent = format(global.accretionInfo.effective);\n                getId('currentRankTrue').textContent = ` [${player.accretion.rank}]`;\n                if (vacuum) {\n                    buildings[0].trueTotal.setValue(player.buildings[1][0].trueTotal).multiply('1.78266192e-33');\n                }\n            } else if (active === 4 || active === 5) {\n                getQuery('#maxSolarMassStat > span').textContent = format(player.collapse.massMax, { padding: true });\n                if (active === 4) {\n                    if (player.strangeness[4][4] < 3) {\n                        const auto2 = player.strangeness[4][4] >= 2;\n                        const calculateStar = calculateEffects.star;\n                        const mass = calculateEffects.mass(true) / effectsCache.mass;\n                        getQuery('#solarMassStat > span').textContent = format(mass, { padding: true });\n                        let star0 = 1;\n                        const star1 = auto2 ? 1 : calculateStar[1](true) / effectsCache.star1;\n                        const star2 = auto2 ? 1 : calculateStar[2](true) / effectsCache.star2;\n                        if (!auto2) {\n                            const starProd = global.buildingsInfo.producing[4];\n                            const restProd = new Overlimit(starProd[1]).plus(starProd[3], starProd[4], starProd[5]);\n                            star0 = new Overlimit(starProd[2]).multiply(calculateStar[0](true) / calculateStar[0]()).plus(restProd).divide(restProd.plus(starProd[2])).replaceNaN('1').toNumber();\n                            getQuery('#star1Stat > span').textContent = format(star0, { padding: true });\n                            getQuery('#star2Stat > span').textContent = format(star1, { padding: true });\n                            getQuery('#star3Stat > span').textContent = format(star2, { padding: true });\n                        }\n                        const gamma = calculateEffects.S4Research4(true) / calculateEffects.S4Research4();\n                        getQuery('#gammaRayStat > span').textContent = format(gamma, { padding: true });\n                        const quasar = (1 + (calculateEffects.S5Upgrade2(true) - calculateEffects.S5Upgrade2()) / effectsCache.galaxyBase) ** player.buildings[5][3].true;\n                        getQuery('#quasarStat > span').textContent = format(quasar, { padding: true });\n                        getId('starTotal').textContent = format(mass * star0 * star1 * star2 * gamma * (quasar ** 2), { padding: true });\n                    }\n                } else if (active === 5) {\n                    getQuery('#galaxyBase > span').textContent = format(effectsCache.galaxyBase, { padding: true });\n                    getId('trueStarsStat').textContent = format(global.collapseInfo.trueStars, { padding: 'exponent' });\n                    const stars = player.buildings[4];\n                    buildings[0].current.setValue(stars[1].current).plus(stars[2].current, stars[3].current, stars[4].current, stars[5].current);\n                    buildings[0].total.setValue(stars[1].total).plus(stars[2].total, stars[3].total, stars[4].total, stars[5].total);\n                    buildings[0].trueTotal.setValue(stars[1].trueTotal).plus(stars[2].trueTotal, stars[3].trueTotal, stars[4].trueTotal, stars[5].trueTotal);\n                    if (vacuum) {\n                        getQuery('#mergeResets > span').textContent = `${player.merge.resets}`;\n                        getQuery('#mergeResets > span:last-of-type').textContent = `${calculateEffects.mergeMaxResets()}`;\n                        assignResetInformation.mergeReward();\n                        const base = buildings[3].true / (global.mergeInfo.galaxies + 1) + 1;\n                        getQuery('#mergeBaseStat > span').textContent = format(base, { padding: true });\n                        const reward1 = calculateEffects.reward[0](true) / calculateEffects.reward[0]();\n                        getQuery('#merge1Stat > span').textContent = format(reward1, { padding: true });\n                        const reward2 = calculateEffects.reward[1](true) / calculateEffects.reward[1]();\n                        getQuery('#merge2Stat > span').textContent = format(reward2, { padding: true });\n                        getId('mergeTotal').textContent = format(base * reward1 * reward2, { padding: true });\n                    }\n                }\n            } else if (active === 6) {\n                getQuery('#effectiveDarkEnergyStat > span').textContent = format(calculateEffects.effectiveDarkEnergy(), { padding: true });\n                const energyType = global.dischargeInfo.energyType[6];\n                for (let i = 1; i < energyType.length; i++) {\n                    getId(`energyGainStage6Build${i}Cur`).textContent = format(energyType[i] * buildings[i as 1].true, { padding: 'exponent' });\n                    getId(`energyGainStage6Build${i}Per`).textContent = format(energyType[i]);\n                }\n            }\n            for (let i = 0; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}StatTotal`).textContent = format(buildings[i].total, { padding: true });\n                getId(`building${i}StatTrueTotal`).textContent = format(buildings[i].trueTotal, { padding: true });\n            }\n\n            getId('strange0StatTotal').textContent = format(player.strange[0].total, { padding: true });\n            getId('strange1StatTotal').textContent = format(player.strange[1].total, { padding: true });\n            getId('cosmon0StatTotal').textContent = format(player.cosmon[0].total, { padding: 'exponent' });\n            getId('cosmon1StatTotal').textContent = format(player.cosmon[1].total, { padding: 'exponent' });\n        }\n    }\n};\n\nexport const visualUpdate = (ignoreOffline = false) => {\n    if (global.offline.active && !ignoreOffline) { return; }\n    const tab = global.tabs.current;\n    const subtab = global.tabs[tab].current;\n    const { active, true: highest } = player.stage;\n    const vacuum = player.inflation.vacuum;\n\n    if (!player.event) {\n        if (highest >= 8) {\n            if (player.inflation.voidVerses > 0) { playEvent(13, false); }\n        } else if (highest === 7) {\n            if (vacuum && player.verses[0].true >= 2) { playEvent(10, false); }\n        } else if (highest === 6) {\n            if (player.merge.resets >= 1) { playEvent(8, false); }\n        } else if (highest === 5) {\n            if (active === 5) { playEvent(5, false); }\n        } else if (highest === 4) {\n            if (player.collapse.stars[1] >= 1) { playEvent(4, false); }\n        } else if (highest === 3) {\n            if (player.buildings[3][0].current.moreOrEqual('5e29')) { playEvent(3, false); }\n        } else if (highest === 2) {\n            if (assignResetInformation.newClouds() + player.vaporization.clouds > 1e4) { playEvent(2, false); }\n        } else if (highest === 1) {\n            if (player.upgrades[1][9] === 1) { playEvent(1, false); }\n        }\n    }\n\n    {\n        if (globalSave.toggles[1]) { getId('ElementsTabBtn').style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n        if (active === 1) {\n            if (highest < 2) {\n                getId('footerStat2').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                getId('upgradeTabBtn').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n            }\n        } else if (active === 2) {\n            getId('footerStat3').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n        } else if (active === 4) {\n            getId('resetExtraFooter').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n        } else if (active === 5) {\n            getId('resetExtraFooter').style.display = tab === 'stage' ? '' : 'none';\n        } else if (active === 6) {\n            getId('footerStat2').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n            getId('footerStat3').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n            getId('resetExtraFooter').style.display = tab === 'stage' && player.upgrades[5][3] === 1 ? '' : 'none';\n        }\n        let showReset1 = tab === 'stage' || tab === 'upgrade' || tab === 'Elements';\n        if (showReset1) {\n            if (active === 1) {\n                showReset1 = player.upgrades[1][5] === 1;\n            } else if (active === 2) {\n                showReset1 = player.upgrades[2][2] === 1;\n            } else if (active === 4) {\n                showReset1 = player.upgrades[4][0] === 1;\n            } else if (active === 5) {\n                showReset1 = player.upgrades[5][3] === 1;\n            } else if (active === 6) {\n                showReset1 = player.upgrades[6][0] === 1;\n            }\n        }\n        getId('reset2Footer').style.display = highest >= 8 && player.researchesExtra[6][3] >= 1 && (tab === 'stage' || tab === 'inflation') ? '' : 'none';\n        getId('reset1Footer').style.display = (highest >= 2 || player.upgrades[1][9] === 1) && (tab === 'stage' || tab === 'strangeness') ? '' : 'none';\n        getId('reset0Footer').style.display = showReset1 ? '' : 'none';\n    }\n    if (specialHTML.bigWindow === 'log') {\n        updateLog();\n    } else if (specialHTML.bigWindow === 'hotkeys') {\n        if (highest < 8) {\n            if (highest < 7) {\n                const showAll = player.stage.resets >= (vacuum ? 1 : 4);\n                getId('dischargeHotkey').style.display = showAll || player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('vaporizationHotkey').style.display = showAll || player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rankHotkey').style.display = showAll || global.stageInfo.activeAll.includes(3) ? '' : 'none';\n                getId('collapseHotkey').style.display = showAll || player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('galaxyHotkey').style.display = (vacuum ? player.strangeness[5][3] >= 1 : player.milestones[4][1] >= 8) ? '' : 'none';\n                getId('mergeHotkey').style.display = highest === 6 && (player.event || player.upgrades[5][3] === 1) ? '' : 'none';\n                getId('universeHotkey').style.display = highest === 6 && player.event ? '' : 'none';\n                getId('stageHotkey').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                getId('enterChallengeHotkey').style.display = highest >= 6 && player.stage.resets >= 1 ? '' : 'none';\n                getId('exitChallengeHotkey').style.display = highest >= 6 && player.stage.resets >= 1 ? '' : 'none';\n            }\n            getId('nucleationHotkey').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n        }\n    }\n\n    if (tab === 'stage') {\n        if (subtab === 'Structures') {\n            const buildings = player.buildings[active];\n            const buildingsToggle = player.toggles.buildings[active];\n            const ASR = player.ASR[active];\n\n            getId('exportMaxed').style.display = player.time.export[0] >= 86400_000 && (highest >= 7 || player.strange[0].total > 0) ? '' : 'none';\n            getId('gameDisabled').style.display = player.time.offline < 0 ? '' : 'none';\n            if (highest < 7) {\n                if (highest < 2) { getId('toggleBuilding0').style.display = ASR >= 1 ? '' : 'none'; }\n                getId('reset1Main').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                getId('stageTimeReal').style.display = player.stage.time !== player.time.stage ? '' : 'none';\n            }\n            getId('reset2Main').style.display = highest >= 8 && player.researchesExtra[6][3] >= 1 ? '' : 'none';\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                const toggleBtn = getId(`toggleBuilding${i}`);\n                getId(`building${i}True`).style.display = buildings[i].current.notEqual(buildings[i as 1].true) ? '' : 'none';\n                getId(`building${i}Btn`).tabIndex = ASR >= i && buildingsToggle[i] ? -1 : 0;\n                toggleBtn.style.display = ASR >= i ? '' : 'none';\n                toggleBtn.tabIndex = ASR >= i && buildingsToggle[i] ? 0 : -1;\n            }\n            if (active === 1) {\n                getId('reset0Main').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual(vacuum ? '5' : '18') ? '' : 'none';\n                getId('building3').style.display = buildings[2].trueTotal.moreOrEqual('2') ? '' : 'none';\n                if (vacuum) {\n                    getId('building4').style.display = buildings[3].trueTotal.moreOrEqual('18') || player.upgrades[1][2] === 1 ? '' : 'none';\n                    getId('building5').style.display = buildings[4].trueTotal.moreOrEqual('2') ? '' : 'none';\n                }\n                getId('stageInfo').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('tritiumEffect').style.display = player.upgrades[1][8] === 1 ? '' : 'none';\n                getId('energySpent').style.display = !((player.challenges.supervoid[4] >= 1 || player.accretion.rank >= 6) && player.strangeness[1][9] >= 1) || player.discharge.energy !== global.dischargeInfo.energyTrue ? '' : 'none';\n                getId('autoWaitMain').style.display = player.tree[1][7] < 1 && highest >= 3 ? '' : 'none';\n                if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[1][5] === 1 ? '' : 'none'; }\n            } else if (active === 2) {\n                getId('reset0Main').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('building2').style.display = buildings[1].trueTotal.moreOrEqual('4e2') || buildings[1].true >= 100 ? '' : 'none';\n                getId('building3').style.display = buildings[1].trueTotal.moreOrEqual('8e6') ? '' : 'none';\n                getId('building4').style.display = buildings[1].trueTotal.moreOrEqual('8e17') ? '' : 'none';\n                getId('building5').style.display = buildings[1].trueTotal.moreOrEqual('8e22') ? '' : 'none';\n                getId('cloudEffect').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('vaporizationBoostTotal').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('autoWaitMain').style.display = player.tree[1][7] < 2 && highest >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('building6').style.display = buildings[1].trueTotal.moreOrEqual('2e25') ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[2][2] === 1 ? '' : 'none'; }\n                } else { getId('stageInfo').style.display = player.upgrades[2][2] === 1 ? '' : 'none'; }\n            } else if (active === 3) {\n                const upgrades = player.upgrades[3];\n\n                getId('buildings').style.display = player.accretion.rank >= 1 ? '' : 'none';\n                getId('building2').style.display = upgrades[2] === 1 || buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building3').style.display = upgrades[4] === 1 || buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building4').style.display = upgrades[8] === 1 || buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('dustSoftcap').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none';\n                getId('autoWaitMain').style.display = player.tree[1][7] < 3 && highest >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = upgrades[11] === 1 || buildings[5].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('dustCap').style.display = player.researchesExtra[3][5] < 1 ? '' : 'none';\n                    getId('submersionBoost').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                } else { getId('stageInfo').style.display = global.accretionInfo.dustSoft !== 1 ? '' : 'none'; }\n                updateRankInfo();\n            } else if (active === 4) {\n                const nova = player.researchesExtra[4][0];\n\n                getId('reset0Main').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('specials').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special2').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('special3').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('building2').style.display = nova >= 1 ? '' : 'none';\n                getId('building3').style.display = nova >= 2 ? '' : 'none';\n                getId('building4').style.display = nova >= 3 ? '' : 'none';\n                getId('star1Effect').style.display = buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star2Effect').style.display = buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                getId('star3Effect').style.display = buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                getId('collapseBoostTotal').style.display = player.strangeness[4][4] < 3 && player.upgrades[4][0] === 1 ? '' : 'none';\n                getId('autoWaitMain').style.display = player.tree[1][7] < 4 && highest >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('building5').style.display = player.elements[26] >= 1 ? '' : 'none';\n                    getId('mainCap').style.display = player.upgrades[4][0] === 1 ? '' : 'none';\n                    if (highest < 7) { getId('resets').style.display = player.stage.resets >= 1 || player.upgrades[4][0] === 1 ? '' : 'none'; }\n                }\n                setRemnants();\n            } else if (active === 5) {\n                getId('reset0Main').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('specials').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('special2').style.display = player.researchesExtra[5][5] >= 1 ? '' : 'none';\n                    getId('mergeEffects').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('merge2Effect').style.display = player.researchesExtra[5][5] >= 1 ? '' : 'none';\n                    getId('mergeBoostTotal').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                } else {\n                    getId('buildings').style.display = player.milestones[2][0] >= 7 || player.milestones[3][0] >= 7 ? '' : 'none';\n                    getId('building1').style.display = player.milestones[2][0] >= 7 ? '' : 'none';\n                    getId('building2').style.display = player.milestones[3][0] >= 7 ? '' : 'none';\n                    if (highest < 7) { getId('mergeResetText').innerHTML = 'Attempt to <span class=\"darkvioletText\">Merge</span> <span class=\"grayText\">Galaxies</span> together to create even bigger Structures. Might have severe consequences.'; }\n                }\n                getId('building3').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('mainCapPostS5').style.display = player.strangeness[4][4] < 2 && player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('collapseBoostTotalS5').style.display = player.strangeness[4][4] < 3 ? '' : 'none';\n                getId('timeSinceGalaxy').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                getId('autoWaitMain').style.display = player.tree[1][7] < 4 && highest >= 3 ? '' : 'none';\n            } else if (active === 6) {\n                if (vacuum) {\n                    getId('reset0Main').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n                    getId('building1').style.display = player.upgrades[6][0] === 1 || player.researches[6][0] >= 8 ? '' : 'none';\n                    getId('darkEnergySpent').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n                    getId('nucleationBoostTotal').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n                    getId('mergeScore').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                    getId('mergeScore1').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('mergeScore2').style.display = player.researchesExtra[5][5] >= 1 ? '' : 'none';\n                    getId('mergeResetsS6').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getQuery('#mergeResetsS6 > span').style.color = `var(--${player.merge.resets >= calculateEffects.mergeMaxResets() ? 'green' : 'red'}-text)`;\n                } else {\n                    getId('building1').style.display = 'none';\n                }\n            }\n        } else if (subtab === 'Advanced') {\n            if (global.lastChallenge[0] === 0) {\n                const progress = player.challenges.voidCheck;\n                getId('voidRewards').style.display = '';\n                getId('voidReward2').style.display = progress[1] >= 3 ? '' : 'none';\n                getId('voidReward3').style.display = progress[1] >= 2 ? '' : 'none';\n                getId('voidReward4').style.display = progress[3] >= 5 ? '' : 'none';\n                getId('voidReward5').style.display = progress[4] >= 5 ? '' : 'none';\n            } else { getId('voidRewards').style.display = 'none'; }\n            getId('stabilityRewards').style.display = global.lastChallenge[0] === 1 && (highest >= 8 || player.verses[0].true >= 6) ? '' : 'none';\n            (getId('challengeName') as HTMLButtonElement).disabled = !(global.lastChallenge[0] === 0 && (highest >= 8 || (highest === 7 && player.event)));\n            getId('challengesToggles').style.display = player.strangeness[5][6] >= (vacuum ? 1 : 2) ? '' : 'none';\n            if (highest < 8) {\n                if (highest < 7) { getId('challenge1').style.display = player.stage.resets >= 1 ? '' : 'none'; }\n                getId('challenge2').style.cursor = player.verses[0].true >= 6 ? '' : 'help';\n            }\n        }\n    } else if (tab === 'upgrade' || tab === 'Elements') {\n        if (subtab === 'Upgrades') {\n            if (vacuum) {\n                getId('researchAuto1').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                getId('researchAuto2').style.display = player.accretion.rank >= 6 ? '' : 'none';\n            }\n            if (active === 1) {\n                const superposition = player.upgrades[1][5] === 1;\n\n                getId('upgrade7').style.display = superposition ? '' : 'none';\n                getId('upgrade8').style.display = superposition ? '' : 'none';\n                getId('upgrade9').style.display = superposition ? '' : 'none';\n                getId('upgrade10').style.display = superposition ? '' : 'none';\n                getId('stageResearches').style.display = superposition ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade11').style.display = superposition && player.strangeness[5][10] >= 1 ? '' : 'none';\n                    getId('extraResearches').style.display = superposition ? '' : 'none';\n                    getId('researchExtra2').style.display = player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.researchesExtra[1][2] >= 1 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra6').style.display = player.accretion.rank >= 6 && player.strangeness[5][10] >= 1 ? '' : 'none';\n                }\n                if (highest < 7) { getId('researches').style.display = superposition ? '' : 'none'; }\n            } else if (active === 2) {\n                const puddle2 = player.buildings[2][2].trueTotal.moreThan('0');\n                const puddle3 = player.buildings[2][3].trueTotal.moreThan('0');\n                const puddle4 = player.buildings[2][4].trueTotal.moreThan('0');\n                const puddle5 = player.buildings[2][5].trueTotal.moreThan('0');\n\n                getId('upgrade2').style.display = puddle2 ? '' : 'none';\n                getId('upgrade3').style.display = puddle3 ? '' : 'none';\n                getId('upgrade4').style.display = puddle2 ? '' : 'none';\n                getId('upgrade5').style.display = puddle2 ? '' : 'none';\n                getId('upgrade6').style.display = puddle3 ? '' : 'none';\n                getId('upgrade7').style.display = puddle4 ? '' : 'none';\n                getId('upgrade8').style.display = puddle5 && player.strangeness[2][2] >= 3 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade9').style.display = player.buildings[2][6].trueTotal.moreThan('0') && player.strangeness[2][8] >= 3 ? '' : 'none';\n                    getId('research7').style.display = player.strangeness[5][10] >= 2 && player.tree[1][5] >= 3 ? '' : 'none';\n                    getId('researchExtra4').style.display = player.accretion.rank >= 6 ? '' : 'none';\n                    getId('researchExtra5').style.display = player.accretion.rank >= 7 && player.strangeness[5][10] >= 2 ? '' : 'none';\n                }\n                getId('research2').style.display = puddle2 ? '' : 'none';\n                getId('research3').style.display = puddle2 ? '' : 'none';\n                getId('research4').style.display = puddle2 ? '' : 'none';\n                getId('research5').style.display = puddle3 ? '' : 'none';\n                getId('research6').style.display = puddle4 ? '' : 'none';\n                getId('extraResearches').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('researchExtra3').style.display = puddle5 ? '' : 'none';\n            } else if (active === 3) {\n                const rank = player.accretion.rank;\n                const planetesimal = player.buildings[3][2].trueTotal.moreThan('0');\n\n                getId('upgrade3').style.display = rank >= 2 ? '' : 'none';\n                getId('upgrade4').style.display = planetesimal ? '' : 'none';\n                getId('upgrade5').style.display = rank >= 3 ? '' : 'none';\n                getId('upgrade6').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('upgrade7').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade8').style.display = rank >= 4 && player.strangeness[3][2] >= 3 ? '' : 'none';\n                getId('upgrade9').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade10').style.display = rank >= 4 ? '' : 'none';\n                getId('upgrade11').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade12').style.display = rank >= 5 ? '' : 'none';\n                getId('upgrade13').style.display = rank >= 5 ? '' : 'none';\n                getId('research3').style.display = planetesimal ? '' : 'none';\n                getId('research4').style.display = planetesimal ? '' : 'none';\n                getId('research5').style.display = rank >= 3 ? '' : 'none';\n                getId('research6').style.display = rank >= 3 ? '' : 'none';\n                getId('research7').style.display = rank >= 4 || player.upgrades[3][4] === 1 ? '' : 'none';\n                getId('research8').style.display = rank >= 4 ? '' : 'none';\n                getId('research9').style.display = rank >= 5 ? '' : 'none';\n                getId('extraResearches').style.display = rank >= 2 ? '' : 'none';\n                getId('researchExtra2').style.display = rank >= 3 ? '' : 'none';\n                getId('researchExtra3').style.display = rank >= 4 ? '' : 'none';\n                getId('researchExtra4').style.display = rank >= 5 ? '' : 'none';\n                if (vacuum) {\n                    getId('upgrade14').style.display = rank >= 7 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                    getId('researchExtra5').style.display = rank >= 3 && player.researchesExtra[1][2] >= 2 ? '' : 'none';\n                    getId('researchExtra6').style.display = rank >= 6 && player.strangeness[5][10] >= 3 ? '' : 'none';\n                } else {\n                    getId('upgrades').style.display = rank >= 1 ? '' : 'none';\n                    getId('stageResearches').style.display = rank >= 1 ? '' : 'none';\n                }\n            } else if (active === 4) {\n                const { strangeness } = player;\n                const stars = player.collapse.stars;\n                const galaxy = player.researchesExtra[5][0] >= 1;\n\n                getId('upgrade4').style.display = strangeness[4][2] >= 3 ? '' : 'none';\n                getId('upgrade5').style.display = strangeness[4][9] >= 1 ? '' : 'none';\n                getId('research4').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 1 ? '' : 'none';\n                getId('research5').style.display = galaxy || stars[2] > 0 ? '' : 'none';\n                getId('research6').style.display = (galaxy || stars[2] > 0) && strangeness[4][9] >= 3 ? '' : 'none';\n                getId('researchExtra2').style.display = galaxy || stars[0] > 0 ? '' : 'none';\n                getId('researchExtra3').style.display = (galaxy || stars[0] > 0) && strangeness[4][2] >= 2 ? '' : 'none';\n                getId('researchExtra4').style.display = (galaxy || stars[1] > 0) && strangeness[4][9] >= 2 ? '' : 'none';\n            } else if (active === 5) {\n                const galaxy = player.researchesExtra[5][0] >= 1;\n                if (vacuum) {\n                    const protogalaxy = player.accretion.rank >= 7 && highest >= 7;\n                    getId('upgrade4').style.display = galaxy && player.accretion.rank >= 7 ? '' : 'none';\n                    getId('upgrade5').style.display = protogalaxy ? '' : 'none';\n                    getId('upgrade6').style.display = protogalaxy ? '' : 'none';\n                    getId('upgrade7').style.display = protogalaxy ? '' : 'none';\n                    getId('research3').style.display = protogalaxy ? '' : 'none';\n                    getId('research4').style.display = protogalaxy ? '' : 'none';\n                    getId('research5').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra2').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra3').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra4').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra5').style.display = protogalaxy ? '' : 'none';\n                    getId('researchExtra6').style.display = protogalaxy ? '' : 'none';\n                } else {\n                    const nebula = player.milestones[2][0] >= 7;\n                    const cluster = player.milestones[3][0] >= 7;\n\n                    getId('upgrades').style.display = nebula || cluster ? '' : 'none';\n                    getId('upgrade1').style.display = nebula ? '' : 'none';\n                    getId('upgrade2').style.display = cluster ? '' : 'none';\n                    getId('upgrade4').style.display = galaxy && player.milestones[5][1] >= 8 ? '' : 'none';\n                    getId('stageResearches').style.display = nebula || cluster ? '' : 'none';\n                    getId('research1').style.display = nebula ? '' : 'none';\n                    getId('research2').style.display = cluster ? '' : 'none';\n                    getId('extraResearches').style.display = player.milestones[4][1] >= 8 ? '' : 'none';\n                }\n                getId('upgrade3').style.display = galaxy ? '' : 'none';\n            } else if (active === 6) {\n                if (vacuum) {\n                    const darkEnergy = player.upgrades[6][0] === 1;\n                    const dark1 = player.buildings[6][1].total.moreThan('0');\n\n                    getId('upgrades').style.display = darkEnergy || dark1 ? '' : 'none';\n                    getId('stageResearches').style.display = player.strangeness[6][3] >= 1 ? '' : 'none';\n                    getId('research2').style.display = darkEnergy || dark1 ? '' : 'none';\n                    getId('research3').style.display = darkEnergy || dark1 ? '' : 'none';\n                    getId('research4').style.display = darkEnergy || dark1 ? '' : 'none';\n                    getId('extraResearches').style.display = darkEnergy ? '' : 'none';\n                } else {\n                    getId('upgrades').style.display = 'none';\n                    getId('stageResearches').style.display = 'none';\n                }\n            }\n        } else if (subtab === 'Elements') {\n            const upgrades = player.upgrades[4];\n            const neutron = player.upgrades[4][2] === 1 && (player.collapse.stars[1] > 0 || player.researchesExtra[5][0] >= 1);\n\n            let columns = 18 - (upgrades[3] === 1 ? 0 : 2) - (upgrades[4] === 1 ? (player.verses[0].true > 1 ? 0 : 1) : 2);\n            getId('elementsGrid').style.display = upgrades[2] === 1 ? '' : 'flex';\n            for (let i = 6; i <= 10; i++) { getId(`element${i}`).style.display = upgrades[2] === 1 ? '' : 'none'; }\n            for (let i = 11; i <= 26; i++) { getId(`element${i}`).style.display = neutron ? '' : 'none'; }\n            if (!neutron) {\n                columns = 8;\n            } else if (player.collapse.show < 23) { //26 - showAhead\n                for (let i = 26; i > Math.max(player.collapse.show + 3, 10); i--) { getId(`element${i}`).style.display = 'none'; }\n                columns = Math.max(player.collapse.show - 9, 8); //min + show + showAhead - 20\n            }\n            getId('element27').style.display = upgrades[3] === 1 ? '' : 'none';\n            getId('element28').style.display = upgrades[3] === 1 ? '' : 'none';\n            for (let i = 29; i < global.elementsInfo.name.length; i++) {\n                getId(`element${i}`).style.display = upgrades[4] === 1 && player.verses[0].true >= i - 29 ? '' : 'none';\n            }\n            document.documentElement.style.setProperty('--elements-columns', `${columns}`);\n        }\n    } else if (tab === 'strangeness') {\n        if (subtab === 'Matter') {\n            const universes = player.verses[0].current;\n            const show1 = global.sessionToggles[1] || universes < 2;\n            const show2 = global.sessionToggles[1] || universes < 3;\n            const show3 = global.sessionToggles[1] || universes < 4;\n            getId('strange1').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            getId('strange1Unlocked').style.display = player.strangeness[5][8] >= 1 ? '' : 'none';\n            if (vacuum) {\n                const bound = player.strangeness[5][3] >= 1;\n                const voidProgress = player.challenges.void;\n\n                getId('strange5Stage1').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage1').style.display = voidProgress[1] >= 1 ? '' : 'none';\n                getId('strange9Stage1').style.display = (universes >= 1 && player.strangeness[6][2] < 3 ? global.sessionToggles[1] : voidProgress[1] >= 2) ? '' : 'none';\n                getId('strange10Stage1').style.display = voidProgress[4] >= 2 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange8Stage2').style.display = voidProgress[1] >= 3 ? '' : 'none';\n                getId('strange9Stage2').style.display = voidProgress[2] >= 1 ? '' : 'none';\n                getId('strange10Stage2').style.display = voidProgress[2] >= 2 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage3').style.display = voidProgress[4] >= 4 ? '' : 'none';\n                getId('strange10Stage3').style.display = voidProgress[5] >= 1 || (player.challenges.active === 0 && player.challenges.super && player.tree[1][6] >= 4) ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 || voidProgress[4] >= 1 ? '' : 'none';\n                getId('strange9Stage4').style.display = voidProgress[4] >= 3 ? '' : 'none';\n                getId('strange10Stage4').style.display = voidProgress[4] >= 5 ? '' : 'none';\n                getId('strange1Stage5').style.display = bound ? '' : 'none';\n                getId('strange2Stage5').style.display = bound ? '' : 'none';\n                getId('strange5Stage5').style.display = (universes >= 2 ? show1 : voidProgress[4] >= 1) && bound ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && bound ? '' : 'none';\n                getId('strange8Stage5').style.display = bound ? '' : 'none';\n                getId('strange9Stage5').style.display = voidProgress[3] >= 5 ? '' : 'none';\n                getId('strange10Stage5').style.display = (universes >= 6 ? global.sessionToggles[1] : voidProgress[3] >= 6) ? '' : 'none';\n                getId('strange11Stage5').style.display = voidProgress[2] >= 3 ? '' : 'none';\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}6`).style.display = voidProgress[5] >= 2 ? '' : 'none';\n                if (globalSave.MDSettings[0] && global.debug.MDStrangePage === 6 && voidProgress[5] < 2) { MDStrangenessPage(1); }\n            } else {\n                const { milestones } = player;\n                const strange5 = milestones[4][0] >= 8;\n                const firstTwo = milestones[2][0] >= 7 || milestones[3][0] >= 7;\n\n                getId('strange5Stage1').style.display = show3 ? '' : 'none';\n                getId('strange7Stage1').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage2').style.display = show3 ? '' : 'none';\n                getId('strange7Stage2').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage3').style.display = show3 ? '' : 'none';\n                getId('strange8Stage3').style.display = strange5 ? '' : 'none';\n                getId('strange5Stage4').style.display = show3 ? '' : 'none';\n                getId('strange8Stage4').style.display = strange5 ? '' : 'none';\n                getId('strange1Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange2Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange3Stage5').style.display = milestones[5][0] >= 8 ? '' : 'none';\n                getId('strange4Stage5').style.display = firstTwo ? '' : 'none';\n                getId('strange5Stage5').style.display = show1 && milestones[4][1] >= 8 ? '' : 'none';\n                getId('strange6Stage5').style.display = show1 && firstTwo ? '' : 'none';\n                getId('strange10Stage5').style.display = global.sessionToggles[1] && universes >= 6 ? '' : 'none';\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}5`).style.display = strange5 ? '' : 'none';\n                if (globalSave.MDSettings[0] && (global.debug.MDStrangePage === 5 ? !strange5 : (highest < 6 && player.stage.resets < global.debug.MDStrangePage + 3))) { MDStrangenessPage(1); }\n                if (highest < 6) { getId('strange0').style.cursor = player.milestones[4][0] < 8 ? 'unset' : ''; }\n            }\n            getId('strange6Stage1').style.display = show1 ? '' : 'none';\n            getId('strange6Stage2').style.display = show1 ? '' : 'none';\n            getId('strange6Stage3').style.display = show1 ? '' : 'none';\n            getId('strange7Stage3').style.display = show2 ? '' : 'none';\n            getId('strange6Stage4').style.display = show1 ? '' : 'none';\n            getId('strange7Stage4').style.display = show2 ? '' : 'none';\n            getId('strange7Stage5').style.display = global.sessionToggles[1] || universes < 5 ? '' : 'none';\n        } else if (subtab === 'Milestones') {\n            if (!vacuum) {\n                const milestonesS4 = player.milestones[4];\n                getId('milestone1Stage5Div').style.display = milestonesS4[0] >= 8 ? '' : 'none';\n                getId('milestone2Stage5Div').style.display = milestonesS4[1] >= 8 ? '' : 'none';\n                if (global.stageInfo.activeAll.includes(4)) { getId('milestonesStage5Main').style.display = milestonesS4[0] >= 8 ? '' : 'none'; }\n                if (global.stageInfo.activeAll.includes(5)) { getId('milestone2Stage5Main').style.display = milestonesS4[1] >= 8 ? '' : 'none'; }\n            }\n        }\n    } else if (tab === 'inflation') {\n        if (subtab === 'Inflations') {\n            const supervoid = player.challenges.supervoid;\n            getId('inflation6Tree1').style.display = supervoid[3] >= 3 ? '' : 'none';\n            getId('inflation3Tree2').style.display = player.challenges.stability >= 1 ? '' : 'none';\n            getId('inflation4Tree2').style.display = supervoid[3] >= 5 ? '' : 'none';\n            getId('inflation5Tree2').style.display = supervoid[1] >= 1 ? '' : 'none';\n            getId('inflation6Tree2').style.display = supervoid[2] >= 1 ? '' : 'none';\n            getId('inflation7Tree2').style.display = supervoid[3] >= 4 ? '' : 'none';\n            getId('inflation8Tree2').style.display = supervoid[1] >= 3 ? '' : 'none';\n            if (highest < 8) { getId('inflationsTree2').style.display = supervoid[1] >= 1 ? '' : 'none'; }\n        } else if (subtab === 'Milestones') {\n            const universes = player.verses[0].current;\n            const supervoid = player.challenges.supervoid;\n            getId('inflationSupervoid1').style.display = supervoid[1] >= 2 ? '' : 'none';\n            getQuery('#inflationSupervoid1 > span').style.display = supervoid[4] >= 1 ? '' : 'none';\n            getId('inflationSupervoid2').style.display = supervoid[3] >= 1 ? '' : 'none';\n            getId('inflationSupervoid3').style.display = supervoid[3] >= 2 ? '' : 'none';\n            getQuery('#inflationMilestone1 > span').textContent = format(1.5);\n            for (let i = 1; i <= 7; i++) {\n                getId(`inflationMilestone${i}`).classList[universes >= i ? 'remove' : 'add']('uncompleted');\n            }\n        }\n    } else if (tab === 'settings') {\n        if (subtab === 'Settings') {\n            const { researchesAuto, strangeness } = player;\n\n            const exportReward = player.time.export;\n            const improved = player.tree[0][5] >= 1;\n            const timeToMax = 86400 / calculateEffects.T0Inflation5();\n            getId('exportReward').dataset.title = `${format((improved ? exportReward[1] : exportReward[1] / 2.5 + 1) / timeToMax, { type: 'income' }).replace(' ', ' Strange quarks ')}${player.strangeness[5][8] >= 1 ? `\\n${format((improved ? exportReward[2] : exportReward[2] / 2.5) / timeToMax, { type: 'income' }).replace(' ', ' Strangelets ')}` : ''}`;\n            getQuery('#exportReward > span:last-of-type').style.display = player.challenges.active !== null && global.challengesInfo[player.challenges.active].resetType !== 'stage' ? '' : 'none';\n            getId('collapsePointsMax').textContent = strangeness[5][4] >= 1 ? 'There is no maximum value' : 'Maximum value is 40';\n            getId('exportStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            getId('toggleAuto0').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            getId('toggleAuto0Info').style.display = strangeness[5][6] >= 1 ? '' : 'none';\n            if (!vacuum) { getId('stageAutoInterstellar').style.display = strangeness[5][6] >= 2 ? '' : 'none'; }\n            getId('autoTogglesUpgrades').style.display = researchesAuto[0] >= 1 || researchesAuto[1] >= 2 ? '' : 'none';\n            getId('autoToggle5').style.display = researchesAuto[0] >= 1 ? '' : 'none';\n            getId('autoToggle6').style.display = researchesAuto[0] >= 2 ? '' : 'none';\n            getId('autoToggle7').style.display = researchesAuto[0] >= 3 ? '' : 'none';\n            getId('autoToggle8').style.display = researchesAuto[1] >= 2 ? '' : 'none';\n            getId('toggleAuto1').style.display = strangeness[1][4] >= 1 || (researchesAuto[2] >= 1 && (vacuum || player.stage.current === 1)) ? '' : 'none';\n            const showAuto2 = strangeness[2][4] >= 1 || (vacuum ? researchesAuto[2] >= 3 : (researchesAuto[2] >= 1 && player.stage.current === 2));\n            getId('toggleAuto2').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto2Info').style.display = showAuto2 ? '' : 'none';\n            getId('toggleAuto3').style.display = strangeness[3][4] >= 1 || (vacuum ? researchesAuto[2] >= 2 : (researchesAuto[2] >= 1 && player.stage.current === 3)) ? '' : 'none';\n            const showAuto4 = strangeness[4][4] >= 1 || (vacuum ? researchesAuto[2] >= 4 : (researchesAuto[2] >= 1 && player.stage.current >= 4));\n            getId('toggleAuto4').style.display = showAuto4 ? '' : 'none';\n            getId('toggleAuto4Info').style.display = showAuto4 ? '' : 'none';\n            const showAuto5 = strangeness[5][9] >= 1 || researchesAuto[2] >= 5;\n            getId('toggleAuto9').style.display = showAuto5 ? '' : 'none';\n            getId('toggleAuto9Info').style.display = showAuto5 ? '' : 'none';\n            if (highest < 8) {\n                if (highest < 5) { getId('elementsAsTab').style.display = player.upgrades[4][1] === 1 ? '' : 'none'; }\n                if (highest < 6) { getId('saveFileNameGalaxy').style.display = player.milestones[4][1] >= 8 ? '' : 'none'; }\n                if (highest < 7) {\n                    const showAll = player.stage.resets >= (vacuum ? 1 : 4);\n                    getId('resetToggles').style.display = showAll || player.upgrades[1][5] === 1 ? '' : 'none';\n                    getId('vaporizationToggleReset').style.display = showAll || player.upgrades[2][2] === 1 ? '' : 'none';\n                    getId('rankToggleReset').style.display = showAll || global.stageInfo.activeAll.includes(3) ? '' : 'none';\n                    getId('collapseToggleReset').style.display = showAll || player.upgrades[4][0] === 1 ? '' : 'none';\n                    getId('mergeToggleReset').style.display = highest === 6 && (player.event || player.upgrades[5][3] === 1) ? '' : 'none';\n                    getId('stageToggleReset').style.display = player.stage.resets >= 1 || (vacuum ? player.elements[26] >= 1 : player.upgrades[1][9] === 1) ? '' : 'none';\n                    getId('stageAutoElse').style.display = !vacuum || player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('vaporizationExtra').style.display = player.challenges.void[4] >= 1 ? '' : 'none';\n                    getId('exportReward').style.display = player.strange[0].total > 0 ? '' : 'none';\n                }\n                getId('nucleationToggleReset').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n            }\n        } else if (subtab === 'History') {\n            updateStageHistory();\n            updateEndHistory();\n        } else if (subtab === 'Stats') {\n            const { strangeness } = player;\n            const buildings = player.buildings[active];\n\n            getId('firstPlay').textContent = new Date(player.time.started).toLocaleString();\n            getId('exportStatsStrangeletsUnlocked').style.display = strangeness[5][8] >= 1 ? '' : 'none';\n            if (highest < 7) {\n                getId('stageResets').style.display = player.stage.resets >= 1 ? '' : 'none';\n                getId('exportStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            }\n            for (let i = 1; i < global.buildingsInfo.maxActive[active]; i++) {\n                getId(`building${i}Stats`).style.display = buildings[i].trueTotal.moreThan('0') ? '' : 'none';\n            }\n            getId('strangeAllStats').style.display = player.strange[0].total > 0 ? '' : 'none';\n            getId('strange1Stats').style.display = player.strange[1].total > 0 ? '' : 'none';\n\n            getId('maxSolarMassStat').style.display = active === 4 || active === 5 ? '' : 'none';\n            if (active === 1) {\n                getId('dischargeStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                getId('dischargeStatTrue').style.display = player.discharge.current !== global.dischargeInfo.total ? '' : 'none';\n                getId('dischargeScaleStat').style.display = player.upgrades[1][5] === 1 ? '' : 'none';\n                for (let s = 1; s <= (vacuum ? 5 : 1); s++) {\n                    let anyUnlocked = false;\n                    for (let i = 1; i < global.buildingsInfo.maxActive[s]; i++) {\n                        const unlocked = player.buildings[s][i].trueTotal.moreThan('0');\n                        if (!anyUnlocked) { anyUnlocked = unlocked; }\n                        getId(`energyGainStage${s}Build${i + (vacuum ? 0 : 2)}`).style.display = unlocked ? '' : 'none';\n                    }\n                    getId(s === 1 ? 'energyGainStats' : `energyGainStage${s}`).style.display = anyUnlocked ? '' : 'none';\n                }\n                if (highest < 2) {\n                    getId('effectiveEnergyStat').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                    getId('maxEnergyStat').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                    getId('energyGainStats').style.display = player.discharge.energyMax >= 12 ? '' : 'none';\n                }\n            } else if (active === 2) {\n                getId('vaporizationBoost').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n                getId('rainStat').style.display = player.researchesExtra[2][1] >= 1 ? '' : 'none';\n                getId('stormStat').style.display = player.researchesExtra[2][2] >= 1 ? '' : 'none';\n                getId('maxCloudStat').style.display = player.upgrades[2][2] === 1 ? '' : 'none';\n            } else if (active === 3) {\n                getId('currentRankTrue').style.display = global.accretionInfo.effective !== player.accretion.rank ? '' : 'none';\n                if (vacuum) {\n                    getId('rankStat0').style.display = strangeness[2][9] >= 1 ? '' : 'none';\n                }\n                for (let i = 1; i < global.accretionInfo.rankImage.length; i++) { getId(`rankStat${i}`).style.display = player.accretion.rank >= i ? '' : 'none'; }\n            } else if (active === 4) {\n                getId('collapseBoost').style.display = player.strangeness[4][4] < 3 && player.upgrades[4][0] === 1 ? '' : 'none';\n                if (player.strangeness[4][4] < 3) {\n                    const auto2 = strangeness[4][4] >= 2;\n                    getId('star1Stat').style.display = !auto2 && buildings[2].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('star2Stat').style.display = !auto2 && buildings[3].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('star3Stat').style.display = !auto2 && buildings[4].trueTotal.moreThan('0') ? '' : 'none';\n                    getId('gammaRayStat').style.display = player.researchesExtra[5][0] >= 1 || player.collapse.stars[2] >= 1 ? '' : 'none';\n                    getId('quasarStat').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                }\n            } else if (active === 5) {\n                getId('galaxyBase').style.display = player.researchesExtra[5][0] >= 1 ? '' : 'none';\n                if (vacuum) {\n                    getId('mergeResets').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getQuery('#mergeResets > span').style.color = `var(--${player.merge.resets >= calculateEffects.mergeMaxResets() ? 'green' : 'red'}-text)`;\n                    getId('mergeBoost').style.display = player.upgrades[5][3] === 1 ? '' : 'none';\n                    getId('merge1Stat').style.display = player.researchesExtra[5][1] >= 1 ? '' : 'none';\n                    getId('merge2Stat').style.display = player.researchesExtra[5][5] >= 1 ? '' : 'none';\n                }\n            } else if (active === 6) {\n                getId('effectiveDarkEnergyStat').style.display = player.upgrades[6][0] === 1 ? '' : 'none';\n                getId('energyGainStage6').style.display = buildings[1].trueTotal.moreThan('0') ? '' : 'none';\n            }\n        }\n    }\n};\nexport const visualTrueStageUnlocks = () => {\n    const highest = player.stage.true;\n    const superUnlocked = highest >= 8 || (highest === 7 && player.event);\n\n    getId('stageRewardOld').style.display = highest < 5 ? '' : 'none';\n    getId('stageRewardNew').style.display = highest >= 5 ? '' : 'none';\n    getId('verse0True').style.display = highest >= 8 ? '' : 'none';\n    getId('researchAuto3').style.display = highest >= 7 ? '' : 'none';\n    getId(globalSave.MDSettings[0] ? 'toggleHover0' : 'researchToggles').style.display = highest >= 2 ? '' : 'none';\n    getId('toggleMax0').style.display = highest >= 4 ? '' : 'none';\n    getId('globalSpeed').style.display = highest >= 7 ? '' : 'none';\n    (getId('rewardsType') as HTMLButtonElement).disabled = !superUnlocked;\n    getId('strange1GlobalSpeedInfo').style.display = highest >= 7 ? '' : 'none';\n    getId('strangenessVisibility').style.display = highest >= 7 ? '' : 'none';\n    getId('strangenessToggles').style.display = superUnlocked ? '' : 'none';\n    getId('cosmon1').style.display = highest >= 8 ? '' : 'none';\n    getId('inflation4Tree1').style.display = superUnlocked ? '' : 'none';\n    getId('inflation5Tree1').style.display = superUnlocked ? '' : 'none';\n    getId('inflation1Tree2').style.display = highest >= 8 ? '' : 'none';\n    getId('inflation2Tree2').style.display = highest >= 8 ? '' : 'none';\n    getId('inflationSupervoid').style.display = superUnlocked ? '' : 'none';\n    getId('endMilestone1').style.display = highest >= 8 ? '' : 'none';\n    getQuery('#resetToggles > h2 > span').style.display = highest >= 5 ? '' : 'none';\n    getId('endToggleReset').style.display = highest >= 8 ? '' : 'none';\n    getId('themeArea').style.display = highest >= 2 || globalSave.theme !== null ? '' : 'none';\n    getId('switchTheme2').style.display = highest >= 2 ? '' : 'none';\n    getId('switchTheme3').style.display = highest >= 3 ? '' : 'none';\n    getId('switchTheme4').style.display = highest >= 4 ? '' : 'none';\n    getId('switchTheme5').style.display = highest >= 5 ? '' : 'none';\n    getId('switchTheme6').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameStrange').style.display = highest >= 5 ? '' : 'none';\n    getId('saveFileNameVacuum').style.display = highest >= 6 ? '' : 'none';\n    getId('saveFileNameUniverse').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameInflaton').style.display = highest >= 7 ? '' : 'none';\n    getId('saveFileNameCosmon').style.display = highest >= 8 ? '' : 'none';\n    getId('autoStageSwitch').style.display = highest >= 5 ? '' : 'none';\n    getId('endResets').style.display = highest >= 8 ? '' : 'none';\n    getId('inflatonStat').style.display = highest >= 7 ? '' : 'none';\n    getId('cosmon1Stat').style.display = highest >= 8 ? '' : 'none';\n    getId('cosmonGain').style.display = highest >= 8 ? '' : 'none';\n    getId('endHistory').style.display = highest >= 8 ? '' : 'none';\n    if (highest >= 2) {\n        getId('toggleBuilding0').style.display = '';\n        getId('effectiveEnergyStat').style.display = '';\n        getId('maxEnergyStat').style.display = '';\n        getId('upgradeTabBtn').style.display = '';\n    }\n    if (highest >= 5) {\n        getId('elementsAsTab').style.display = '';\n    }\n    if (highest >= 6) {\n        getId('strange0').style.cursor = '';\n        getId('saveFileNameGalaxy').style.display = '';\n        for (let s = 2; s <= 4; s++) {\n            getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = '';\n            getId(`milestone1Stage${s}Div`).style.display = '';\n            getId(`milestone2Stage${s}Div`).style.display = '';\n        }\n    }\n    if (highest >= 7) {\n        getId('stageSelect').style.display = '';\n        getId('resets').style.display = '';\n        getId('reset1Main').style.display = '';\n        getId('stageTimeReal').style.display = '';\n        getId('challenge1').style.display = '';\n        getId('researches').style.display = '';\n        getId('stageAutoElse').style.display = '';\n        getId('vaporizationExtra').style.display = '';\n        getId('resetToggles').style.display = '';\n        getId('vaporizationToggleReset').style.display = '';\n        getId('rankToggleReset').style.display = '';\n        getId('collapseToggleReset').style.display = '';\n        getId('mergeToggleReset').style.display = '';\n        getId('stageToggleReset').style.display = '';\n        getId('strangenessTabBtn').style.display = '';\n        getId('stageResets').style.display = '';\n        getId('exportReward').style.display = '';\n        getId('exportStats').style.display = '';\n        getId('hideGlobalStats').style.display = '';\n        if (!globalSave.toggles[4]) { getId('globalStats').style.display = ''; }\n    }\n    if (highest >= 8) {\n        getId('challenge2').style.cursor = '';\n        getId('inflationsTree2').style.display = '';\n        getId('nucleationToggleReset').style.display = '';\n    }\n\n    if (specialHTML.bigWindow === 'hotkeys') {\n        getId('stageRightHotkey').style.display = highest >= 5 ? '' : 'none';\n        getId('stageLeftHotkey').style.display = highest >= 5 ? '' : 'none';\n        if (globalSave.MDSettings[0]) { getId('stageSwipe').style.display = highest >= 5 ? '' : 'none'; }\n        getId('supervoidHotkey').style.display = superUnlocked ? '' : 'none';\n        getId('endHotkey').style.display = highest >= 8 ? '' : 'none';\n        if (highest >= 7) {\n            getId('stageHotkey').style.display = '';\n            getId('dischargeHotkey').style.display = '';\n            getId('vaporizationHotkey').style.display = '';\n            getId('rankHotkey').style.display = '';\n            getId('collapseHotkey').style.display = '';\n            getId('galaxyHotkey').style.display = '';\n            getId('mergeHotkey').style.display = '';\n            getId('universeHotkey').style.display = '';\n            getId('enterChallengeHotkey').style.display = '';\n            getId('exitChallengeHotkey').style.display = '';\n        }\n        if (highest >= 8) { getId('nucleationHotkey').style.display = ''; }\n    }\n};\n\nexport const getUpgradeDescription = (index: number | null, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements') => {\n    if (type === 'elements') {\n        if (index === null) {\n            getId('elementText').textContent = 'Hover to see.';\n            getId('elementEffect').textContent = 'Hover to see.';\n            getId('elementCost').textContent = 'Stardust.';\n            return;\n        }\n        const pointer = global.elementsInfo;\n\n        getId('elementText').textContent = `${pointer.name[index]}.`;\n        getId('elementEffect').textContent = player.elements[index] > 0 || (player.collapse.show >= index && index !== 0) ? pointer.effectText[index]() : 'Effect is not yet known.';\n        getId('elementCost').textContent = player.elements[index] >= 1 ? 'Obtained.' :\n            player.elements[index] > 0 ? 'Awaiting Collapse.' :\n            index === 0 ? 'Unknown.' : `${format(pointer.cost[index])} Stardust.${globalSave.MDSettings[0] ? ' (Hold to create)' : ''}`;\n        return;\n    }\n\n    const stageIndex = player.stage.active;\n    if (index === null) {\n        getId('upgradeText').textContent = 'Hover to see.';\n        getId('upgradeEffect').textContent = 'Hover to see.';\n        getId('upgradeCost').textContent = `${global.stageInfo.costName[stageIndex]}.`;\n        return;\n    }\n    if (type === 'upgrades') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const notEnoughUniverses = stageIndex === 5 && global.mergeInfo.unlockU[index] > player.verses[0].true;\n\n        getId('upgradeText').textContent = `${pointer.name[index]}.`;\n        getId('upgradeEffect').textContent = notEnoughUniverses ? 'Effect will be revealed once requirements are met.' : pointer.effectText[index]();\n        getId('upgradeCost').textContent = player.upgrades[stageIndex][index] === 1 ? 'Created.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 && ((index === 3 || index === 4) && player.buildings[1][(player.inflation.vacuum ? 4 : 2) + (index === 3 ? 0 : 1)].total.equal('0')) ? `Requires any amount of ${index === 3 ? 'Atoms' : 'Molecules'} to create.` :\n            stageIndex === 2 && index === 0 && player.buildings[2][1].true < 1 && player.buildings[2][2].true < 1 ? 'Requires any amount of self-made Drops to create.' :\n            stageIndex === 4 && global.collapseInfo.unlockU[index] > player.collapse.mass && player.researchesExtra[5][0] < 1 ? `Unlocked at ${format(global.collapseInfo.unlockU[index])} Mass.` :\n            notEnoughUniverses ? `Unlocked at ${global.mergeInfo.unlockU[index]} self-made Universes.` :\n            `${format(pointer.cost[index])} ${global.stageInfo.costName[stageIndex]}.`;\n    } else if (type === 'researches' || type === 'researchesExtra') {\n        const pointer = global[`${type}Info`][stageIndex];\n        const level = player[type][stageIndex][index];\n        if (type === 'researchesExtra' && stageIndex === 4 && index === 0) { pointer.name[0] = ['Nova', 'Supernova', 'Hypernova'][Math.min(level, 2)]; }\n        const notEnoughUniverses = stageIndex === 5 && global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index] > player.verses[0].true;\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = notEnoughUniverses ? 'Effect will be revealed once requirements are met.' : pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else if (stageIndex === 4 && type === 'researches' && global.collapseInfo.unlockR[index] > player.collapse.mass && player.researchesExtra[5][0] < 1) {\n            getId('upgradeCost').textContent = `Unlocked at ${format(global.collapseInfo.unlockR[index])} Mass.`;\n        } else if (stageIndex === 5 && type === 'researchesExtra' && player.strangeness[5][3] < 1) {\n            getId('upgradeCost').textContent = \"Requires 'Gravitational bound' Strangeness.\";\n        } else if (notEnoughUniverses) {\n            getId('upgradeCost').textContent = `Unlocked at ${global.mergeInfo[`unlock${type === 'researches' ? 'R' : 'E'}`][index]} self-made Universes.`;\n        } else {\n            let newLevels = 1;\n            let cost = pointer.cost[index];\n            const tillMax = pointer.max[index] - level;\n            if (tillMax > 1 && (player.toggles.max[0] !== global.hotkeys.shift)) {\n                const scaling = pointer.scaling[index];\n                if (typeof cost === 'number') {\n                    const currency = player[stageIndex === 1 ? 'discharge' : 'darkness'].energy;\n                    if (stageIndex === 1 && (player.challenges.supervoid[4] >= 1 || player.accretion.rank >= 6) && player.strangeness[1][9] >= 1) {\n                        newLevels = Math.min(Math.max(Math.floor((currency - cost) / scaling + 1), 1), tillMax);\n                        if (newLevels > 1) { cost += (newLevels - 1) * scaling; }\n                    } else {\n                        const simplify = cost - scaling / 2;\n                        newLevels = Math.min(Math.max(Math.floor(((simplify ** 2 + 2 * scaling * currency) ** 0.5 - simplify) / scaling), 1), tillMax);\n                        if (newLevels > 1) { cost = newLevels * (newLevels * scaling / 2 + simplify); }\n                    }\n                } else {\n                    const currency = player.buildings[stageIndex === 5 ? 4 : stageIndex][stageIndex === 2 ? 1 : 0].current;\n                    newLevels = Math.min(Math.max(Math.floor(new Overlimit(currency).multiply(scaling - 1).divide(cost).plus('1').log(scaling).toNumber()), 1), tillMax);\n                    if (newLevels > 1) { cost = new Overlimit(scaling).power(newLevels).minus('1').divide(scaling - 1).multiply(cost); }\n                }\n            }\n\n            getId('upgradeCost').textContent = `${format(cost)} ${stageIndex === 6 && type === 'researchesExtra' ? 'Dark energy' : global.stageInfo.costName[stageIndex]}.${newLevels > 1 ? ` [x${newLevels}]` : ''}`;\n        }\n    } else if (type === 'researchesAuto') {\n        const pointer = global.researchesAutoInfo;\n        let level = player.researchesAuto[index];\n\n        getId('upgradeText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('upgradeEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('upgradeCost').textContent = 'Maxed.';\n        } else {\n            const autoStage = pointer.autoStage[index][level];\n            if (index === 1) { //Level from here can only be used for cost\n                if (player.strangeness[4][6] >= 1) { level--; }\n            } else if (index === 2) {\n                if (player.strangeness[1][4] >= 1) { level--; }\n                if (player.strangeness[2][4] >= 1) { level--; }\n                if (player.strangeness[3][4] >= 1) { level--; }\n                if (player.strangeness[4][4] >= 1) { level--; }\n                if (player.strangeness[5][9] >= 1) { level--; }\n            }\n            if (index === 1 && player.strangeness[4][6] >= 1) { level = Math.max(level - 1, 0); }\n            getId('upgradeCost').textContent = `${format(pointer.costRange[index][Math.max(level, 0)])} ${global.stageInfo.costName[autoStage]}. ${!(autoStage === stageIndex || (stageIndex === 5 && autoStage === 4)) ? `(Requires to be in the '${global.stageInfo.word[autoStage]}')` : ''}`;\n        }\n    } else if (type === 'ASR') {\n        const pointer = global.ASRInfo;\n        const level = player.ASR[stageIndex];\n\n        getId('upgradeText').textContent = `${pointer.name}. (Level ${level} out of ${pointer.max[stageIndex]})`;\n        getId('upgradeEffect').textContent = pointer.effectText();\n        getId('upgradeCost').textContent = level >= pointer.max[stageIndex] ? 'Maxed.' :\n            stageIndex === 1 && player.upgrades[1][5] !== 1 ? \"Cannot be created without 'Superposition' Upgrade.\" :\n            stageIndex === 3 && player.accretion.rank < 1 ? \"Cannot be created at 'Ocean world' Rank.\" :\n            `${format(pointer.costRange[stageIndex][level])} ${global.stageInfo.costName[stageIndex]}.`;\n    }\n};\n\nexport const getStrangenessDescription = (index: number | null, stageIndex: number, type: 'strangeness' | 'milestones' | 'inflations') => {\n    if (type === 'inflations') {\n        if (index === null) {\n            getId('inflationText').textContent = 'Hover to see.';\n            getId('inflationEffect').textContent = 'Hover to see.';\n            getId('inflationCost').textContent = 'Inflatons.';\n            return;\n        }\n        const pointer = global.treeInfo[stageIndex];\n        const level = player.tree[stageIndex][index];\n\n        getId('inflationText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('inflationEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('inflationCost').textContent = 'Fully activated.';\n        } else {\n            let newLevel = 1 + level;\n            let cost = pointer.cost[index];\n            if (player.toggles.max[2] !== global.hotkeys.shift) {\n                while (pointer.max[index] > newLevel) {\n                    const check = cost + Math.floor(Math.round((pointer.firstCost[index] + pointer.scaling[index] * newLevel) * 100) / 100);\n                    if (player.cosmon[stageIndex].current < check) { break; }\n                    cost = check;\n                    newLevel++;\n                }\n            }\n            getId('inflationCost').textContent = `${cost === 0 ? 'None' : `${format(cost)} ${stageIndex === 0 ? 'Inflatons' : player.stage.true >= 8 ? 'Cosmons' : '(Not unlocked)'}`}.${newLevel - level > 1 ? ` [x${newLevel - level}]` : ''}`;\n        }\n        return;\n    }\n    const stageText = getId(`${type}Stage`);\n    if (index !== null) {\n        stageText.style.color = `var(--${global.stageInfo.textColor[stageIndex]}-text)`;\n        stageText.textContent = `${global.stageInfo.word[stageIndex]}. `;\n    } else { stageText.textContent = ''; }\n    if (type === 'strangeness') {\n        if (index === null) {\n            getId('strangenessText').textContent = 'Hover to see.';\n            getId('strangenessEffect').textContent = 'Hover to see.';\n            getId('strangenessCost').textContent = 'Strange quarks.';\n            return;\n        }\n        const pointer = global.strangenessInfo[stageIndex];\n        const level = player.strangeness[stageIndex][index];\n\n        getId('strangenessText').textContent = `${pointer.name[index]}. (Level ${level} out of ${pointer.max[index]})`;\n        getId('strangenessEffect').textContent = pointer.effectText[index]();\n        if (level >= pointer.max[index]) {\n            getId('strangenessCost').textContent = 'Maxed.';\n        } else if (player.challenges.active === 1 && stageIndex < 4 && player.milestones[stageIndex][1] >= (stageIndex === 1 ? 6 : 7)) {\n            getId('strangenessCost').textContent = `${global.stageInfo.word[stageIndex]} is removed from the reset cycle.`;\n        } else {\n            let newLevel = 1 + level;\n            let cost = pointer.cost[index];\n            if (player.toggles.max[1] !== global.hotkeys.shift) {\n                while (pointer.max[index] > newLevel) {\n                    const check = cost + (player.inflation.vacuum ?\n                        Math.floor(Math.round((pointer.firstCost[index] * pointer.scaling[index] ** newLevel) * 100) / 100) :\n                        Math.floor(Math.round((pointer.firstCost[index] + pointer.scaling[index] * newLevel) * 100) / 100));\n                    if (player.strange[0].current < check) { break; }\n                    cost = check;\n                    newLevel++;\n                }\n            }\n            getId('strangenessCost').textContent = `${format(cost)} Strange quarks.${newLevel - level > 1 ? ` [x${newLevel - level}]` : ''}`;\n        }\n    } else {\n        let text;\n        if (index === null) {\n            getId('milestonesText').textContent = 'Hover to see.';\n            text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"blueText\">Time limit: <span class=\"greenText\">Hover to see.</span></p>\n            <p class=\"darkvioletText\">${player.inflation.vacuum ? 'Effect' : 'Unlock'}: <span class=\"greenText\">Hover to see.</span></p>`;\n        } else {\n            const pointer = global.milestonesInfo[stageIndex];\n            const level = player.milestones[stageIndex][index];\n            getId('milestonesText').textContent = `${pointer.name[index]}. (Tier ${level}${player.inflation.vacuum ? '' : ` out of ${pointer.scaling[index].length}`})`;\n            if (player.inflation.vacuum) {\n                const isActive = player.challenges.active === 0 && player.tree[0][4] >= 1;\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(global.challengesInfo[0].time - (isActive ? player.time[player.challenges.super ? 'vacuum' : 'stage'] : 0), { type: 'time' })} ${isActive ? 'remains ' : ''}to increase this tier within Void.</span></p>\n                <p class=\"darkvioletText\">Effect: <span class=\"greenText\">${pointer.rewardText[index]()}</span>${player.tree[0][4] < 1 ? ' <span class=\"redText\">(Disabled)</span>' : ''}</p>`;\n            } else if (level < pointer.scaling[index].length) {\n                const isActive = global.stageInfo.activeAll.includes(Math.min(stageIndex, 4));\n                text = `<p class=\"orchidText\">Requirement: <span class=\"greenText\">${pointer.needText[index]()}</span></p>\n                <p class=\"blueText\">Time limit: <span class=\"greenText\">${format(pointer.reward[index] - (isActive && player.tree[0][4] < 1 ? player.time.stage : 0), { type: 'time' })} ${isActive && player.tree[0][4] < 1 ? 'remains ' : ''}to complete this tier within ${isActive ? 'current' : global.stageInfo.word[index === 0 && stageIndex === 5 ? 4 : stageIndex]} Stage.</span></p>\n                <p class=\"darkvioletText\">Unlock: <span class=\"greenText\">Main reward unlocked after ${pointer.scaling[index].length - level} more completions.</span></p>`;\n            } else { text = `<p class=\"darkvioletText\">Reward: <span class=\"greenText\">${pointer.rewardText[index]()}</span></p>`; }\n        }\n\n        const multilineID = getId('milestonesMultiline');\n        if (specialHTML.cache.innerHTML.get(multilineID) !== text) {\n            specialHTML.cache.innerHTML.set(multilineID, text);\n            multilineID.innerHTML = text;\n        }\n        const container = multilineID.parentElement as HTMLElement;\n        const heightTest = container.getBoundingClientRect().height;\n        if (specialHTML.cache.innerHTML.get(container) !== heightTest) {\n            specialHTML.cache.innerHTML.set(container, heightTest);\n            container.style.minHeight = `${heightTest}px`;\n        }\n    }\n};\n\nexport const getChallengeDescription = (index: number) => {\n    const info = global.challengesInfo[index];\n    const isActive = player.challenges.active === index;\n    const nameID = getId('challengeName');\n    nameID.textContent = info.name;\n    nameID.style.color = `var(--${info.color}-text)`;\n    getId('challengeActive').style.display = isActive ? '' : 'none';\n\n    const unlocked = index !== 1 || player.stage.true >= 8 || player.verses[0].true >= 6;\n    const time = player.time[info.resetType];\n    (nameID.parentElement as HTMLElement).style.display = unlocked ? '' : 'none';\n    let text = !unlocked ? '' : `<p class=\"whiteText\">${info.description()}</p>\n    <section><h4 class=\"${info.color}Text bigWord\">Effects:</h4>\n    <div>${info.effectText()}</section>\n    <p class=\"blueText\">${isActive ? 'Remaining time' : 'Time limit'} is <span class=\"cyanText\">${format(info.time - (isActive ? time : 0), { type: 'time' })}</span></p></div>`;\n\n    if (index === 1) {\n        const vacuum = player.inflation.vacuum;\n        const gain = vacuum ? player.verses[0].true + player.inflation.voidVerses + 1 : 1;\n        text += `${unlocked ? '<section>' : ''}<h3 class=\"darkorchidText bigWord\">Vacuum information</h3>\n        <p class=\"orchidText\">Vacuum state: <span class=\"${vacuum ? 'greenText\">true' : 'redText\">false'}</span> | Resets: <span class=\"darkorchidText\">${player.inflation.resets}</span></p>\n        ${player.stage.true >= 7 || player.event ? `<p class=\"darkvioletText\">Current Inflatons gain: <span class=\"${vacuum ? 'green' : 'red'}Text\">${format(gain, { padding: 'exponent' })}</span> | Rate: <span class=\"${vacuum ? 'green' : 'red'}Text\">${format(gain / time, { type: 'income' })}</span></p>` : ''}\n        <p class=\"orchidText\">Time since last reset: <span class=\"darkorchidText\">${format(player.inflation.time, { type: 'time' })}</span> (Real: <span class=\"darkorchidText\">${format(time, { type: 'time' })}</span>)</p>${unlocked ? '</section>' : ''}`;\n    }\n\n    if (specialHTML.cache.innerHTML.get('challengeMultiline') !== text) {\n        specialHTML.cache.innerHTML.set('challengeMultiline', text);\n        getId('challengeMultiline').innerHTML = text;\n    }\n};\n\nexport const getChallenge0Reward = (index: number) => {\n    const supervoid = global.sessionToggles[0];\n    const info = global.challengesInfo[0];\n    const reward = info.rewardText[supervoid ? 1 : 0][index];\n    const current = player.challenges[supervoid ? 'supervoidMax' : 'void'][index];\n    const best = player.challenges[supervoid ? 'supervoid' : 'voidCheck'][index];\n    const arrayMax = player.challenges[supervoid ? 'supervoid' : 'void'];\n    const total = 1 + arrayMax[1] + arrayMax[2] + arrayMax[3] + arrayMax[4] + arrayMax[5];\n    let text = `<p class=\"greenText center\">All unlocks are related to ${supervoid ? 'Inflations' : 'Strangeness'}\\nAlso gain ${supervoid ? `a single Inflaton after unlocking ${total - global.inflationInfo.totalSuper} more` : `${total} Strange quarks, which is equal to total`} rewards</p>`;\n    for (let i = 0; i < reward.length; i++) {\n        const needText = info.needText[index][i]();\n        if (needText === null) { continue; }\n        const unlocked = current > i;\n        let failText;\n        if (!unlocked && player.challenges.active === 0) {\n            if (supervoid && !player.challenges.super) {\n                failText = 'Supervoid only';\n            } else if (player.time[supervoid ? 'vacuum' : 'stage'] > info.time) {\n                failText = 'Out of time';\n            } else if (index === 2 && i === 2 && player.accretion.rank > 1) {\n                failText = 'Failed';\n            }\n        }\n        text += `<div><p><span class=\"${unlocked ? 'greenText' : 'redText'}\">\u2192 </span>${needText}${failText !== undefined ? ` <span class=\"redText\">(${failText})</span>` : ''}</p>\n        <p><span class=\"${unlocked ? 'greenText' : 'redText'}\">Reward: </span>${best > i ? `${reward[i]}${!unlocked && globalSave.SRSettings[0] ? ' (not unlocked)' : ''}` : 'Not yet unlocked'}</p></div>`;\n    }\n    if (specialHTML.cache.innerHTML.get('voidRewardsMultiline') !== text) {\n        specialHTML.cache.innerHTML.set('voidRewardsMultiline', text);\n        getId('voidRewardsMultiline').innerHTML = text;\n    }\n};\nexport const getChallenge1Reward = () => {\n    const info = global.challengesInfo[1];\n    const current = player.challenges.stability;\n    let text = `<p class=\"greenText center\">${current} Completions, can be increased by Merging Galaxies while inside\\nAlso gain a single Inflaton after 1 more completion</p>`;\n    for (let i = 0; i < info.rewardText.length; i++) {\n        const unlocked = current > i;\n        let failText;\n        if (!unlocked && player.challenges.active === 1) {\n            if (player.time.vacuum > info.time) {\n                failText = 'Out of time';\n            }\n        }\n        text += `<div><p><span class=\"${unlocked ? 'greenText' : 'redText'}\">\u2192 </span>${info.needText[i]}${failText !== undefined ? ` <span class=\"redText\">(${failText})</span>` : ''}</p>\n        <p><span class=\"${unlocked ? 'greenText' : 'redText'}\">Reward: </span>${unlocked ? info.rewardText[i] : 'Not yet unlocked'}</p></div>`;\n    }\n    if (specialHTML.cache.innerHTML.get('stabilityRewardsMultiline') !== text) {\n        specialHTML.cache.innerHTML.set('stabilityRewardsMultiline', text);\n        getId('stabilityRewardsMultiline').innerHTML = text;\n    }\n};\n\nconst visualUpdateUpgrades = (index: number, stageIndex: number, type: 'upgrades' | 'elements') => {\n    if (type === 'upgrades') {\n        if (stageIndex !== player.stage.active) { return; }\n\n        let color = '';\n        const image = getId(`upgrade${index + 1}`);\n        if (player.upgrades[stageIndex][index] === 1) {\n            if (stageIndex === 1) {\n                color = 'green';\n            } else if (stageIndex === 2) {\n                color = 'darkgreen';\n            } else if (stageIndex === 3 || stageIndex === 6) {\n                color = '#0000b1'; //Darker blue\n            } else if (stageIndex === 4) {\n                color = '#1f1f8f'; //Brigher midnightblue\n            } else if (stageIndex === 5) {\n                color = '#990000'; //Brigher maroon\n            }\n            image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n        } else { image.tabIndex = 0; }\n        image.style.backgroundColor = color;\n    } else if (type === 'elements') {\n        const image = getId(`element${index}`);\n        if (player.elements[index] >= 1) {\n            image.classList.remove('awaiting');\n            image.classList.add('created');\n            if (index > 0) { image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1; }\n        } else {\n            image.classList[player.elements[index] > 0 ? 'add' : 'remove']('awaiting');\n            image.classList.remove('created');\n            if (index > 0) { image.tabIndex = 0; }\n        }\n    }\n};\n\nconst visualUpdateResearches = (index: number, stageIndex: number, type: 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'strangeness' | 'inflations') => {\n    let max: number;\n    let level: number;\n    let upgradeHTML: HTMLElement;\n    let image: HTMLElement;\n    let mainQuery: HTMLElement | undefined;\n    if (type === 'researches' || type === 'researchesExtra') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global[`${type}Info`][stageIndex].max[index];\n        level = player[type][stageIndex][index];\n\n        const extra = type === 'researches' ? '' : 'Extra';\n        upgradeHTML = getId(`research${extra}${index + 1}Level`);\n        getId(`research${extra}${index + 1}Max`).textContent = `${max}`;\n        image = getQuery(`#research${extra}${index + 1} > input`);\n        mainQuery = getQuery(`#research${type === 'researchesExtra' ? 'Extra' : ''}${index + 1} span`);\n    } else if (type === 'researchesAuto') {\n        max = global.researchesAutoInfo.max[index];\n        level = player.researchesAuto[index];\n\n        upgradeHTML = getId(`researchAuto${index + 1}Level`);\n        getId(`researchAuto${index + 1}Max`).textContent = `${max}`;\n        image = getQuery(`#researchAuto${index + 1} > input`);\n    } else if (type === 'ASR') {\n        if (stageIndex !== player.stage.active) { return; }\n        max = global.ASRInfo.max[stageIndex];\n        level = player.ASR[stageIndex];\n\n        upgradeHTML = getId('ASRLevel');\n        getId('ASRMax').textContent = `${max}`;\n        image = getQuery('#ASR > input');\n    } else if (type === 'strangeness') {\n        max = global.strangenessInfo[stageIndex].max[index];\n        level = player.strangeness[stageIndex][index];\n\n        upgradeHTML = getId(`strange${index + 1}Stage${stageIndex}Level`);\n        getId(`strange${index + 1}Stage${stageIndex}Max`).textContent = `${max}`;\n        image = getQuery(`#strange${index + 1}Stage${stageIndex} > input`);\n    } else /*if (type === 'inflations')*/ {\n        max = global.treeInfo[stageIndex].max[index];\n        level = player.tree[stageIndex][index];\n\n        upgradeHTML = getId(`inflation${index + 1}Tree${stageIndex + 1}Level`);\n        getId(`inflation${index + 1}Tree${stageIndex + 1}Max`).textContent = `${max}`;\n        image = getQuery(`#inflation${index + 1}Tree${stageIndex + 1} > input`);\n    }\n\n    upgradeHTML.textContent = `${level}`;\n    if (level >= max) {\n        upgradeHTML.style.color = 'var(--green-text)';\n        image.tabIndex = globalSave.SRSettings[0] && globalSave.SRSettings[1] ? 0 : -1;\n    } else if (level === 0) {\n        upgradeHTML.style.color = 'var(--red-text)';\n        image.tabIndex = 0;\n    } else {\n        upgradeHTML.style.color = 'var(--orchid-text)';\n        image.tabIndex = 0;\n    }\n\n    /** Fixes text movement */\n    if (mainQuery !== undefined) {\n        const widthTest = mainQuery.getBoundingClientRect().width;\n        if (specialHTML.cache.innerHTML.get(mainQuery) !== widthTest) {\n            specialHTML.cache.innerHTML.set(mainQuery, widthTest);\n            mainQuery.style.minWidth = `${widthTest}px`;\n        }\n    }\n};\n\nconst updateRankInfo = () => {\n    const rank = player.accretion.rank;\n    if (global.debug.rankUpdated === rank) { return; }\n    const rankInfo = global.accretionInfo;\n    const name = getId('rankName');\n\n    getId('reset0Button').textContent = rank >= rankInfo.maxRank ? 'Max Rank achieved' : `Next Rank is ${format(rankInfo.rankCost[rank])} Mass`;\n    (getId('rankImage') as HTMLImageElement).src = `Used_art/${rankInfo.rankImage[rank]}`;\n    name.textContent = rankInfo.rankName[rank];\n    name.style.color = `var(--${rankInfo.rankColor[rank]}-text)`;\n    global.debug.rankUpdated = rank;\n};\n\nexport const updateCollapsePoints = () => {\n    const points = player.collapse.points;\n    const array = new Array(points.length);\n    for (let i = 0; i < points.length; i++) {\n        array[i] = format(points[i], { type: 'input' });\n    }\n    getId('collapsePoints').textContent = array.length > 0 ? `${array.join(', ')} or ` : '';\n};\n\nconst setRemnants = () => {\n    if (player.stage.active === 4) {\n        const whiteDwarf = player.researchesExtra[4][2] >= 1;\n        const src1 = whiteDwarf ? 'White%20dwarf' : 'Red%20giant';\n        const img1 = getQuery('#special1 > img') as HTMLImageElement;\n        if (specialHTML.cache.innerHTML.get(img1) !== src1) {\n            specialHTML.cache.innerHTML.set(img1, src1);\n            img1.src = `Used_art/${src1}.png`;\n            img1.alt = whiteDwarf ? 'White dwarfs (Red giants)' : 'Red giants';\n            getId('special1').dataset.title = img1.alt;\n            getId('special1Cur').style.color = `var(--${whiteDwarf ? 'cyan' : 'red'}-text)`;\n        }\n\n        const quarkStar = player.researchesExtra[4][3] >= 1;\n        const src2 = quarkStar ? 'Quark%20star' : 'Neutron%20star';\n        const img2 = getQuery('#special2 > img') as HTMLImageElement;\n        if (specialHTML.cache.innerHTML.get(img2) !== src2) {\n            specialHTML.cache.innerHTML.set(img2, src2);\n            img2.src = `Used_art/${src2}.png`;\n            img2.alt = quarkStar ? 'Quark stars (Neutron stars)' : 'Neutron stars';\n            getId('special2').dataset.title = img2.alt;\n            getId('special2Cur').style.color = 'var(--darkviolet-text)';\n            getQuery('#star2Effect > span.info').textContent = `Boost${quarkStar ? ' and cost decrease' : ''} to all Stars`;\n        }\n\n        if (player.inflation.vacuum) { getQuery('#star3Effect > span.info').textContent = `Boost to the Solar mass gain${player.elements[33] >= 1 ? ', Quasi-stars strength' : ''} and delay to the Preons hardcap`; }\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Stars remnants'; }\n    } else if (player.stage.active === 5) {\n        const img1 = getQuery('#special1 > img') as HTMLImageElement;\n        specialHTML.cache.innerHTML.set(img1, 'Group');\n        img1.src = 'Used_art/Galaxy%20group.png';\n        img1.alt = 'Galaxy groups';\n        getId('special1').dataset.title = 'Galaxy groups';\n        getId('special1Cur').style.color = 'var(--gray-text)';\n\n        const img2 = getQuery('#special2 > img') as HTMLImageElement;\n        specialHTML.cache.innerHTML.set(img2, 'Cluster');\n        img2.src = 'Used_art/Missing.png'; //Galaxy%20cluster\n        img2.alt = 'Galaxy clusters';\n        getId('special2').dataset.title = 'Galaxy clusters';\n        getId('special2Cur').style.color = 'var(--gray-text)';\n        if (globalSave.SRSettings[0]) { getId('specials').ariaLabel = 'Merge results'; }\n    }\n};\n\nconst updateStageHistory = () => {\n    if (global.debug.historyStage === player.stage.resets) { return; }\n    const list = global.historyStorage.stage;\n    const length = Math.min(list.length, player.history.stage.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"greenText\">${format(list[i][1], { padding: true })} Strange quarks</span>, <span class=\"darkorchidText\">${format(list[i][1] / list[i][0], { type: 'income' })}</span>${list[i][2] > 0 ? `, <span class=\"greenText\">${format(list[i][2], { padding: true })} Strangelets</span>, <span class=\"darkorchidText\">${format(list[i][2] / list[i][0], { type: 'income' })}</span>` : ''}, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('stageHistoryList').innerHTML = text;\n\n    const best = player.history.stage.best;\n    getId('stageHistoryBest').innerHTML = `<span class=\"greenText\">${format(best[1], { padding: true })} Strange quarks</span>, <span class=\"darkorchidText\">${format(best[1] / best[0], { type: 'income' })}</span>${best[2] > 0 ? `, <span class=\"greenText\">${format(best[2], { padding: true })} Strangelets</span>, <span class=\"darkorchidText\">${format(best[2] / best[0], { type: 'income' })}</span>` : ''}, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>`;\n    global.debug.historyStage = player.stage.resets;\n};\nconst updateEndHistory = () => {\n    if (global.debug.historyEnd === player.inflation.ends[0]) { return; }\n    const list = global.historyStorage.end;\n    const length = Math.min(list.length, player.history.end.input[1]);\n\n    let text = '';\n    if (length > 0) {\n        for (let i = 0; i < length; i++) {\n            text += `<li class=\"whiteText\"><span class=\"darkvioletText\">${format(list[i][1], { padding: 'exponent' })} Cosmons</span>, <span class=\"darkorchidText\">${format(list[i][1] / list[i][0], { type: 'income' })}</span>, <span class=\"blueText\">${format(list[i][0], { type: 'time' })}</span></li>`;\n        }\n    } else { text = '<li class=\"redText\">Reference list is empty</li>'; }\n    getId('endHistoryList').innerHTML = text;\n\n    const best = player.history.end.best;\n    getId('endHistoryBest').innerHTML = `<span class=\"darkvioletText\">${format(best[1], { padding: 'exponent' })} Cosmons</span>, <span class=\"darkorchidText\">${format(best[1] / best[0], { type: 'income' })}</span>, <span class=\"blueText\">${format(best[0], { type: 'time' })}</span>`;\n    global.debug.historyEnd = player.inflation.ends[0];\n};\n\nexport const addIntoLog = (text: string) => {\n    const add = global.log.add;\n    if (add.length < 1) {\n        const lastHTML = global.log.lastHTML;\n        if (lastHTML[0] === text) {\n            lastHTML[1]++;\n            lastHTML[3] = true;\n        } else { add.push([text, 1, player.time.stage]); }\n    } else if (add[add.length - 1][0] === text) {\n        add[add.length - 1][1]++;\n    } else {\n        add.push([text, 1, player.time.stage]);\n        if (add.length > 1000) { add.shift(); }\n    }\n};\nconst updateLog = () => {\n    const { add, lastHTML } = global.log;\n    if (add.length < 1 && !lastHTML[3]) { return; }\n\n    const mainHTML = getId('logMain');\n    const children = mainHTML.children;\n    if (lastHTML[3]) {\n        add.unshift([lastHTML[0], lastHTML[1], lastHTML[2]]);\n        children[0].remove();\n    }\n\n    const length = add.length;\n    const prepend = new Array(length);\n    for (let i = 0; i < length; i++) {\n        const li = document.createElement('li');\n        const hours = Math.min(Math.trunc(add[i][2] / 3600), 99);\n        const minutes = Math.min(Math.trunc(add[i][2] / 60 - hours * 60), 99);\n        li.innerHTML = `<span class=\"whiteText\">${hours !== 0 ? `${`${hours}`.padStart(2, '0')}h` : ''} ${`${minutes}`.padStart(2, '0')}m ${hours === 0 ? `${`${Math.trunc(add[i][2] - hours * 3600 - minutes * 60)}`.padStart(2, '0')}s` : ''}</span> \u2012 <span class=\"whiteText\">${add[i][0]}</span>${add[i][1] > 1 ? ` | x${add[i][1]}` : ''}`;\n        prepend[length - 1 - i] = li;\n    }\n    const last = add[length - 1];\n    lastHTML[0] = last[0];\n    lastHTML[1] = last[1];\n    lastHTML[2] = last[2];\n    lastHTML[3] = false;\n    global.log.add = [];\n    mainHTML.prepend(...prepend);\n\n    for (let i = children.length - 1; i >= 1000; i--) { children[i].remove(); }\n};\n\n/** @param padding 'exponent' value will behave as true, but only after number turns into its shorter version */\nexport const format = (input: number | Overlimit, settings = {} as { type?: 'number' | 'input' | 'time' | 'income', padding?: boolean | 'exponent' }): string => {\n    if (typeof input === 'object') { return input?.format(settings as any); }\n    const type = settings.type ?? 'number';\n    let padding = settings.padding;\n\n    let extra;\n    if (type === 'income') { //1.2345e6 per second\n        const inputAbs = Math.abs(input);\n        if (inputAbs >= 1) {\n            extra = 'per second';\n        } else if (inputAbs >= 1 / 60) {\n            input *= 60;\n            extra = 'per minute';\n        } else if (inputAbs >= 1 / 3600) {\n            input *= 3600;\n            extra = 'per hour';\n        } else if (inputAbs >= 1 / 86400) {\n            input *= 86400;\n            extra = 'per day';\n        } else if (inputAbs >= 1 / 31556952) {\n            input *= 31556952;\n            extra = 'per year';\n        } else if (inputAbs >= 1 / 3.1556952e10) {\n            input *= 3.1556952e10;\n            extra = 'per millennium';\n        } else if (inputAbs >= 1 / 3.1556952e13) {\n            input *= 3.1556952e13;\n            extra = 'per megaannum';\n        } else {\n            input *= 3.1556952e16;\n            extra = 'per eon';\n        }\n\n        padding ??= true;\n    } else if (type === 'time') { //12 Minutes 34 Seconds\n        const inputAbs = Math.abs(input);\n        if (inputAbs < 60) {\n            extra = 'seconds';\n        } else if (inputAbs < 3600) {\n            const minutes = Math.trunc(input / 60);\n            const seconds = Math.trunc(input - minutes * 60);\n            if (padding === false && seconds === 0) { return `${minutes} minutes`; }\n            return `${minutes} minutes ${seconds} seconds`;\n        } else if (inputAbs < 86400) {\n            const hours = Math.trunc(input / 3600);\n            const minutes = Math.trunc(input / 60 - hours * 60);\n            if (padding === false && minutes === 0) { return `${hours} hours`; }\n            return `${hours} hours ${minutes} minutes`;\n        } else if (inputAbs < 31556952) {\n            const days = Math.trunc(input / 86400);\n            const hours = Math.trunc(input / 3600 - days * 24);\n            if (padding === false && hours === 0) { return `${days} days`; }\n            return `${days} days ${hours} hours`;\n        } else if (inputAbs < 3.1556952e10) {\n            const years = Math.trunc(input / 31556952);\n            const days = Math.trunc(input / 86400 - years * 365.2425);\n            if (padding === false && days === 0) { return `${years} years`; }\n            return `${years} years ${days} days`;\n        } else if (inputAbs < 3.1556952e13) {\n            input /= 3.1556952e10;\n            extra = 'millenniums';\n        } else if (inputAbs < 3.1556952e16) {\n            input /= 3.1556952e13;\n            extra = 'megaannums';\n        } else {\n            input /= 3.1556952e16;\n            extra = 'eons';\n        }\n\n        padding ??= true;\n    }\n    if (!isFinite(input)) { return extra !== undefined ? `${input} ${extra}` : `${input}`; }\n\n    const inputAbs = Math.abs(input);\n    if (inputAbs >= 1e6 || (inputAbs < 1e-4 && inputAbs > 0)) { //1.23e123 (-1.23e-123)\n        if (padding === 'exponent') { padding = true; }\n\n        let digits = Math.floor(Math.log10(inputAbs));\n        let precision = 3 - Math.floor(Math.log10(Math.abs(digits)));\n        let result = Math.round(input / 10 ** (digits - precision)) / 10 ** precision;\n        if (Math.abs(result) === 10) { //To remove rare bugs\n            result /= 10;\n            digits++;\n            if (digits === -4) { return format(1e-4 * result, settings); }\n            if (padding) { precision = 3 - Math.floor(Math.log10(Math.abs(digits))); }\n        }\n\n        let formated = padding ? result.toFixed(precision) : `${result}`;\n        if (type === 'input') { return `${formated}e${digits}`; }\n        formated = `${formated.replace('.', globalSave.format[0])}e${digits}`;\n        return extra !== undefined ? `${formated} ${extra}` : formated;\n    }\n\n    //12345 (-12345)\n    let precision = inputAbs < 10 ? 5 : (5 - Math.floor(Math.log10(inputAbs)));\n    const result = Math.round(input * 10 ** precision) / 10 ** precision;\n\n    const resultAbs = Math.abs(result); //To remove rare bugs\n    if (resultAbs === 1e6) { return format(result, settings); }\n    if (padding === 'exponent') {\n        padding = false;\n    } else if (padding) { precision = resultAbs < 10 ? 5 : (5 - Math.floor(Math.log10(resultAbs))); }\n\n    let formated = padding ? result.toFixed(precision) : `${result}`;\n    if (type === 'input') { return formated; }\n    formated = formated.replace('.', globalSave.format[0]);\n    if (result >= 1e3) { formated = formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]); }\n    return extra !== undefined ? `${formated} ${extra}` : formated;\n};\n\nexport const stageUpdate = (changed = true, ignoreOffline = false) => {\n    const { stageInfo, buildingsInfo } = global;\n    const { active, current, true: highest } = player.stage;\n    const activeAll = stageInfo.activeAll;\n    const vacuum = player.inflation.vacuum;\n    const challenge = player.challenges.active;\n\n    activeAll.length = 0;\n    if (vacuum) {\n        activeAll.push(1);\n        if (player.researchesExtra[1][2] >= 2) { activeAll.push(2); }\n        if (current >= 2) { activeAll.push(3); } //player.researchesExtra[1][2] >= 1\n        if (current >= 4) { activeAll.push(4); } //player.accretion.rank >= 6\n        if (current >= 5 && player.strangeness[5][3] >= 1) { activeAll.push(5); } //player.elements[26] >= 1\n    } else {\n        if (current === 1 || (challenge !== 1 && player.milestones[1][1] >= 6)) { stageInfo.activeAll.push(1); }\n        if (current === 2 || (challenge !== 1 && player.milestones[2][1] >= 7)) { stageInfo.activeAll.push(2); }\n        if (current === 3 || (challenge !== 1 && player.milestones[3][1] >= 7)) { stageInfo.activeAll.push(3); }\n        if (current >= 4) { activeAll.push(4); }\n        if (current >= 5) { activeAll.push(5); } //player.elements[26] >= 1\n    }\n    if (highest >= 7 || (highest === 6 && player.event)) { activeAll.push(6); }\n    if (global.offline.active && !ignoreOffline) {\n        if (!global.offline.stage[1]) { global.offline.stage[1] = changed; }\n        return;\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        for (const element of getClass(`stage${s}Only`)) { element.style.display = active === s ? '' : 'none'; }\n        for (const element of getClass(`stage${s}Include`)) { element.style.display = activeAll.includes(s) ? '' : 'none'; }\n    }\n\n    const stageWord = getId('stageWord');\n    stageWord.textContent = stageInfo.word[current];\n    stageWord.style.color = `var(--${stageInfo.textColor[current]}-text)`;\n    if (!vacuum && active >= 6) {\n        getId('reset1Button').textContent = 'No Stage resets available';\n    } else if (vacuum || active >= 4) {\n        getId('reset1Button').textContent = highest >= 6 || (highest === 5 && player.event) ? (current >= 5 ? 'Requirements are met' : \"Requires '[26] Iron' Element\") : 'Requirements are unknown';\n    }\n    if (challenge !== null) {\n        getId('currentChallenge').style.display = '';\n        const currentID = getQuery('#currentChallenge > span');\n        currentID.textContent = global.challengesInfo[challenge].name;\n        currentID.style.color = `var(--${global.challengesInfo[challenge].color}-text)`;\n    } else { getId('currentChallenge').style.display = 'none'; }\n\n    if (highest < 7) {\n        getId('stageSelect').style.display = activeAll.length > 1 ? '' : 'none';\n        getId('strangenessTabBtn').style.display = player.strange[0].total > 0 || (vacuum && current >= 5) ? '' : 'none';\n        getId('inflationTabBtn').style.display = 'none';\n        if (changed) {\n            getId('resets').style.display = '';\n            getId('researches').style.display = '';\n        }\n        const unlocked = vacuum && (current >= 2 || player.stage.resets >= 1);\n        getId('hideGlobalStats').style.display = unlocked ? '' : 'none';\n        if (!globalSave.toggles[4]) { getId('globalStats').style.display = unlocked ? '' : 'none'; }\n    }\n    if (vacuum) {\n        getId('milestonesProgressArea').style.display = challenge === 0 && player.tree[0][4] >= 1 ? '' : 'none';\n    } else {\n        const interstellar = (active >= 6 ? current : active) >= 4;\n        getId('strangePeak').style.display = interstellar ? '' : 'none';\n        getId('stageTimeBestReset').style.display = interstellar ? '' : 'none';\n        getId('strange1Effect1Allowed').style.display = interstellar ? '' : 'none';\n        getId('strange1Effect1Disabled').style.display = !interstellar ? '' : 'none';\n        if (highest < 6) {\n            for (let s = 2; s <= 4; s++) {\n                const unlocked = player.stage.resets >= s + 3;\n                getId(`strangeness${globalSave.MDSettings[0] ? 'Page' : 'Section'}${s}`).style.display = unlocked ? '' : 'none';\n                getId(`milestone1Stage${s}Div`).style.display = unlocked ? '' : 'none';\n                getId(`milestone2Stage${s}Div`).style.display = unlocked ? '' : 'none';\n            }\n        }\n    }\n\n    if (!changed) {\n        visualUpdate(ignoreOffline);\n        numbersUpdate(ignoreOffline);\n        return;\n    }\n    const researchExtraDivHTML = specialHTML.researchExtraDivHTML[active];\n    if (globalSave.SRSettings[0]) {\n        getId('extraResearches').ariaLabel = `${researchExtraDivHTML[2]} Researches (Special)`;\n        getId('SRStage').textContent = `Current active Stage is '${stageInfo.word[active]}'${active !== global.trueActive ? `, will be changed to '${stageInfo.word[global.trueActive]}' after changing tab` : ''}`;\n    }\n\n    const upgradesInfo = global.upgradesInfo[active];\n    const researchesInfo = global.researchesInfo[active];\n    const researchesExtraInfo = global.researchesExtraInfo[active];\n    const footerStatsHTML = specialHTML.footerStatsHTML[active];\n    for (let i = buildingsInfo.maxActive[active]; i < specialHTML.longestBuilding; i++) {\n        getId(`building${i}Stats`).style.display = 'none';\n        getId(`building${i}`).style.display = 'none';\n    }\n    for (let i = upgradesInfo.maxActive; i < specialHTML.longestUpgrade; i++) {\n        getId(`upgrade${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesInfo.maxActive; i < specialHTML.longestResearch; i++) {\n        getId(`research${i + 1}`).style.display = 'none';\n    }\n    for (let i = researchesExtraInfo.maxActive; i < specialHTML.longestResearchExtra; i++) {\n        getId(`researchExtra${i + 1}`).style.display = 'none';\n    }\n    for (let i = footerStatsHTML.length; i < specialHTML.longestFooterStats; i++) {\n        getId(`footerStat${i + 1}`).style.display = 'none';\n    }\n\n    const showU: number[] = []; //Upgrades\n    const showR: number[] = []; //Researches\n    const showRE: number[] = []; //ResearchesExtra\n    const showF: number[] = []; //Footer stats\n    if (active === 1) {\n        showU.push(2, 3, 4, 5);\n        showR.push(0, 1, 2, 3, 4, 5);\n        showF.push(0, 1, 2);\n        getId('specials').style.display = 'none';\n        getId('resetExtraFooter').style.display = 'none';\n        if (vacuum) {\n            showU.push(0, 1);\n            showRE.push(0, 2);\n        } else {\n            getId('upgrade1').style.display = 'none';\n            getId('upgrade2').style.display = 'none';\n            getId('extraResearches').style.display = 'none';\n        }\n    } else if (active === 2) {\n        showU.push(0);\n        showR.push(0, 1);\n        showRE.push(0, 1);\n        showF.push(0, 1);\n        getId('specials').style.display = 'none';\n        getId('resetExtraFooter').style.display = 'none';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 3) {\n        showU.push(0, 1);\n        showR.push(0, 1);\n        showRE.push(0);\n        showF.push(0);\n        global.debug.rankUpdated = null;\n        getId('specials').style.display = 'none';\n        getId('resetExtraFooter').style.display = 'none';\n        getId('reset0Main').style.display = '';\n        if (vacuum) { getId('stageInfo').style.display = ''; }\n    } else if (active === 4) {\n        showU.push(0, 1, 2);\n        showR.push(0, 1, 2);\n        showRE.push(0);\n        showF.push(0, 1);\n        getId('stageInfo').style.display = '';\n        getId('extraResearches').style.display = '';\n        getId('resetExtraFooter').textContent = 'Galaxy';\n    } else if (active === 5) {\n        showRE.push(0);\n        showF.push(0, 1, 2);\n        getId('stageInfo').style.display = '';\n        if (vacuum) {\n            getId('building2').style.display = '';\n            showU.push(0, 1);\n            showR.push(0, 1);\n            getId('extraResearches').style.display = '';\n            getId('special3').style.display = 'none';\n        } else {\n            getId('reset0Button').textContent = `Requires ${calculateEffects.mergeRequirement()} Galaxies`;\n            getId('specials').style.display = 'none';\n        }\n        setRemnants();\n        getId('resetExtraFooter').textContent = 'Collapse';\n    } else if (active === 6) {\n        showF.push(0);\n        getId('stageInfo').style.display = '';\n        getId('autoWaitMain').style.display = '';\n        getId('specials').style.display = 'none';\n        if (vacuum) {\n            showU.push(0, 1);\n            showR.push(0);\n            showRE.push(0, 1, 2, 3);\n        } else {\n            getId('reset0Main').style.display = 'none';\n            getId('extraResearches').style.display = 'none';\n        }\n        getId('resetExtraFooter').textContent = 'Merge';\n    }\n    getId('buildings').style.display = '';\n    getId('building1').style.display = '';\n    getId('upgrades').style.display = '';\n    getId('stageResearches').style.display = '';\n    (getId('autoWaitInput') as HTMLInputElement).value = format(player.toggles.shop.wait[active], { type: 'input' });\n    resetMinSizes(false);\n\n    const buildingHTML = specialHTML.buildingHTML[active];\n    const buildingName = buildingsInfo.name[active];\n    const buildingType = buildingsInfo.type[active];\n    const buildingHoverText = buildingsInfo.hoverText[active];\n    for (let i = 1; i < buildingsInfo.maxActive[active]; i++) {\n        (getQuery(`#building${i} > img`) as HTMLImageElement).src = `Used_art/${buildingHTML[i - 1]}`;\n        getQuery(`#building${i}Stats > h4`).textContent = buildingName[i];\n        getId(`building${i}Name`).textContent = buildingName[i];\n        getQuery(`#building${i}ProdDiv > span`).textContent = buildingType[i - 1];\n        getId(`building${i}ProdDiv`).dataset.title = buildingHoverText[i - 1];\n        toggleSwap(i, 'buildings');\n    }\n    getQuery('#building0Stats > h4').textContent = buildingName[0];\n    toggleSwap(0, 'buildings');\n\n    const upgradeHTML = specialHTML.upgradeHTML[active];\n    for (let i = 0; i < upgradesInfo.maxActive; i++) {\n        const image = getId(`upgrade${i + 1}`) as HTMLInputElement;\n        if (showU.includes(i)) { image.style.display = ''; }\n        image.src = `Used_art/${upgradeHTML[i]}`;\n        image.alt = upgradesInfo.name[i];\n    }\n\n    const researchHTML = specialHTML.researchHTML[active];\n    for (let i = 0; i < researchesInfo.maxActive; i++) {\n        const main = getId(`research${i + 1}`);\n        if (showR.includes(i)) { main.style.display = ''; }\n        main.className = researchHTML[i][1];\n        const image = getQuery(`#research${i + 1} > input`) as HTMLInputElement;\n        image.src = `Used_art/${researchHTML[i][0]}`;\n        image.alt = researchesInfo.name[i];\n    }\n\n    const researchExtraHTML = specialHTML.researchExtraHTML[active];\n    for (let i = 0; i < researchesExtraInfo.maxActive; i++) {\n        const main = getId(`researchExtra${i + 1}`);\n        if (showRE.includes(i)) { main.style.display = ''; }\n        main.className = researchExtraHTML[i][1];\n        const image = getQuery(`#researchExtra${i + 1} > input`) as HTMLInputElement;\n        image.src = `Used_art/${researchExtraHTML[i][0]}`;\n        image.alt = researchesExtraInfo.name[i];\n    }\n    getQuery('#extraResearches > div').className = `researchesDiv ${researchExtraDivHTML[1]}`;\n    const extraImgId = getQuery('#extraResearches > img') as HTMLImageElement;\n    extraImgId.src = `Used_art/${researchExtraDivHTML[0]}`;\n    extraImgId.dataset.title = `${researchExtraDivHTML[2]} Researches (Special)`;\n\n    for (let i = 0; i < footerStatsHTML.length; i++) {\n        if (showF.includes(i)) { getId(`footerStat${i + 1}`).style.display = ''; }\n        (getQuery(`#footerStat${i + 1} > img`) as HTMLImageElement).src = `Used_art/${footerStatsHTML[i][0]}`;\n        getQuery(`#footerStat${i + 1} > p`).className = footerStatsHTML[i][1];\n        getQuery(`#footerStat${i + 1} span`).textContent = footerStatsHTML[i][2];\n    }\n    getId('reset0Footer').textContent = specialHTML.resetHTML[active];\n\n    const bodyStyle = document.documentElement.style;\n    bodyStyle.setProperty('--stage-text', `var(--${stageInfo.textColor[active]}-text)`);\n    bodyStyle.setProperty('--stage-button-border', stageInfo.buttonBorder[active]);\n    bodyStyle.setProperty('--stage-image-borderColor', stageInfo.imageBorderColor[active]);\n    bodyStyle.setProperty('--image-border', `url(\"Used_art/Stage${active} border.png\")`);\n\n    visualUpdate(ignoreOffline);\n    numbersUpdate(ignoreOffline);\n    if (globalSave.theme === null) { setTheme(); }\n};\n", "import { global, player } from './Player';\nimport { checkTab } from './Check';\nimport { numbersUpdate, switchTab } from './Update';\nimport { buyBuilding, buyVerse, collapseResetUser, dischargeResetUser, endResetUser, enterExitChallengeUser, mergeResetUser, nucleationResetUser, rankResetUser, stageResetUser, switchStage, toggleSupervoid, toggleSwap, vaporizationResetUser } from './Stage';\nimport { buyAll, pauseGameUser } from './Main';\nimport { Notify, globalSave, specialHTML } from './Special';\nimport type { hotkeysList, numbersList } from './Types';\n\nconst hotkeys = {} as Record<string, hotkeysList | numbersList>;\nconst basicFunctions: Record<hotkeysList, () => boolean> = {\n    makeAll: () => {\n        buyAll();\n        return false;\n    },\n    stage: () => {\n        if (global.hotkeys.repeat && (player.inflation.vacuum || player.stage.active >= 4)) { return false; }\n        void stageResetUser();\n        return true;\n    },\n    discharge: () => {\n        void dischargeResetUser();\n        return false;\n    },\n    vaporization: () => {\n        if (global.hotkeys.repeat) { return false; }\n        void vaporizationResetUser();\n        return true;\n    },\n    rank: () => {\n        void rankResetUser();\n        return false;\n    },\n    collapse: () => {\n        if (global.hotkeys.repeat) { return false; }\n        void collapseResetUser();\n        return true;\n    },\n    galaxy: () => {\n        buyBuilding(3, 5);\n        return false;\n    },\n    nucleation: () => {\n        if (global.hotkeys.repeat) { return false; }\n        void nucleationResetUser();\n        return true;\n    },\n    pause: () => {\n        if (global.hotkeys.repeat) { return false; }\n        pauseGameUser();\n        return true;\n    },\n    toggleAll: () => {\n        if (global.hotkeys.repeat) { return false; }\n        toggleSwap(0, 'buildings', true);\n        return true;\n    },\n    merge: () => {\n        if (global.hotkeys.repeat) { return false; }\n        void mergeResetUser();\n        return true;\n    },\n    universe: () => {\n        buyVerse(1);\n        return false;\n    },\n    end: () => {\n        void endResetUser();\n        return false;\n    },\n    supervoid: () => {\n        if (global.hotkeys.repeat) { return false; }\n        const old = player.challenges.super;\n        toggleSupervoid(true);\n        if (old === player.challenges.super) { return true; }\n        Notify(`Toggled into the ${player.challenges.super ? 'Supervoid' : 'Void'}`);\n        return true;\n    },\n    exitChallenge: () => {\n        if (global.hotkeys.repeat) { return false; }\n        enterExitChallengeUser(null);\n        return true;\n    },\n    tabRight: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeTab('right');\n        return true;\n    },\n    tabLeft: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeTab('left');\n        return true;\n    },\n    subtabUp: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeSubtab('up');\n        return true;\n    },\n    subtabDown: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeSubtab('down');\n        return true;\n    },\n    stageRight: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeStage('right');\n        return true;\n    },\n    stageLeft: () => {\n        if (global.hotkeys.repeat) { return false; }\n        changeStage('left');\n        return true;\n    }\n};\nconst numberFunctions: Record<numbersList, (number: number) => boolean> = {\n    makeStructure: (number) => {\n        if (number !== 0) {\n            if (player.stage.active === 6 && player.strangeness[6][3] < 1) {\n                buyVerse(number - 1);\n            } else { buyBuilding(number, player.stage.active); }\n        } else { buyAll(); }\n        return false;\n    },\n    toggleStructure: (number) => {\n        if (global.hotkeys.repeat) { return false; }\n        toggleSwap(number, 'buildings', true);\n        return true;\n    },\n    enterChallenge: (number) => {\n        if (global.hotkeys.repeat) { return false; }\n        if (number !== 0) {\n            enterExitChallengeUser(number - 1);\n        } else { enterExitChallengeUser(null); }\n        return true;\n    }\n};\n\n/** Will remove identical hotkeys from globalSave */\nexport const assignHotkeys = () => {\n    for (const key in hotkeys) { delete hotkeys[key]; } //Don't know better way for now\n    const index = globalSave.toggles[0] ? 0 : 1;\n    for (const key in globalSave.hotkeys) {\n        const hotkey = globalSave.hotkeys[key as hotkeysList][index];\n        if (hotkey === 'None') { continue; }\n        if (hotkeys[hotkey] !== undefined) {\n            globalSave.hotkeys[key as hotkeysList] = ['None', 'None'];\n        } else { hotkeys[hotkey] = key as hotkeysList; }\n    }\n    for (const key in globalSave.numbers) {\n        const hotkey = globalSave.numbers[key as numbersList];\n        if (hotkey === 'None') { continue; }\n        if (hotkeys[hotkey] !== undefined) {\n            globalSave.numbers[key as numbersList] = 'None';\n        } else { hotkeys[hotkey] = key as numbersList; }\n    }\n};\n\n/** Removes hotkey if exist, returns name of removed hotkey */\nexport const removeHotkey = (remove: string, number = false): string | null => {\n    const test = hotkeys[remove];\n    if (test === undefined) { return null; }\n    if (number) {\n        globalSave.numbers[test as numbersList] = 'None';\n    } else {\n        globalSave.hotkeys[test as hotkeysList] = ['None', 'None'];\n    }\n    return test;\n};\n\n/** Returns true if only Shift is holded, false if nothing is holded, null if any of Ctrl/Alt/Meta is holded */\nexport const detectShift = (check: KeyboardEvent): boolean | null => {\n    if (check.metaKey || check.ctrlKey || check.altKey) { return null; }\n    return check.shiftKey;\n};\n\nexport const detectHotkey = (check: KeyboardEvent) => {\n    const { key, code } = check;\n    const info = global.hotkeys;\n    if (check.shiftKey && !info.shift) {\n        info.shift = true;\n        numbersUpdate();\n    }\n    if (check.ctrlKey && !info.ctrl) {\n        info.ctrl = true;\n        numbersUpdate();\n    }\n    if (code === 'Tab' || code === 'Enter' || code === 'Space') {\n        if (detectShift(check) === null) { return; }\n        if (code === 'Tab') { info.tab = true; }\n        document.documentElement.classList.remove('noFocusOutline');\n        return;\n    } else {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType === 'text' || activeType === 'number') { return; }\n        document.documentElement.classList.add('noFocusOutline');\n    }\n    if (info.disabled) { return; }\n\n    if (code === 'Escape') {\n        if (detectShift(check) !== false || specialHTML.alert[0] !== null || specialHTML.bigWindow !== null) { return; }\n        const notification = specialHTML.notifications[0];\n        if (notification !== undefined) { notification[1](true); }\n        check.preventDefault();\n        return;\n    } else if (check.metaKey) { return; }\n\n    let name = check.ctrlKey ? 'Ctrl ' : '';\n    if (check.shiftKey) { name += 'Shift '; }\n    if (check.altKey) { name += 'Alt '; }\n    const numberKey = Number(code.replace('Digit', '').replace('Numpad', ''));\n    if (!isNaN(numberKey) && code !== '') {\n        name += code.includes('Numpad') ? 'Numpad' : 'Numbers';\n        const functionTest = numberFunctions[hotkeys[name] as numbersList];\n        if (functionTest !== undefined) {\n            if (functionTest(numberKey)) { info.repeat = true; }\n            check.preventDefault();\n        }\n    } else {\n        name += globalSave.toggles[0] ?\n            (key.length === 1 ? key.toUpperCase() : key.replaceAll(/([A-Z]+)/g, ' $1').trimStart()) :\n            (key.length === 1 ? code.replace('Key', '') : code.replaceAll(/([A-Z]+)/g, ' $1').trimStart());\n        const functionTest = basicFunctions[hotkeys[name] as hotkeysList];\n        if (functionTest !== undefined) {\n            if (functionTest()) { info.repeat = true; }\n            check.preventDefault();\n        }\n    }\n};\n\nconst changeTab = (direction: 'left' | 'right') => {\n    const tabs = global.tabs.list;\n    let index = tabs.indexOf(global.tabs.current);\n\n    if (direction === 'left') {\n        do {\n            if (index <= 0) {\n                index = tabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tabs[index]));\n    } else {\n        do {\n            if (index >= tabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tabs[index]));\n    }\n    switchTab(tabs[index]);\n};\n\n/** Through a hotkey */\nexport const changeSubtab = (direction: 'down' | 'up') => {\n    const tab = global.tabs.current;\n    const subtabs = global.tabs[tab].list;\n    if (subtabs.length < 2) { return; } //Required\n    let index = subtabs.indexOf(global.tabs[tab].current);\n\n    if (direction === 'down') {\n        do {\n            if (index <= 0) {\n                index = subtabs.length - 1;\n            } else { index--; }\n        } while (!checkTab(tab, subtabs[index]));\n    } else {\n        do {\n            if (index >= subtabs.length - 1) {\n                index = 0;\n            } else { index++; }\n        } while (!checkTab(tab, subtabs[index]));\n    }\n    switchTab(tab, subtabs[index]);\n};\n\nconst changeStage = (direction: 'left' | 'right') => {\n    const activeAll = global.stageInfo.activeAll;\n    if (activeAll.length === 1) { return; }\n    let index = activeAll.indexOf(player.stage.active);\n\n    if (direction === 'left') {\n        if (index <= 0) {\n            index = activeAll.length - 1;\n        } else { index--; }\n    } else {\n        if (index >= activeAll.length - 1) {\n            index = 0;\n        } else { index++; }\n    }\n    switchStage(activeAll[index]);\n};\n\n/* preventDefault should not be used here */\nexport const handleTouchHotkeys = (event: TouchEvent) => {\n    const horizontal = event.changedTouches[0].clientX - specialHTML.mobileDevice.start[0];\n    const vertical = event.changedTouches[0].clientY - specialHTML.mobileDevice.start[1];\n\n    const horizontalAbs = Math.abs(horizontal);\n    if (horizontalAbs < 100) { return; }\n    if (Math.abs(vertical) >= 100) {\n        changeSubtab(vertical > 0 ? 'up' : 'down');\n    } else if (horizontalAbs >= 250) {\n        changeStage(horizontal > 0 ? 'left' : 'right');\n    } else {\n        changeTab(horizontal > 0 ? 'left' : 'right');\n    }\n};\n", "import { assignHotkeys, detectShift, removeHotkey } from './Hotkeys';\nimport { getId, getQuery, globalSaveStart, pauseGame } from './Main';\nimport { deepClone, global, player } from './Player';\nimport { assignResetInformation } from './Stage';\nimport type { globalSaveType, hotkeysList, numbersList } from './Types';\nimport { format, stageUpdate, switchTab, visualTrueStageUnlocks, visualUpdate } from './Update';\n\nexport const globalSave: globalSaveType = {\n    intervals: {\n        offline: 20,\n        numbers: 80,\n        visual: 800,\n        autoSave: 20000\n    },\n    hotkeys: {\n        stage: ['S', 'S'],\n        discharge: ['D', 'D'],\n        vaporization: ['V', 'V'],\n        rank: ['R', 'R'],\n        collapse: ['C', 'C'],\n        galaxy: ['G', 'G'],\n        nucleation: ['N', 'N'],\n        pause: ['P', 'P'],\n        makeAll: ['M', 'M'],\n        toggleAll: ['Shift A', 'Shift A'],\n        merge: ['Shift M', 'Shift M'],\n        universe: ['Shift U', 'Shift U'],\n        end: ['Shift B', 'Shift B'],\n        supervoid: ['Shift S', 'Shift S'],\n        exitChallenge: ['Shift E', 'Shift E'],\n        tabRight: ['Arrow Right', 'Arrow Right'],\n        tabLeft: ['Arrow Left', 'Arrow Left'],\n        subtabUp: ['Arrow Up', 'Arrow Up'],\n        subtabDown: ['Arrow Down', 'Arrow Down'],\n        stageRight: ['Shift Arrow Right', 'Shift Arrow Right'],\n        stageLeft: ['Shift Arrow Left', 'Shift Arrow Left']\n    },\n    numbers: {\n        makeStructure: 'Numbers',\n        toggleStructure: 'Numpad',\n        enterChallenge: 'Shift Numbers'\n    },\n    toggles: [false, false, false, false, false],\n    format: ['.', ''],\n    theme: null,\n    fontSize: 16,\n    MDSettings: [false, false, false],\n    SRSettings: [false, false, false],\n    developerMode: false\n};\n\nexport const saveGlobalSettings = (noSaving = false): string => {\n    const hotkeysClone = deepClone(globalSave.hotkeys);\n    const encoder = new TextEncoder();\n    for (const key in hotkeysClone) {\n        const array = hotkeysClone[key as hotkeysList];\n        for (let i = 0; i < array.length; i++) {\n            array[i] = String.fromCharCode(...encoder.encode(array[i]));\n        }\n    }\n    const clone = { ...globalSave };\n    clone.hotkeys = hotkeysClone;\n    const save = btoa(JSON.stringify(clone));\n    if (!noSaving) { localStorage.setItem(specialHTML.localStorage.settings, save); }\n    return save;\n};\n\nexport const toggleSpecial = (number: number, type: 'global' | 'mobile' | 'reader', change = false, reload = false) => {\n    let toggles;\n    if (type === 'mobile') {\n        toggles = globalSave.MDSettings;\n    } else if (type === 'reader') {\n        toggles = globalSave.SRSettings;\n    } else {\n        toggles = globalSave.toggles;\n    }\n\n    if (change) {\n        if (reload) {\n            return void (async() => {\n                if (!await Confirm('Changing this setting will reload the page, confirm?\\n(Game will not autosave)')) { return; }\n                pauseGame();\n                toggles[number] = !toggles[number];\n                saveGlobalSettings();\n                window.location.reload();\n                void Alert('Awaiting game reload');\n            })();\n        } else {\n            toggles[number] = !toggles[number];\n            saveGlobalSettings();\n        }\n    }\n\n    let toggleHTML;\n    if (type === 'mobile') {\n        toggleHTML = getId(`MDToggle${number}`);\n    } else if (type === 'reader') {\n        toggleHTML = getId(`SRToggle${number}`);\n    } else {\n        toggleHTML = getId(`globalToggle${number}`);\n    }\n\n    if (!toggles[number]) {\n        toggleHTML.style.color = '';\n        toggleHTML.style.borderColor = '';\n        toggleHTML.textContent = 'OFF';\n    } else {\n        toggleHTML.style.color = 'var(--red-text)';\n        toggleHTML.style.borderColor = 'crimson';\n        toggleHTML.textContent = 'ON';\n    }\n};\n\nexport const specialHTML = { //Images here are from true vacuum for easier cache\n    /** [textContent] */\n    resetHTML: ['', 'Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge', 'Nucleation'],\n    longestBuilding: 7, //+1\n    /** [src] */\n    buildingHTML: [\n        [],\n        ['Preon.png', 'Quarks.png', 'Particle.png', 'Atom.png', 'Molecule.png'],\n        ['Drop.png', 'Puddle.png', 'Pond.png', 'Lake.png', 'Sea.png', 'Ocean.png'],\n        ['Cosmic%20dust.png', 'Planetesimal.png', 'Protoplanet.png', 'Natural%20satellite.png', 'Subsatellite.png'],\n        ['Brown%20dwarf.png', 'Orange%20dwarf.png', 'Red%20supergiant.png', 'Blue%20hypergiant.png', 'Quasi%20star.png'],\n        ['Nebula.png', 'Star%20cluster.png', 'Galaxy.png'],\n        ['Dark%20planet.png']\n    ],\n    longestUpgrade: 14,\n    /** [src] */\n    upgradeHTML: [\n        [], [\n            'UpgradeQ1.png',\n            'UpgradeQ2.png',\n            'UpgradeQ3.png',\n            'UpgradeQ4.png',\n            'UpgradeQ5.png',\n            'UpgradeQ6.png',\n            'UpgradeQ7.png',\n            'UpgradeQ8.png',\n            'UpgradeQ9.png',\n            'UpgradeQ10.png',\n            'UpgradeQ11.png'\n        ], [\n            'UpgradeW1.png',\n            'UpgradeW2.png',\n            'UpgradeW3.png',\n            'UpgradeW4.png',\n            'UpgradeW5.png',\n            'UpgradeW6.png',\n            'UpgradeW7.png',\n            'UpgradeW8.png',\n            'UpgradeW9.png'\n        ], [\n            'UpgradeA1.png',\n            'UpgradeA2.png',\n            'UpgradeA3.png',\n            'UpgradeA4.png',\n            'UpgradeA5.png',\n            'UpgradeA6.png',\n            'UpgradeA7.png',\n            'UpgradeA8.png',\n            'UpgradeA9.png',\n            'UpgradeA10.png',\n            'UpgradeA11.png',\n            'UpgradeA12.png',\n            'UpgradeA13.png',\n            'UpgradeA14.png'\n        ], [\n            'UpgradeS1.png',\n            'UpgradeS2.png',\n            'UpgradeS3.png',\n            'UpgradeS4.png',\n            'UpgradeS5.png'\n        ], [\n            'UpgradeG1.png',\n            'UpgradeG2.png',\n            'UpgradeG3.png',\n            'UpgradeG4.png',\n            'UpgradeG5.png',\n            'UpgradeG6.png',\n            'Missing.png'\n        ], [\n            'Missing.png',\n            'Missing.png'\n        ]\n    ],\n    longestResearch: 9,\n    /** [src, className] */\n    researchHTML: [\n        [], [\n            ['ResearchQ1.png', 'stage1borderImage'],\n            ['ResearchQ2.png', 'stage1borderImage'],\n            ['ResearchQ3.png', 'stage1borderImage'],\n            ['ResearchQ4.png', 'stage4borderImage'],\n            ['ResearchQ5.png', 'stage4borderImage'],\n            ['ResearchQ6.png', 'stage4borderImage']\n        ], [\n            ['ResearchW1.png', 'stage2borderImage'],\n            ['ResearchW2.png', 'stage2borderImage'],\n            ['ResearchW3.png', 'stage2borderImage'],\n            ['ResearchW4.png', 'stage2borderImage'],\n            ['ResearchW5.png', 'stage2borderImage'],\n            ['ResearchW6.png', 'stage2borderImage'],\n            ['Missing.png', 'stage2borderImage']\n        ], [\n            ['ResearchA1.png', 'stage3borderImage'],\n            ['ResearchA2.png', 'stage2borderImage'],\n            ['ResearchA3.png', 'stage3borderImage'],\n            ['ResearchA4.png', 'stage3borderImage'],\n            ['ResearchA5.png', 'stage3borderImage'],\n            ['ResearchA6.png', 'stage3borderImage'],\n            ['ResearchA7.png', 'stage1borderImage'],\n            ['ResearchA8.png', 'redBorderImage'],\n            ['ResearchA9.png', 'stage1borderImage']\n        ], [\n            ['ResearchS1.png', 'stage5borderImage'],\n            ['ResearchS2.png', 'stage5borderImage'],\n            ['ResearchS3.png', 'redBorderImage'],\n            ['ResearchS4.png', 'stage5borderImage'],\n            ['ResearchS5.png', 'stage6borderImage'],\n            ['ResearchS6.png', 'stage4borderImage']\n        ], [\n            ['ResearchG1.png', 'stage1borderImage'],\n            ['ResearchG2.png', 'stage6borderImage'],\n            ['ResearchG3.png', 'stage6borderImage'],\n            ['ResearchG4.png', 'stage4borderImage'],\n            ['Missing.png', 'redBorderImage']\n        ], [\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage']\n        ]\n    ],\n    longestResearchExtra: 6,\n    /** [src, className, hoverText] */\n    researchExtraDivHTML: [\n        [],\n        ['Energy%20Researches.png', 'stage4borderImage', 'Energy'],\n        ['Cloud%20Researches.png', 'stage2borderImage', 'Clouds'],\n        ['Rank%20Researches.png', 'stage6borderImage', 'Rank'],\n        ['Collapse%20Researches.png', 'stage6borderImage', 'Collapse'],\n        ['Galaxy%20Researches.png', 'stage3borderImage', 'Galaxy'],\n        ['Missing.png', 'stage3borderImage', 'Darkness']\n    ],\n    /** [src, className] */\n    researchExtraHTML: [\n        [], [\n            ['ResearchEnergy1.png', 'stage1borderImage'],\n            ['ResearchEnergy2.png', 'stage5borderImage'],\n            ['ResearchEnergy3.png', 'stage3borderImage'],\n            ['ResearchEnergy4.png', 'stage1borderImage'],\n            ['ResearchEnergy5.png', 'stage6borderImage'],\n            ['ResearchEnergy6.png', 'stage1borderImage']\n        ], [\n            ['ResearchClouds1.png', 'stage3borderImage'],\n            ['ResearchClouds2.png', 'stage2borderImage'],\n            ['ResearchClouds3.png', 'stage4borderImage'],\n            ['ResearchClouds4.png', 'stage2borderImage'],\n            ['ResearchClouds5.png', 'stage2borderImage']\n        ], [\n            ['ResearchRank1.png', 'stage3borderImage'],\n            ['ResearchRank2.png', 'stage3borderImage'],\n            ['ResearchRank3.png', 'stage3borderImage'],\n            ['ResearchRank4.png', 'stage2borderImage'],\n            ['ResearchRank5.png', 'stage2borderImage'],\n            ['ResearchRank6.png', 'stage6borderImage']\n        ], [\n            ['ResearchCollapse1.png', 'stage6borderImage'],\n            ['ResearchCollapse2.png', 'redBorderImage'],\n            ['ResearchCollapse3.png', 'stage1borderImage'],\n            ['ResearchCollapse4.png', 'stage6borderImage']\n        ], [\n            ['ResearchGalaxy1.png', 'stage3borderImage'],\n            ['ResearchGalaxy2.png', 'brownBorderImage'],\n            ['ResearchGalaxy3.png', 'stage3borderImage'],\n            ['ResearchGalaxy4.png', 'brownBorderImage'],\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage']\n        ], [\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage'],\n            ['Missing.png', 'redBorderImage']\n        ]\n    ],\n    longestFooterStats: 3,\n    /** [src, className, textcontent] */\n    footerStatsHTML: [\n        [], [\n            ['Energy%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Energy.png', 'stage4borderImage orangeText', 'Energy']\n        ], [\n            ['Water.png', 'stage2borderImage blueText', 'Moles'],\n            ['Drop.png', 'stage2borderImage blueText', 'Drops'],\n            ['Clouds.png', 'stage3borderImage grayText', 'Clouds']\n        ], [\n            ['Mass.png', 'stage3borderImage grayText', 'Mass']\n        ], [\n            ['Elements.png', 'stage4borderImage orangeText', 'Stardust'],\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass']\n        ], [\n            ['Elements.png', 'stage4borderImage orangeText', 'Stardust'],\n            ['Main_sequence%20mass.png', 'stage1borderImage cyanText', 'Mass'],\n            ['Stars.png', 'redBorderImage redText', 'Stars']\n        ], [\n            ['Dark%20matter.png', 'stage3borderImage grayText', 'Matter'],\n            ['Dark%20energy.png', 'stage3borderImage grayText', 'Energy'],\n            ['Dark%20fluid.png', 'stage6borderImage darkvioletText', 'Fluid']\n        ]\n    ],\n    mobileDevice: { //All browsers that I tested didn't properly detected more than 1 touch\n        /** [X, Y] */\n        start: [0, 0]\n    },\n    localStorage: {\n        /** Index for game's primary save slot */\n        main: 'testing_save',\n        /** Index for global game settings */\n        settings: 'fundamentalSettings'\n    },\n    cache: {\n        imagesDiv: document.createElement('div'), //Saved just in case\n        /** Lazy way to optimize HTML, without it can't properly detect changes */\n        innerHTML: new Map<string | HTMLElement, any>(),\n        idMap: new Map<string, HTMLElement>(),\n        classMap: new Map<string, HTMLCollectionOf<HTMLElement>>(),\n        queryMap: new Map<string, HTMLElement>()\n    },\n    errorCooldowns: [] as string[],\n    /** [text, true ? incrementFunc : closeFunc] */\n    notifications: [] as Array<[string, (instantClose?: boolean) => void]>,\n    /** [priority, closeFunc] */\n    alert: [null, null] as [number | null, (() => void) | null],\n    bigWindow: null as 'version' | 'hotkeys' | 'log' | null,\n    styleSheet: document.createElement('style') //Secondary\n};\n\nexport const preventImageUnload = () => {\n    if (global.offline.active || global.paused) {\n        global.offline.cacheUpdate = true;\n        return;\n    }\n    const { footerStatsHTML: footer, buildingHTML: build, upgradeHTML: upgrade, researchHTML: research, researchExtraHTML: extra, researchExtraDivHTML: extraDiv } = specialHTML;\n\n    let images = '';\n    for (let s = 1; s <= 6; s++) {\n        for (let i = 0; i < footer[s].length; i++) {\n            if (s === 2) {\n                if (i === 1) { continue; } //Drops\n            } else if (s === 5 && i < 2) { continue; } //Solar mass and Stardust\n            images += `<img src=\"Used_art/${footer[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < build[s].length; i++) {\n            images += `<img src=\"Used_art/${build[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < upgrade[s].length; i++) {\n            images += `<img src=\"Used_art/${upgrade[s][i]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < research[s].length; i++) {\n            images += `<img src=\"Used_art/${research[s][i][0]}\" loading=\"lazy\">`;\n        }\n        for (let i = 0; i < extra[s].length; i++) {\n            images += `<img src=\"Used_art/${extra[s][i][0]}\" loading=\"lazy\">`;\n        }\n        images += `<img src=\"Used_art/${extraDiv[s][0]}\" loading=\"lazy\">`;\n        images += `<img src=\"Used_art/Stage${s}%20border.png\" loading=\"lazy\">`;\n    }\n    for (const text of global.accretionInfo.rankImage) { //Already cached in Accretion stats, this only refreshes it\n        images += `<img src=\"Used_art/${text}\" loading=\"lazy\">`;\n    }\n    for (const text of ['Red%20giant', 'White%20dwarf', 'Neutron%20star', 'Quark%20star', 'Galaxy%20group']) { //Galaxy%20cluster\n        images += `<img src=\"Used_art/${text}.png\" loading=\"lazy\">`;\n    }\n    specialHTML.cache.imagesDiv.innerHTML = images;\n\n    setTimeout(preventImageUnload, 3600_000);\n};\n\n/** Not providing value for 'theme' will make it use one from globalSave and remove all checks */\nexport const setTheme = (theme = 'current' as 'current' | number | null) => {\n    if (theme !== 'current') {\n        if (theme !== null) {\n            if (player.stage.true < theme) { theme = null; }\n            if (theme === 6 && player.stage.true < 7) { theme = null; }\n        }\n        getId(`switchTheme${globalSave.theme ?? 0}`).style.textDecoration = '';\n\n        globalSave.theme = theme;\n        saveGlobalSettings();\n        getId('currentTheme').textContent = theme === null ? 'Default' : global.stageInfo.word[theme];\n        getId(`switchTheme${theme ?? 0}`).style.textDecoration = 'underline';\n    } else { theme = globalSave.theme; }\n\n    const upgradeTypes = ['upgrade', 'element'];\n    const properties = {\n        '--background-color': '#030012',\n        '--window-color': '#12121c',\n        '--window-border': 'cornflowerblue',\n        '--footer-color': 'darkblue',\n        '--button-color': 'mediumblue',\n        '--button-border': 'darkcyan',\n        '--button-hover': '#2626ff',\n        '--building-afford': '#a90000',\n        '--tab-active': '#8b00c5',\n        '--tab-elements': '#9f6700',\n        '--tab-strangeness': '#00b100',\n        '--tab-inflation': '#6c1ad1',\n        '--hollow-hover': '#170089',\n        '--footerButton-hover': '#181818',\n        '--input-border': '#831aa5',\n        '--input-text': '#cf71ff',\n        '--button-text': '#e3e3e3',\n        '--main-text': 'var(--cyan-text)',\n        '--white-text': 'white',\n        //'--cyan-text': '#03d3d3',\n        '--blue-text': 'dodgerblue',\n        '--orange-text': 'darkorange',\n        '--gray-text': '#8f8f8f',\n        '--orchid-text': '#e14bdb',\n        '--darkorchid-text': '#bd24ef',\n        '--darkviolet-text': '#8b3cec',\n        //'--brown-text': '#9b7346',\n        '--red-text': '#eb0000',\n        '--green-text': '#00e900',\n        '--yellow-text': '#fafa00'\n    };\n\n    /* Many of these colors will need to be changed in other places (find them with quick search, there are too many of them) */\n    switch (theme ?? player.stage.active) {\n        case 1:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--darkorchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--blue-text)';\n                getId(`${text}Cost`).style.color = 'var(--orange-text)';\n            }\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            break;\n        case 2:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--white-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#070026';\n            properties['--window-color'] = '#000052';\n            properties['--window-border'] = 'blue';\n            properties['--footer-color'] = '#0000db';\n            properties['--button-color'] = '#0000eb';\n            properties['--button-border'] = '#386cc7';\n            properties['--button-hover'] = '#2929ff';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#990000';\n            properties['--hollow-hover'] = '#2400d7';\n            properties['--input-border'] = '#4747ff';\n            properties['--input-text'] = 'dodgerblue';\n            properties['--main-text'] = 'var(--blue-text)';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#8766ff';\n            properties['--green-text'] = '#82cb3b';\n            properties['--red-text'] = '#f70000';\n            break;\n        case 3:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--blue-text)';\n                getId(`${text}Cost`).style.color = 'var(--green-text)';\n            }\n            properties['--background-color'] = '#000804';\n            properties['--window-color'] = '#2e1200';\n            properties['--window-border'] = '#31373e';\n            properties['--footer-color'] = '#221a00';\n            properties['--button-color'] = '#291344';\n            properties['--button-border'] = '#424242';\n            properties['--button-hover'] = '#382055';\n            properties['--building-afford'] = '#9e0000';\n            properties['--tab-active'] = '#8d4c00';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#5a2100';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#8b4a00';\n            properties['--input-text'] = '#e77e00';\n            properties['--main-text'] = 'var(--gray-text)';\n            properties['--white-text'] = '#dfdfdf';\n            properties['--orange-text'] = '#f58600';\n            properties['--green-text'] = '#00db00';\n            break;\n        case 4:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--blue-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--cyan-text)';\n            }\n            properties['--background-color'] = '#140e04';\n            properties['--window-color'] = '#4e0000';\n            properties['--window-border'] = '#894800';\n            properties['--footer-color'] = '#4e0505';\n            properties['--button-color'] = '#6a3700';\n            properties['--button-border'] = '#a35700';\n            properties['--button-hover'] = '#8a4700';\n            properties['--building-afford'] = '#007f95';\n            properties['--tab-active'] = '#008297';\n            properties['--tab-elements'] = 'var(--tab-active)';\n            properties['--tab-strangeness'] = '#00a500';\n            properties['--hollow-hover'] = '#605100';\n            properties['--footerButton-hover'] = '#212121';\n            properties['--input-border'] = '#008399';\n            properties['--input-text'] = '#05c3c3';\n            properties['--button-text'] = '#d9d900';\n            properties['--main-text'] = 'var(--orange-text)';\n            properties['--white-text'] = '#e5e500';\n            properties['--blue-text'] = '#2e96ff';\n            properties['--gray-text'] = '#8b8b8b';\n            properties['--darkorchid-text'] = '#c71bff';\n            properties['--darkviolet-text'] = '#9457ff';\n            properties['--red-text'] = 'red';\n            properties['--green-text'] = '#00e600';\n            properties['--yellow-text'] = 'var(--green-text)';\n            break;\n        case 5:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orange-text)';\n                getId(`${text}Effect`).style.color = 'var(--green-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = '#060010';\n            properties['--window-color'] = '#001d42';\n            properties['--window-border'] = '#35466e';\n            properties['--footer-color'] = '#2f005c';\n            properties['--button-color'] = '#4a008f';\n            properties['--button-border'] = '#8f004c';\n            properties['--button-hover'] = '#6800d6';\n            properties['--building-afford'] = '#8603ff';\n            properties['--tab-active'] = '#8500ff';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#3b0080';\n            properties['--footerButton-hover'] = '#1a1a1a';\n            properties['--input-border'] = '#3656a1';\n            properties['--input-text'] = '#6a88cd';\n            properties['--button-text'] = '#fc9cfc';\n            properties['--main-text'] = 'var(--darkorchid-text)';\n            properties['--white-text'] = '#ff79ff';\n            properties['--orchid-text'] = '#ff00f4';\n            properties['--darkorchid-text'] = '#c000ff';\n            properties['--darkviolet-text'] = '#8861ff';\n            properties['--yellow-text'] = 'var(--darkviolet-text)';\n            break;\n        case 6:\n            for (const text of upgradeTypes) {\n                getId(`${text}Text`).style.color = 'var(--orchid-text)';\n                getId(`${text}Effect`).style.color = 'var(--orange-text)';\n                getId(`${text}Cost`).style.color = 'var(--red-text)';\n            }\n            properties['--background-color'] = 'black';\n            properties['--window-color'] = '#01003c';\n            properties['--window-border'] = '#7100ff';\n            properties['--footer-color'] = '#00007a';\n            properties['--button-color'] = '#2b0095';\n            properties['--button-border'] = '#6c1ad1';\n            properties['--button-hover'] = '#3d00d6';\n            properties['--building-afford'] = '#b30000';\n            properties['--tab-active'] = '#8d0000';\n            properties['--tab-inflation'] = 'var(--tab-active)';\n            properties['--hollow-hover'] = '#490070';\n            properties['--input-border'] = '#a50000';\n            properties['--input-text'] = 'red';\n            properties['--button-text'] = '#bfbdff';\n            properties['--main-text'] = 'var(--darkviolet-text)';\n            properties['--white-text'] = '#aba8ff';\n            properties['--gray-text'] = '#9b9b9b';\n            properties['--darkviolet-text'] = '#8157ff';\n            properties['--red-text'] = 'red';\n            properties['--yellow-text'] = 'var(--green-text)';\n    }\n\n    const bodyStyle = document.documentElement.style;\n    bodyStyle.setProperty('--transition-all', '500ms');\n    bodyStyle.setProperty('--transition-buttons', '500ms');\n    for (const property in properties) { bodyStyle.setProperty(property, properties[property as '--main-text']); }\n\n    setTimeout(() => {\n        bodyStyle.setProperty('--transition-all', '0ms');\n        bodyStyle.setProperty('--transition-buttons', '100ms');\n    }, 500);\n};\n\nexport const Alert = async(text: string, priority = 0): Promise<void> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve();\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.documentElement;\n        const blocker = getId('alertMain');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        const key = async(event: KeyboardEvent) => {\n            const shift = detectShift(event);\n            if (shift === null) { return; }\n            const code = event.code;\n            if (code === 'Escape' || code === 'Enter' || code === 'Space') {\n                if (shift) { return; }\n                close();\n            } else if (code === 'Tab') {\n                confirm.focus();\n            } else { return; }\n            event.preventDefault();\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve();\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', close);\n    });\n};\n\nexport const Confirm = async(text: string, priority = 0): Promise<boolean> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(false);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.documentElement;\n        const blocker = getId('alertMain');\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        body.classList.remove('noTextSelection');\n        const oldFocus = document.activeElement as HTMLElement | null;\n        confirm.focus();\n\n        let result = false;\n        const yes = () => {\n            result = true;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            const shift = detectShift(event);\n            if (shift === null) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (shift) { return; }\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                if (shift || document.activeElement === cancel) { return; }\n                yes();\n            } else if (code === 'Tab') {\n                (document.activeElement === cancel ? confirm : cancel).focus();\n            } else { return; }\n            event.preventDefault();\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\nexport const Prompt = async(text: string, placeholder = '', priority = 0): Promise<string | null> => {\n    return await new Promise((resolve) => {\n        if (specialHTML.alert[0] !== null) {\n            if (specialHTML.alert[0] < priority) {\n                (specialHTML.alert[1] as () => undefined)();\n                Notify(`Alert has been replaced with higher priority one\\nOld text: ${getId('alertText').textContent}`);\n            } else {\n                resolve(null);\n                Notify(`Another Alert is already active\\nMissed text: ${text}`);\n                return;\n            }\n        }\n\n        getId('alertText').textContent = text;\n        const body = document.documentElement;\n        const blocker = getId('alertMain');\n        const input = getId('alertInput') as HTMLInputElement;\n        const cancel = getId('alertCancel');\n        const confirm = getId('alertConfirm');\n        blocker.style.display = '';\n        cancel.style.display = '';\n        input.style.display = '';\n        body.classList.remove('noTextSelection');\n        input.placeholder = placeholder;\n        input.value = '';\n        const oldFocus = document.activeElement as HTMLElement | null;\n        input.focus();\n\n        let result: null | string = null;\n        const yes = () => {\n            result = input.value === '' ? input.placeholder : input.value;\n            close();\n        };\n        const key = (event: KeyboardEvent) => {\n            const shift = detectShift(event);\n            if (shift === null) { return; }\n            const code = event.code;\n            if (code === 'Escape') {\n                if (shift) { return; }\n                close();\n            } else if (code === 'Enter' || code === 'Space') {\n                const active = document.activeElement;\n                if (shift || (code === 'Space' && active === input) || active === cancel) { return; }\n                yes();\n            } else if (code === 'Tab') {\n                if (shift && document.activeElement === input) {\n                    cancel.focus();\n                } else if (!shift && document.activeElement === cancel) {\n                    input.focus();\n                } else { return; }\n            } else { return; }\n            event.preventDefault();\n        };\n        const close = () => {\n            if (!globalSave.toggles[2]) { body.classList.add('noTextSelection'); }\n            blocker.style.display = 'none';\n            cancel.style.display = 'none';\n            input.style.display = 'none';\n            body.removeEventListener('keydown', key);\n            confirm.removeEventListener('click', yes);\n            cancel.removeEventListener('click', close);\n            specialHTML.alert = [null, null];\n            oldFocus?.focus();\n            resolve(result);\n        };\n        specialHTML.alert = [priority, close];\n        body.addEventListener('keydown', key);\n        confirm.addEventListener('click', yes);\n        cancel.addEventListener('click', close);\n    });\n};\n\n/** Start will make it behave as if X duplicates have been detected */\nexport const Notify = (text: string) => {\n    const { notifications } = specialHTML;\n\n    let index;\n    for (let i = 0; i < notifications.length; i++) {\n        if (notifications[i][0] === text) {\n            index = i;\n            break;\n        }\n    }\n\n    if (index === undefined) {\n        let count = 1;\n        let timeout: number;\n\n        const html = document.createElement('p');\n        html.textContent = `${text}${count > 1 ? ` | x${count}` : ''}`;\n        html.style.animation = 'hideX 800ms ease-in-out reverse';\n        html.style.pointerEvents = 'none';\n        if (globalSave.SRSettings[0]) { html.role = 'alert'; }\n        getId('notifications').append(html);\n\n        const pointer = notifications[notifications.push([text, (instantClose = false) => {\n            if (instantClose) {\n                if (html.style.animation === '') { remove(); }\n                return;\n            }\n            html.textContent = `${text} | x${++count}`;\n            if (timeout === undefined) { return; }\n            clearTimeout(timeout);\n            timeout = setTimeout(remove, 7200);\n        }]) - 1];\n        const remove = () => {\n            const index = notifications.indexOf(pointer);\n            if (index !== -1) { notifications.splice(index, 1); }\n            html.removeEventListener('click', remove);\n            html.style.animation = 'hideX 800ms ease-in-out forwards';\n            html.style.pointerEvents = 'none';\n            setTimeout(() => html.remove(), 800);\n            clearTimeout(timeout);\n        };\n        setTimeout(() => {\n            html.style.animation = '';\n            html.style.pointerEvents = '';\n            timeout = setTimeout(remove, 7200);\n            html.addEventListener('click', remove);\n        }, 800);\n    } else { notifications[index][1](); }\n};\n\n/** Notify about error in the code with a cooldown of 20 seconds */\nexport const errorNotify = (text: string) => {\n    const { errorCooldowns } = specialHTML;\n    if (errorCooldowns.includes(text)) { return; }\n\n    Notify(text);\n    errorCooldowns.push(text);\n    setTimeout(() => {\n        const index = errorCooldowns.indexOf(text);\n        if (index !== -1) { errorCooldowns.splice(index, 1); }\n    }, 2e4);\n};\n\nexport const resetMinSizes = (full = true) => {\n    for (let i = 1; i <= 3; i++) {\n        const element = getQuery(`#special${i} > p`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n    for (let i = 0; i < global.researchesInfo[player.stage.active].maxActive; i++) {\n        const element = getQuery(`#research${i + 1} span`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n    for (let i = 0; i < global.researchesExtraInfo[player.stage.active].maxActive; i++) {\n        const element = getQuery(`#researchExtra${i + 1} span`);\n        specialHTML.cache.innerHTML.set(element, '');\n        element.style.minWidth = '';\n    }\n\n    if (!full) { return; }\n    const mile = getId('milestonesMultiline').parentElement as HTMLElement;\n    specialHTML.cache.innerHTML.set(mile, '');\n    mile.style.minHeight = '';\n};\n\nexport const changeFontSize = (initial = false) => {\n    const input = getId('customFontSize') as HTMLInputElement;\n    const size = Math.min(Math.max(initial ? globalSave.fontSize : (input.value === '' ? 16 : Math.floor(Number(input.value) * 100) / 100), 12), 24);\n    if (!initial) {\n        globalSave.fontSize = size;\n        saveGlobalSettings();\n        resetMinSizes();\n    }\n\n    document.documentElement.style.fontSize = size === 16 ? '' : `${size}px`;\n    input.value = `${size}`;\n    (getId('phoneStyle') as HTMLLinkElement).media = `screen and (max-width: ${893 * size / 16 + 32}px)`;\n    (getId('miniPhoneStyle') as HTMLLinkElement).media = `screen and (max-width: ${362 * size / 16 + 32}px)`;\n};\n\nexport const changeFormat = (point: boolean) => {\n    const htmlInput = (point ? getId('decimalPoint') : getId('thousandSeparator')) as HTMLInputElement;\n    let value = htmlInput.value.replace(' ', '\u00A0'); //No break space\n    const allowed = ['.', '\u00B7', ',', '\u00A0', '_', \"'\", '\"', '`', '|'].includes(value);\n    if (!allowed || globalSave.format[point ? 1 : 0] === value) {\n        if (point && globalSave.format[1] === '.') {\n            (getId('thousandSeparator') as HTMLInputElement).value = '';\n            globalSave.format[1] = '';\n        }\n        value = point ? '.' : '';\n        htmlInput.value = value;\n    }\n    globalSave.format[point ? 0 : 1] = value;\n    saveGlobalSettings();\n};\n\nexport const MDStrangenessPage = (stageIndex: number) => {\n    getId(`strangenessSection${global.debug.MDStrangePage}`).style.display = 'none';\n    getId(`strangenessSection${stageIndex}`).style.display = '';\n    global.debug.MDStrangePage = stageIndex;\n};\n\nexport const replayEvent = async() => {\n    let last;\n    if (player.stage.true >= 8) {\n        last = player.event ? 13 : 12;\n    } else if (player.stage.true >= 7) {\n        last = player.verses[0].true >= 6 ? 11 : player.event ? 10 : 9;\n    } else if (player.stage.true === 6) {\n        last = player.event ? 8 : player.stage.resets >= 1 ? 7 : 6;\n    } else {\n        last = player.stage.true - (player.event ? 0 : 1);\n        if (last < 1) { return void Alert('There are no unlocked events'); }\n    }\n\n    let text = 'Which event do you want to see again?\\nEvent 1: Stage reset';\n    if (last >= 2) { text += '\\nEvent 2: Clouds softcap'; }\n    if (last >= 3) { text += '\\nEvent 3: New Rank'; }\n    if (last >= 4) { text += '\\nEvent 4: New Elements'; }\n    if (last >= 5) { text += '\\nEvent 5: Intergalactic'; }\n    if (last >= 6) { text += '\\nEvent 6: True Vacuum'; }\n    if (last >= 7) { text += '\\nEvent 7: Void unlocked'; }\n    if (last >= 8) { text += '\\nEvent 8: First Merge'; }\n    if (last >= 9) { text += '\\nEvent 9: Inflation'; }\n    if (last >= 10) { text += '\\nEvent 10: Supervoid'; }\n    if (last >= 11) { text += '\\nEvent 11: Stability'; }\n    if (last >= 12) { text += '\\nEvent 12: Big rip'; }\n    if (last >= 13) { text += '\\nEvent 13: Void Universes'; }\n\n    const event = Number(await Prompt(text, `${last}`));\n    if (event <= 0 || !isFinite(event)) { return; }\n    if (event > last) { return void Alert('That event is not unlocked'); }\n    playEvent(event);\n};\n\n/** Sets player.event to true if replay is false */\nexport const playEvent = (event: number, replay = true) => {\n    if (global.offline.active || specialHTML.alert[0] !== null) { return; }\n    if (!replay) { player.event = true; }\n\n    let text = 'No such event';\n    if (event === 1) {\n        text = 'A new reset tier has been unlocked. It will allow the creation of higher tier Structures, but for the price of everything else';\n    } else if (event === 2) {\n        text = `Cloud density is too high... Any new Clouds past ${format(1e4)} will be weaker due to the softcap`;\n    } else if (event === 3) {\n        if (!replay) {\n            assignResetInformation.maxRank();\n            global.debug.rankUpdated = null;\n        }\n        text = 'Cannot gain any more Mass with the current Rank. A new one has been unlocked, but reaching it will softcap the Mass production';\n    } else if (event === 4) {\n        text = 'That last explosion not only created the first Neutron stars, but also unlocked new Elements through Supernova nucleosynthesis';\n    } else if (event === 5) {\n        if (!replay) { stageUpdate(false); }\n        text = \"There are no Structures in Intergalactic yet, but knowledge for their creation can be found within the previous Stages. Stage resets and exports will now award Strange quarks, '[26] Iron' Element will use new effect to improve Stage reset reward.\\n(Stars in Intergalactic are just Stars from Interstellar)\";\n    } else if (event === 6) {\n        text = 'As Galaxies began to Merge, their combined Gravity pushed Vacuum out of its local minimum into a more stable global minimum. New forces and Structures are expected within this new and true Vacuum state';\n    } else if (event === 7) {\n        text = \"With Vacuum decaying, the remaining matter had rearranged itself, which had lead to the formation of the 'Void'. Check it out in the 'Advanced' subtab\";\n    } else if (event === 8) {\n        if (!replay) { stageUpdate(false); }\n        text = \"As Galaxies began to Merge, their combined Gravity started forming an even bigger Structure - the 'Universe'. Will need to maximize Galaxies before every Merge to get enough Score to create it.\\n(Merge reset can only be done a limited amount of times per Stage reset)\";\n    } else if (event === 9) {\n        text = \"Now that the first Universe is finished, it's time to Inflate a new one and so to unlock the Inflation tab, new Upgrades and more Void rewards to complete\\n(Also improve 'Nucleosynthesis' effect to unlock more Elements based on self-made Universes)\";\n    } else if (event === 10) {\n        if (!replay) {\n            visualTrueStageUnlocks();\n            switchTab();\n        }\n        text = \"Now that there was even more matter to rearrange \u2012 the 'Supervoid' was formed. Check it out by clicking on the Void name in the 'Advanced' subtab.\\n(Also unlocked 2 new Inflations, Supervoid unlocks are kept through Universe reset)\";\n    } else if (event === 11) {\n        text = \"After so many Universe resets, false Vacuum had became at the same time more and less stable, which had unlocked a new Challenge \u2012 'Vacuum stability'\";\n    } else if (event === 12) {\n        text = \"Unlocked ability to End everything:\\nBy converting Dark energy into the Phantom energy, you can now trigger the scenario known as 'Big Rip', meaning that everything up to this point is going to be converted into Cosmons.\";\n    } else if (event === 13) {\n        text = 'Void Universes are weaker version of self-made Universes. They do not count as self-made, but still award Inflatons. They can only be created under the Void time limit, creating them forces Void (Vacuum) reset.';\n    }\n    if (!replay) { text += \"\\n\\n(Can be viewed again with 'Events' button in Settings tab)\"; }\n    return void Alert(text);\n};\n\nconst buildBigWindow = (subWindow: string): null | HTMLElement => {\n    if (getId('closeBigWindow', true) === null) {\n        getId('bigWindow').innerHTML = '<div role=\"dialog\" aria-modal=\"false\"><button type=\"button\" id=\"closeBigWindow\">Close</button></div>';\n        specialHTML.styleSheet.textContent += `#bigWindow > div { display: flex; flex-direction: column; align-items: center; width: clamp(20vw, 38em, 80vw); height: clamp(18vh, 36em, 90vh); background-color: var(--window-color); border: 3px solid var(--window-border); border-radius: 12px; padding: 1em 1em 0.8em; row-gap: 1em; }\n            #bigWindow > div > button { flex-shrink: 0; border-radius: 4px; width: 6em; font-size: 0.92em; }\n            #bigWindow > div > div { width: 100%; height: 100%; overflow-y: auto; overscroll-behavior-y: none; } `;\n    }\n\n    if (getId(subWindow, true) !== null) { return null; }\n    const mainHTML = document.createElement('div');\n    getQuery('#bigWindow > div').prepend(mainHTML);\n    mainHTML.id = subWindow;\n    mainHTML.role = 'dialog';\n    return mainHTML;\n};\nconst addCloseEvents = (sectionHTML: HTMLElement, firstTargetHTML = null as HTMLElement | null) => {\n    const body = document.documentElement;\n    const closeButton = getId('closeBigWindow');\n    const windowHMTL = getId('bigWindow');\n    if (firstTargetHTML === null) { firstTargetHTML = closeButton; }\n    const key = (event: KeyboardEvent) => {\n        if (specialHTML.alert[0] !== null || detectShift(event) !== false) { return; }\n        const code = event.code;\n        if (firstTargetHTML === closeButton ? (code === 'Escape' || code === 'Enter' || code === 'Space') :\n            ((!global.hotkeys.disabled && code === 'Escape') || ((code === 'Enter' || code === 'Space') && document.activeElement === closeButton))) {\n            event.preventDefault();\n            close();\n        }\n    };\n    const close = () => {\n        specialHTML.bigWindow = null;\n        windowHMTL.style.display = 'none';\n        sectionHTML.style.display = 'none';\n        body.removeEventListener('keydown', key);\n        closeButton.removeEventListener('click', close);\n    };\n    body.addEventListener('keydown', key);\n    closeButton.addEventListener('click', close);\n    sectionHTML.style.display = '';\n    windowHMTL.style.display = '';\n    firstTargetHTML.focus();\n};\n\nexport const openVersionInfo = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('versionHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h6>v0.2.6</h6><p>- New content (Big Rip)\\n- Mobile shorcuts are now available outside of related support\\n- Number hotkeys can now be changed\\n- Improved hover text\\n<a href=\"https://docs.google.com/document/d/1IvO79XV49t_3zm6s4YE-ItU-TahYDbZIWhVAPzqjBUM/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Full changelog</a></p>\n        <h6>v0.2.5</h6><p>- Abyss rework\\n- New (second) Challenge\\n- Global footer stats\\n- Small visual improvements\\n- Improved swiping hotkeys for Phones</p>\n        <h6>v0.2.4</h6><p>- Offline ticks are now as effective as Online\\n- Inflation loadouts\\n\\n- Added the log\\n- Minor Strangeness rebalance</p>\n        <h6>v0.2.3</h6><p>- Supervoid rework\\n- Abyss small rebalance</p>\n        <h6>v0.2.2</h6><p>- New content (Supervoid)\\n- Better Offline calculation and more options related to it\\n- Entering Void now saves the game to load it after exiting</p>\n        <h6>v0.2.1</h6><p>- New content (Abyss)\\n- Full game rebalance\\n- Custom hotkeys\\n- Updated supports\\n- Many small changes and additions</p>\n        <h6>v0.2.0</h6><p>- Reworked balance for all Stages past first reset cycle\\n- Many quality of life additions\\n- Most of settings are now saved separate from save file\\n- Some more work on Mobile device support</p>\n        <h6>v0.1.9</h6><p>- More true Vacuum balance\\n- Reworked time related formats\\n- Warp and Offline time usage reworked</p>\n        <h6>v0.1.8</h6><p>- True Vacuum small balance changes\\n- Upgrades and Researches merged\\n- Copy to the clipboard, load from string save file options</p>\n        <h6>v0.1.7</h6><p>- New content (Void)\\n- Further balance changes</p>\n        <h6>v0.1.6</h6><p>- Massive rebalance and reworks for all Stages</p>\n        <h6>v0.1.5</h6><p>- True Vacuum minor balance\\n- Images no longer unload\\n- Screen reader support reworked</p>\n        <h6>v0.1.4</h6><p>- Custom scrolls\\n- Notifications</p>\n        <h6>v0.1.3</h6><p>- True Vacuum balance changes\\n- Submerged Stage minor balance\\n- Replay event button\\n\\n- History for Stage resets</p>\n        <h6>v0.1.2</h6><p>- New content (Vacuum)\\n- Offline time reworked\\n- Version window\\n- Permanently removed text movement</p>\n        <h6>v0.1.1</h6><p>- More balance changes for late game</p>\n        <h6>v0.1.0</h6><p>- New content (Intergalactic)\\n- Balance changes for late game</p>\n        <h6>v0.0.9</h6><p>- New content (Milestones)\\n- More Interstellar and late game balance</p>\n        <h6>v0.0.8</h6><p>- Minor speed up to all Stages past Microworld</p>\n        <h6>v0.0.7</h6><p>- New content (Strangeness)\\n- Microworld Stage rework\\n\\n- Stats for the Save file name</p>\n        <h6>v0.0.6</h6><p>- Added hotkeys list\\n\\n- Option to remove text movement\\n- Ability to rename the save file</p>\n        <h6>v0.0.5</h6><p>- New content (Interstellar)\\n- Basic loading screen\\n\\n- Added hotkeys</p>\n        <h6>v0.0.4</h6><p>- Speed up to all Stages\\n- Basic events\\n\\n- Added numbers format</p>\n        <h6>v0.0.3</h6><p>- New content (Accretion)\\n- Submerged Stage extended\\n- Offline time calculated better</p>\n        <h6>v0.0.2</h6><p>- Stats subtab</p>\n        <h6>v0.0.1</h6><p>- Submerged Stage rework\\n\\n- Mobile device support</p>\n        <h6>v0.0.0</h6><p>- First published version\\n\\n- Submerged Stage placeholder</p>`;\n        mainHTML.ariaLabel = 'Versions menu';\n        specialHTML.styleSheet.textContent += `#versionHTML h6 { font-size: 1.18em; }\n            #versionHTML p { line-height: 1.3em; white-space: pre-line; color: var(--white-text); margin-top: 0.2em; margin-bottom: 1.4em; }\n            #versionHTML p:last-of-type { margin-bottom: 0; } `;\n    }\n\n    specialHTML.bigWindow = 'version';\n    addCloseEvents(getId('versionHTML'));\n};\n\nexport const openHotkeys = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('hotkeysHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h3 id=\"hotkeysMessage\" class=\"bigWord\" aria-live=\"assertive\">Highlighted hotkeys can be modified</h3>\n        ${globalSave.MDSettings[0] ? `<p>Left or Right swipe \u2012 <span class=\"whiteText\">change current tab</span></p>\n        <p>Diagonal Down or Up swipe \u2012 <span class=\"whiteText\">change current subtab</span></p>\n        <p id=\"stageSwipe\">Long Left or Right swipe \u2012 <span class=\"whiteText\">change current active Stage</span></p>` : ''}\n        <label id=\"tabRightHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change tab to the next one</span></label>\n        <label id=\"tabLeftHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change tab to the previous one</span></label>\n        <label id=\"subtabUpHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change subtab to the next one</span></label>\n        <label id=\"subtabDownHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change subtab to the previous one</span></label>\n        <label id=\"stageRightHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change active Stage to the next one</span></label>\n        <label id=\"stageLeftHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">change active Stage to the previous one</span></label>\n        <label id=\"makeStructureHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">make a Structure</span></label>\n        <p id=\"makeAllHotkey\"><span></span> <span class=\"whiteText\">or</span> <label><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">make all Structures</span></label></p>\n        <label id=\"toggleStructureHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">toggle auto Structure</span></label>\n        <p id=\"toggleAllHotkey\"><span></span> <span class=\"whiteText\">or</span> <label><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">toggle all auto Structures</span></label></p>\n        <label id=\"enterChallengeHotkey\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">enter the Challenge</span></label>\n        <p id=\"exitChallengeHotkey\"><span></span> <span class=\"whiteText\">or</span> <label><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Exit out of the current Challenge</span></label></p>\n        <div>\n            <label id=\"dischargeHotkey\" class=\"orangeText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Discharge</span></label>\n            <label id=\"vaporizationHotkey\" class=\"blueText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Vaporization</span></label>\n            <label id=\"rankHotkey\" class=\"darkorchidText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Rank</span></label>\n            <label id=\"collapseHotkey\" class=\"orchidText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Collapse</span></label>\n            <label id=\"galaxyHotkey\" class=\"grayText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Galaxy</span></label>\n            <label id=\"mergeHotkey\" class=\"darkvioletText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Merge</span></label>\n            <label id=\"nucleationHotkey\" class=\"orangeText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Nucleation</span></label>\n            <label id=\"stageHotkey\" class=\"stageText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Stage</span></label>\n            <label id=\"universeHotkey\" class=\"darkvioletText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Universe</span></label>\n            <label id=\"supervoidHotkey\" class=\"darkvioletText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">Supervoid</span></label>\n            <label id=\"endHotkey\" class=\"redText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">End</span></label>\n            <label id=\"pauseHotkey\" class=\"grayText\"><button type=\"button\" class=\"selectBtn\"></button> \u2012 <span class=\"whiteText\">pause</span></label>\n        </div>\n        <p>Enter <span class=\"whiteText\">or</span> Space \u2012 <span class=\"whiteText\">click selected HTML Element or confirm Alert</span></p>\n        <p>Escape \u2012 <span class=\"whiteText\">cancel changing the hotkey, close Alert or Notification</span></p>\n        <p>Tab <span class=\"whiteText\">and</span> Shift Tab \u2012 <span class=\"whiteText\">select another HTML Element</span></p>\n        <p>Holding Enter on last selected button will repeatedly press it, also works with Mouse and Touch events on some buttons</p>\n        <p>Numlock being ON can break Numpad hotkeys</p>\n        <p>Shift clicking the hotkey will remove it</p>\n        <label id=\"hotkeysToggleLabel\" title=\"Turn ON, if using non-QWERTY layout keyboard\">Language dependant hotkeys </label>\n        <button type=\"button\" id=\"restoreHotkeys\" class=\"selectBtn\">Restore default hotkeys values</button>`; //Spacebar at the end of label is required\n        mainHTML.ariaLabel = 'Hotkeys menu';\n        const toggle = getId('globalToggle0');\n        getId('hotkeysToggleLabel').append(toggle);\n        toggle.style.display = '';\n        specialHTML.styleSheet.textContent += `#hotkeysHTML { display: flex; flex-direction: column; align-items: center; row-gap: 0.2em; }\n            #hotkeysHTML > div { display: grid; grid-template-columns: 1fr 1fr 1fr; width: 100%; gap: 0.3em; }\n            #hotkeysHTML > div label { justify-self: center; width: max-content; } `;\n\n        const changeHotkey = async(number: boolean): Promise<string | string[] | null> => {\n            return await new Promise((resolve) => {\n                getId('hotkeysMessage').textContent = 'Awaiting new value for the hotkey';\n                const body = document.documentElement;\n                let result: null | string | string[] = null;\n                const detect = async(event: KeyboardEvent) => {\n                    const { key, code } = event;\n                    if (code === 'Tab' || code === 'Enter' || code === 'Space') { return; }\n                    event.preventDefault();\n                    if (code === 'Escape') { return finish(); }\n                    if (key === 'Control' || key === 'Shift' || key === 'Alt') { return; }\n                    if (key === 'Meta' || event.metaKey) {\n                        getId('hotkeysMessage').textContent = \"Meta isn't allowed\";\n                        return;\n                    }\n                    let prefix = event.ctrlKey ? 'Ctrl ' : '';\n                    if (event.shiftKey) { prefix += 'Shift '; }\n                    if (event.altKey) { prefix += 'Alt '; }\n                    if (!isNaN(Number(code.replace('Digit', '').replace('Numpad', ''))) && code !== '') {\n                        if (!number) {\n                            getId('hotkeysMessage').textContent = \"Numbers can't used here\";\n                            return;\n                        }\n                        result = `${prefix}${code.includes('Numpad') ? 'Numpad' : 'Numbers'}`;\n                        if (result === '') { result = 'None'; }\n                    } else {\n                        if (number) {\n                            if (key !== 'NumLock') { getId('hotkeysMessage').textContent = 'Only numbers can be used here'; }\n                            return;\n                        }\n                        result = [`${prefix}${key.length === 1 ? key.toUpperCase() : key.replaceAll(/([A-Z]+)/g, ' $1').trimStart()}`,\n                            `${prefix}${key.length === 1 ? code.replace('Key', '') : code.replaceAll(/([A-Z]+)/g, ' $1').trimStart()}`];\n                        if (result[0] === '') { result[0] = 'None'; }\n                        if (result[1] === '') { result[1] = 'None'; }\n                    }\n                    finish();\n                };\n                const clickClose = () => finish(false);\n                const finish = (keyboard = true) => {\n                    body.removeEventListener('keydown', detect);\n                    body.removeEventListener('click', clickClose, { capture: true });\n                    if (keyboard) {\n                        body.addEventListener('keyup', () => { global.hotkeys.disabled = false; }, { once: true });\n                    }\n                    resolve(result);\n                };\n                global.hotkeys.disabled = true;\n                body.addEventListener('keydown', detect);\n                body.addEventListener('click', clickClose, { capture: true });\n            });\n        };\n        const index = globalSave.toggles[0] ? 0 : 1;\n        for (const key in globalSaveStart.hotkeys) {\n            const button = getQuery(`#${key}Hotkey button`);\n            button.textContent = globalSave.hotkeys[key as hotkeysList][index];\n            button.addEventListener('click', async(event) => {\n                if (event.shiftKey) {\n                    if (removeHotkey(globalSave.hotkeys[key as hotkeysList][globalSave.toggles[0] ? 0 : 1]) !== null) {\n                        button.textContent = 'None';\n                        assignHotkeys();\n                        saveGlobalSettings();\n                    }\n                    return;\n                }\n                button.style.borderBottomStyle = 'dashed';\n                const newHotkey = await changeHotkey(false) as string[];\n                if (newHotkey !== null) {\n                    const index = globalSave.toggles[0] ? 0 : 1;\n                    const removed = removeHotkey(newHotkey[index]);\n                    if (removed !== null) { getQuery(`#${removed}Hotkey button`).textContent = 'None'; }\n                    button.textContent = newHotkey[index];\n                    globalSave.hotkeys[key as hotkeysList] = newHotkey;\n                    assignHotkeys();\n                    saveGlobalSettings();\n                }\n                button.style.borderBottomStyle = '';\n                getId('hotkeysMessage').textContent = 'Highlighted hotkeys can be modified';\n            });\n        }\n        const extraHotkeyName: Record<string, string> = {\n            makeStructure: 'makeAll',\n            toggleStructure: 'toggleAll',\n            enterChallenge: 'exitChallenge'\n        };\n        for (const key in globalSaveStart.numbers) {\n            const button = getQuery(`#${key}Hotkey button`);\n            button.textContent = globalSave.numbers[key as numbersList];\n            getQuery(`#${extraHotkeyName[key]}Hotkey span`).textContent = globalSave.numbers[key as numbersList].replace('Numbers', '0').replace('Numpad', 'Num 0');\n            button.addEventListener('click', async(event) => {\n                if (event.shiftKey) {\n                    if (removeHotkey(globalSave.numbers[key as numbersList], true) !== null) {\n                        button.textContent = 'None';\n                        assignHotkeys();\n                        saveGlobalSettings();\n                    }\n                    return;\n                }\n                button.style.borderBottomStyle = 'dashed';\n                const newHotkey = await changeHotkey(true) as string;\n                if (newHotkey !== null) {\n                    const removed = removeHotkey(newHotkey, true);\n                    if (removed !== null) {\n                        getQuery(`#${removed}Hotkey button`).textContent = 'None';\n                        getQuery(`#${extraHotkeyName[removed]}Hotkey span`).textContent = 'None';\n                    }\n                    button.textContent = newHotkey;\n                    getQuery(`#${extraHotkeyName[key]}Hotkey span`).textContent = newHotkey.replace('Numbers', '0').replace('Numpad', 'Num 0');\n                    globalSave.numbers[key as numbersList] = newHotkey;\n                    assignHotkeys();\n                    saveGlobalSettings();\n                }\n                button.style.borderBottomStyle = '';\n                getId('hotkeysMessage').textContent = 'Highlighted hotkeys can be modified';\n            });\n        }\n        getId('restoreHotkeys').addEventListener('click', () => {\n            globalSave.hotkeys = deepClone(globalSaveStart.hotkeys);\n            globalSave.numbers = deepClone(globalSaveStart.numbers);\n            const index = globalSave.toggles[0] ? 0 : 1;\n            for (const key in globalSave.hotkeys) { getQuery(`#${key}Hotkey button`).textContent = globalSave.hotkeys[key as hotkeysList][index]; }\n            for (const key in globalSave.numbers) {\n                const value = globalSave.numbers[key as numbersList];\n                getQuery(`#${key}Hotkey button`).textContent = value;\n                getQuery(`#${extraHotkeyName[key]}Hotkey span`).textContent = value.replace('Numbers', '0').replace('Numpad', 'Num 0');\n            }\n            assignHotkeys();\n            saveGlobalSettings();\n        });\n    }\n\n    specialHTML.bigWindow = 'hotkeys';\n    addCloseEvents(getId('hotkeysHTML'), getQuery('#tabRightHotkey button'));\n    visualTrueStageUnlocks();\n    visualUpdate();\n};\n\nexport const openLog = () => {\n    if (specialHTML.bigWindow !== null) { return; }\n    const mainHTML = buildBigWindow('logHTML');\n    if (mainHTML !== null) {\n        mainHTML.innerHTML = `<h2 class=\"whiteText\"><span class=\"biggerWord mainText\">Log</span> | <button type=\"button\" id=\"logOrder\" class=\"selectBtn mainText\">Entries on top are newer</button></h2>\n        <ul id=\"logMain\"><li></li></ul>`; //Empty <li> is required\n        mainHTML.ariaLabel = 'Versions menu';\n        specialHTML.styleSheet.textContent += `#logHTML { display: flex; flex-direction: column; }\n            #logMain { display: flex; flex-direction: column; text-align: start; border-top: 2px solid; border-bottom: 2px solid; height: 100%; padding: 0.2em 0.4em; margin-top: 0.4em; overflow-y: scroll; overscroll-behavior-y: none; }\n            #logMain > li { list-style: inside \"\u2012 \"; white-space: pre-line; }\n            #logMain.bottom { flex-direction: column-reverse; } /* Cheap way to change the order */`;\n        getId('logOrder').addEventListener('click', () => {\n            const bottom = getId('logMain').classList.toggle('bottom');\n            getId('logOrder').textContent = `Entries on ${bottom ? 'bottom' : 'top'} are newer`;\n        });\n    }\n\n    specialHTML.bigWindow = 'log';\n    addCloseEvents(getId('logHTML'));\n    visualUpdate();\n};\n", "import { globalSave } from './Special';\n\ntype allowedTypes = string | number | bigint | [number, number] | Overlimit;\n/* This is version has all settings (and other stuff) removed (for better speed) */\n/** To test number for being Overlimit can use: typeof number === 'object'; Array.isArray(number); number instanceof Overlimit\n * @param number allowed types are string, number, bigint, Overlimit and [number, number]; If Array is used, then must not contain any mistakes (example and proper way: [11, 0] > [1.1, 1]; [1, NaN] > [NaN, NaN]; [1, 1.4] > [1, 1])\n */\nexport default class Overlimit extends Array<number> {\n    constructor(number: allowedTypes) {\n        const post = technical.convert(number);\n        super(post[0], post[1]);\n    }\n    get mantissa() { return this[0]; }\n    get exponent() { return this[1]; }\n\n    /** Can be used inside native sorting function, equal to a - b. First variable must be Overlimit, doesn't require cloning, example: [1, '2', new Overlimit(3)].sort((a, b) => Overlimit.compareFunc(new Overlimit(b), a)) */\n    static compareFunc(left: Overlimit, right: allowedTypes): 1 | 0 | -1 {\n        return left.moreThan(right) ? 1 : left.notEqual(right) ? -1 : 0;\n    }\n\n    /** Creates new Overlimit */\n    clone(): Overlimit { return new Overlimit(this); }\n    setValue(newValue: allowedTypes) { return this.privateSet(technical.convert(newValue)); }\n\n    /** Not for use, sets formatted value to Overlimit */\n    privateSet(newValue: [number, number] | Overlimit) {\n        this[0] = newValue[0];\n        this[1] = newValue[1];\n        return this;\n    }\n\n    /** Can take any amount of arquments */\n    plus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.add(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    minus(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.sub(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    multiply(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.mult(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Can take any amount of arquments */\n    divide(...numbers: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < numbers.length; i++) {\n            result = technical.div(result, technical.convert(numbers[i]));\n        }\n\n        return this.privateSet(result);\n    }\n    /** Power must be a number */\n    power(power: number) { return this.privateSet(technical.pow(this, power)); }\n    /** Root must be a number, default value is 2 */\n    root(root = 2) { return this.privateSet(technical.pow(this, 1 / root)); }\n    /** Default value is Math.E */\n    log(base?: allowedTypes) { return this.privateSet(technical.log(this, base === undefined ? [2.718281828459045, 0] : technical.convert(base))); }\n\n    abs() {\n        this[0] = Math.abs(this[0]);\n        return this;\n    }\n\n    trunc() { return this.privateSet(technical.trunc(this)); }\n    floor() { return this.privateSet(technical.floor(this)); }\n    ceil() { return this.privateSet(technical.ceil(this)); }\n    round() { return this.privateSet(technical.round(this)); }\n\n    /** Doesn't check exponent, since exponent being NaN while mantissa isn't would be a bug */\n    isNaN(): boolean { return isNaN(this[0])/* || isNaN(this[1])*/; }\n    /** Will set new value to the provided one, but only if current one is NaN */\n    replaceNaN(replaceWith: allowedTypes): Overlimit { return isNaN(this[0]) ? this.privateSet(technical.convert(replaceWith)) : this; }\n    /** Doesn't check exponent, since exponent being Infinity while mantissa isn't would be a bug */\n    isFinite(): boolean { return isFinite(this[0])/* && isFinite(this[1])*/; }\n\n    lessThan(compare: allowedTypes): boolean { return technical.less(this, technical.convert(compare)); }\n    lessOrEqual(compare: allowedTypes): boolean { return technical.lessOrEqual(this, technical.convert(compare)); }\n    moreThan(compare: allowedTypes): boolean { return technical.more(this, technical.convert(compare)); }\n    moreOrEqual(compare: allowedTypes): boolean { return technical.moreOrEqual(this, technical.convert(compare)); }\n    notEqual(compare: allowedTypes): boolean { return technical.notEqual(this, technical.convert(compare)); }\n    /** Can take any amount of arquments; Returns true if no arquments provided */\n    equal(...compare: allowedTypes[]): boolean {\n        let previous: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const next = technical.convert(compare[i]);\n            if (technical.notEqual(previous, next)) { return false; }\n            previous = next;\n        }\n\n        return true;\n    }\n\n    /** Set original number to the biggest of provided arguments */\n    max(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.privateSet([NaN, NaN]); }\n\n            if (technical.less(result, after)) { result = after; }\n        }\n\n        return result === this ? this : this.privateSet(result);\n    }\n    /** Set original number to the smallest of provided arguments */\n    min(...compare: allowedTypes[]) {\n        let result: [number, number] | Overlimit = this;\n        for (let i = 0; i < compare.length; i++) {\n            const after = technical.convert(compare[i]);\n            if (isNaN(after[0])) { return this.privateSet([NaN, NaN]); }\n\n            if (technical.more(result, after)) { result = after; }\n        }\n\n        return result === this ? this : this.privateSet(result);\n    }\n\n    /** Returns formatted string, takes object as arqument\n     * @param type \"number\" is default, \"input\" will make formatted number to be usable in Overlimit\n     * @param padding should zeros be added past point, if below max digits. 'exponent' value will behave as true, but only after number turns to power version or above\n     */\n    format(settings = {} as { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string { return technical.format(this, settings); }\n    /** Returns value as Number, doesn't change original number */\n    toNumber(): number { return Number(technical.turnString(this)); }\n    /** Same as .toNumber, but also converts Infinity (and NaN; can use replaceNaN before calling this function) to Number.MAX_VALUE */\n    toSafeNumber(): number {\n        const result = Number(technical.turnString(this));\n        if (isFinite(result)) { return result; }\n        return Number.MAX_VALUE * (result < 0 ? -1 : 1);\n    }\n    /** Returns value as String, doesn't change original number */\n    toString(): string { return technical.turnString(this); }\n    /** Returns value as Array, doesn't change original number */\n    toArray(): [number, number] { return [this[0], this[1]]; }\n    /** Automatically called with JSON.stringify. It will call toString to preserve NaN and Infinity */\n    toJSON(): string { return technical.turnString(this); }\n}\n\n/** Private Overlimit functions */\nconst technical = {\n    convert: (number: allowedTypes): [number, number] | Overlimit => {\n        if (typeof number === 'object' && number !== null) { return number; } //Readonly Array\n        if (typeof number !== 'string') { number = `${number}`; } //Using log10 could cause floating point error\n        const index = number.indexOf('e'); //Array.split is 3 times slower\n        const result: [number, number] = index === -1 ? [Number(number), 0] : [Number(number.slice(0, index)), Number(number.slice(index + 1))];\n\n        if (!isFinite(result[0]) || !isFinite(result[1])) {\n            if (result[0] === 0 || result[1] === -Infinity) { return [0, 0]; }\n            if (isNaN(result[0]) || isNaN(result[1])) { return [NaN, NaN]; }\n            return [result[0] < 0 ? -Infinity : Infinity, Infinity];\n        }\n\n        const after = Math.abs(result[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after < 1 || after >= 10) {\n            const digits = Math.floor(Math.log10(after));\n            result[0] /= 10 ** digits;\n            result[1] += digits;\n\n            if (Math.abs(result[0]) < 1) { //Important\n                result[0] *= 10;\n                result[1]--;\n            }\n        }\n\n        //Float fix always done after exponent, because (11.1 / 10 !== 1.11)\n        result[0] = Math.round(result[0] * 1e14) / 1e14;\n        if (Math.abs(result[0]) === 10) {\n            result[0] /= 10;\n            result[1]++;\n        }\n\n        return result;\n    },\n    /* Number is readonly */\n    turnString: (number: [number, number] | Overlimit): string => number[1] === 0 || !isFinite(number[0]) ? `${number[0]}` : `${number[0]}e${number[1]}`,\n    /* Right is readonly */\n    add: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return left; }\n        if (left[0] === 0) { return [right[0], right[1]]; }\n        if (!isFinite(left[0]) || !isFinite(right[0])) {\n            const check = left[0] + right[0]; //Infinity + -Infinity === NaN\n            return isNaN(check) ? [NaN, NaN] : [check, Infinity];\n        }\n\n        const difference = left[1] - right[1];\n        if (Math.abs(difference) >= 16) { return difference > 0 ? left : [right[0], right[1]]; }\n\n        if (difference === 0) {\n            left[0] += right[0];\n        } else if (difference > 0) {\n            left[0] += right[0] / 10 ** difference;\n        } else {\n            left[0] = right[0] + (left[0] * 10 ** difference);\n            left[1] = right[1];\n        }\n\n        const after = Math.abs(left[0]);\n        if (after === 0) {\n            return [0, 0];\n        } else if (after >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        } else if (after < 1) {\n            const digits = -Math.floor(Math.log10(after));\n            left[0] *= 10 ** digits;\n            left[1] -= digits;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly, its quite a lazy function... */\n    sub: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => technical.add(left, [-right[0], right[1]]),\n    /* Right is readonly */\n    mult: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[0] === 0 || right[0] === 0) { return [0, 0]; }\n\n        left[1] += right[1];\n        left[0] *= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) >= 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Right is readonly */\n    div: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (right[0] === 0) { return [NaN, NaN]; }\n        if (left[0] === 0) { return [0, 0]; }\n\n        left[1] -= right[1];\n        left[0] /= right[0];\n\n        if (!isFinite(left[1])) {\n            if (left[1] === -Infinity) { return [0, 0]; }\n            return isNaN(left[1]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        if (Math.abs(left[0]) < 1) {\n            left[0] *= 10;\n            left[1]--;\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    pow: (left: [number, number] | Overlimit, power: number): [number, number] | Overlimit => {\n        if (power === 0) { return left[0] === 0 || isNaN(left[0]) ? [NaN, NaN] : [1, 0]; }\n        if (left[0] === 0) { return power < 0 ? [NaN, NaN] : [0, 0]; }\n        if (!isFinite(power)) {\n            if ((left[1] === 0 && left[0] === 1) || left[0] < 0) { return left[0] === 1 ? [1, 0] : [NaN, NaN]; }\n            if ((power === -Infinity && left[1] >= 0) || (power === Infinity && left[1] < 0)) { return [0, 0]; }\n            return isNaN(power) || isNaN(left[0]) ? [NaN, NaN] : [Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0 ? Math.abs(power) % 2 : null;\n        if (negative !== null) { //Complex numbers are not supported\n            if (Math.floor(power) !== power) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const base10 = power * (Math.log10(left[0]) + left[1]);\n        if (!isFinite(base10)) {\n            if (base10 === -Infinity) { return [0, 0]; }\n            if (isNaN(left[0])) { return [NaN, NaN]; }\n            return [negative === 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n\n        if (negative === 1) { left[0] *= -1; }\n        return left;\n    },\n    /* Base is readonly */\n    log: (left: [number, number] | Overlimit, base: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (base[0] === 0 || (base[1] === 0 && Math.abs(base[0]) === 1)) { return [NaN, NaN]; }\n        if (left[1] === 0 && Math.abs(left[0]) === 1) { return left[0] === 1 ? [0, 0] : [NaN, NaN]; }\n        if (left[0] === 0) { return isNaN(base[0]) ? [NaN, NaN] : [Math.abs(base[0]) > 1 ? -Infinity : Infinity, Infinity]; }\n        if (!isFinite(base[0])) { return [NaN, NaN]; } //Order matters (Infinity ** 0 === 1 || Infinity ** -Infinity === 0)\n        if (!isFinite(left[0])) {\n            if (isNaN(left[0]) || left[0] === -Infinity) { return [NaN, NaN]; }\n            return [Math.abs(base[0]) < 1 ? -Infinity : Infinity, Infinity];\n        }\n\n        const negative = left[0] < 0;\n        if (negative) { //Complex numbers are not supported\n            if (base[0] > 0) { return [NaN, NaN]; }\n            left[0] *= -1;\n        }\n\n        const tooSmall = left[1] < 0; //Minor issue with negative power\n        const base10 = Math.log10(Math.abs(Math.log10(left[0]) + left[1]));\n        const target = Math.floor(base10);\n        left[0] = 10 ** (base10 - target);\n        left[1] = target;\n\n        if (tooSmall) { left[0] *= -1; } //Already can be negative\n        if (base[1] !== 1 || base[0] !== 1) {\n            left[0] /= Math.log10(Math.abs(base[0])) + base[1];\n\n            const after = Math.abs(left[0]);\n            if (after < 1 || after >= 10) {\n                const digits = Math.floor(Math.log10(after));\n                left[0] /= 10 ** digits;\n                left[1] += digits;\n            }\n        }\n\n        if (base[0] < 0 || negative) { //Special test for negative numbers\n            if (left[1] < 0) { return [NaN, NaN]; }\n            //Due to floats (1.1 * 100 !== 110), test is done in this way (also we assume that big numbers are never uneven)\n            const test = left[1] < 16 ? Math.abs(Math.round(left[0] * 1e14) / 10 ** (14 - left[1])) % 2 : 0;\n            if (base[0] < 0 && !negative) {\n                if (test !== 0) { return [NaN, NaN]; } //Result must be even\n            } else { //base < 0 && negative\n                if (test !== 1) { return [NaN, NaN]; } //Result must be uneven\n            }\n        }\n\n        left[0] = Math.round(left[0] * 1e14) / 1e14;\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n\n        return left;\n    },\n    /* Left and right are readonly */\n    less: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] < right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    lessOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] <= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] < right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return true; }\n        if (right[0] < 0 && left[0] > 0) { return false; }\n        return left[1] > right[1];\n    },\n    /* Left and right are readonly */\n    more: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] > right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    moreOrEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        if (left[0] === 0 || right[0] === 0 || left[1] === right[1]) { return left[0] >= right[0]; }\n        if (left[0] > 0 && right[0] > 0) { return left[1] > right[1]; }\n        if (left[0] < 0 && right[0] > 0) { return false; }\n        if (right[0] < 0 && left[0] > 0) { return true; }\n        return left[1] < right[1];\n    },\n    /* Left and right are readonly */\n    notEqual: (left: [number, number] | Overlimit, right: [number, number] | Overlimit): boolean => {\n        return left[1] !== right[1] || left[0] !== right[0];\n    },\n    trunc: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.trunc(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.trunc(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        return left;\n    },\n    floor: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? -1 : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.floor(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.floor(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === -10) {\n            left[0] = -1;\n            left[1]++;\n        }\n        return left;\n    },\n    ceil: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[0] < 0 ? 0 : 1, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.ceil(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.ceil(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (left[0] === 10) {\n            left[0] = 1;\n            left[1]++;\n        }\n        return left;\n    },\n    round: (left: [number, number] | Overlimit): [number, number] | Overlimit => {\n        if (left[1] < 0) {\n            return [left[1] === -1 ? Math.round(left[0] / 10) : 0, 0];\n        } else if (left[1] === 0) {\n            left[0] = Math.round(left[0]);\n        } else if (left[1] <= 14) {\n            left[0] = Math.round(left[0] * 10 ** left[1]) / 10 ** left[1];\n        }\n\n        if (Math.abs(left[0]) === 10) {\n            left[0] /= 10;\n            left[1]++;\n        }\n        return left;\n    },\n    /* Left is readonly */\n    format: (left: [number, number] | Overlimit, settings: { type?: 'number' | 'input', padding?: boolean | 'exponent' }): string => {\n        const [base, power] = left;\n        if (!isFinite(base)) { return `${base}`; }\n        const type = settings.type ?? 'number';\n        let padding = settings.padding;\n\n        if (power >= 1e4 || power <= -1e4) { //e1.23e123 (-e-1.23e123)\n            if (padding === 'exponent') { padding = true; }\n            let exponent = power;\n            let inputBase = base;\n            if (Math.abs(Math.round(inputBase)) === 10) { //Probably not required, but just in case\n                inputBase /= 10;\n                exponent++;\n                if (exponent < 0 && exponent > -1e4) { return technical.format([inputBase, exponent], settings); }\n            }\n\n            exponent = Math.floor(Math.log10(Math.abs(exponent)));\n            let digits = 2 - Math.floor(Math.log10(exponent));\n            let mantissa = Math.round(power / 10 ** (exponent - digits)) / 10 ** digits;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (padding) { digits = 2 - Math.floor(Math.log10(exponent)); }\n            }\n\n            if (type !== 'input') { mantissa = Math.abs(mantissa); }\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${inputBase}e${formated}e${exponent}` :\n                `${base < 0 ? '-' : ''}${formated.replace('.', globalSave.format[0])}e${power < 0 ? '-' : ''}e${exponent}`; //1.23ee123 (-1.23e-e123)\n        }\n\n        if (power >= 6 || power < -4) { //1.23e123 (-1.23e-123)\n            if (padding === 'exponent') { padding = true; }\n\n            let digits = 3 - Math.floor(Math.log10(Math.abs(power)));\n            let mantissa = Math.round(base * 10 ** digits) / 10 ** digits;\n            let exponent = power;\n            if (Math.abs(mantissa) === 10) { //To remove rare bugs\n                mantissa /= 10;\n                exponent++;\n                if (exponent === -4 || exponent === 1e4) { return technical.format([mantissa, exponent], settings); }\n                if (padding) { digits = 3 - Math.floor(Math.log10(Math.abs(exponent))); }\n            }\n\n            const formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n            return type === 'input' ? `${formated}e${exponent}` : `${formated.replace('.', globalSave.format[0])}e${exponent}`;\n        }\n\n        //12345 (-12345)\n        let digits = power < 1 ? 5 : (5 - power);\n        const mantissa = Math.round(base * 10 ** (digits + power)) / 10 ** digits;\n\n        const powerCheck = Math.floor(Math.log10(Math.abs(mantissa))); //To remove rare bugs\n        if (powerCheck === 6) { return technical.format([base < 0 ? -1 : 1, powerCheck], settings); }\n        if (padding === 'exponent') {\n            padding = false;\n        } else if (padding && powerCheck !== power) { digits = powerCheck < 1 ? 5 : (5 - powerCheck); }\n\n        let formated = padding ? mantissa.toFixed(digits) : `${mantissa}`;\n        if (type === 'input') { return formated; }\n        let ending = ''; //Being lazy\n        const index = formated.indexOf('.');\n        if (index !== -1) { //For some reason this replaces dot 2 times faster (?), also fixes spaces after dot (not required)\n            ending = `${globalSave.format[0]}${formated.slice(index + 1)}`;\n            formated = formated.slice(0, index);\n        }\n        return `${mantissa >= 1e3 ? formated.replace(/\\B(?=(\\d{3})+(?!\\d))/, globalSave.format[1]) : formated}${ending}`;\n    }\n};\n\nexport const { compareFunc } = Overlimit;\n", "import Overlimit from './Limit';\nimport { getId, loadoutsRecreate } from './Main';\nimport { calculateMaxLevel, assignMilestoneInformation, toggleConfirm, toggleSwap, calculateEffects, autoUpgradesSet, autoResearchesSet, autoElementsSet, toggleSupervoid, assignBuildingsProduction, assignResetInformation, loadoutsLoadAuto, assignChallengeInformation } from './Stage';\nimport type { globalType, playerType } from './Types';\nimport { format, switchTab, updateCollapsePoints, visualTrueStageUnlocks } from './Update';\nimport { prepareVacuum } from './Vacuum';\n\nexport const player: playerType = {\n    version: 'v0.2.6_beta1',\n    fileName: 'Fundamental, [dateD.M.Y] [timeH-M-S], [stage]',\n    stage: {\n        true: 1,\n        current: 1,\n        active: 1,\n        resets: 0,\n        time: 0,\n        peak: 0,\n        peakedAt: 0,\n        input: 0\n    },\n    discharge: {\n        energy: 0,\n        energyMax: 0,\n        current: 0\n    },\n    vaporization: {\n        clouds: 0,\n        cloudsMax: 0,\n        input: [3, 0]\n    },\n    accretion: {\n        rank: 0\n    },\n    collapse: {\n        mass: 0.01235,\n        massMax: 0.01235,\n        stars: [0, 0, 0],\n        show: 0,\n        maxElement: 0,\n        input: [2, 1e6],\n        points: []\n    },\n    merge: {\n        rewards: [0, 0, 0, 0],\n        resets: 0,\n        input: [0, 0],\n        since: 0\n    },\n    darkness: {\n        energy: 0,\n        fluid: 0,\n        input: 2\n    },\n    inflation: {\n        loadouts: [],\n        vacuum: false,\n        voidVerses: 0,\n        resets: 0,\n        ends: [0, 9, 0],\n        time: 0,\n        age: 0\n    },\n    time: {\n        updated: Date.now(),\n        started: Date.now(),\n        export: [0, 0, 0],\n        offline: 0,\n        online: 0,\n        stage: 0,\n        vacuum: 0,\n        universe: 0,\n        end: 0\n    },\n    buildings: [[] as unknown as playerType['buildings'][0]],\n    verses: [\n        {\n            true: 0,\n            current: 0\n        }\n    ],\n    strange: [\n        {\n            current: 0,\n            total: 0\n        }, {\n            current: 0,\n            total: 0\n        }\n    ],\n    cosmon: [{\n        current: 0,\n        total: 0\n    }, {\n        current: 0,\n        total: 0\n    }],\n    upgrades: [[]],\n    researches: [[]],\n    researchesExtra: [[]],\n    researchesAuto: [],\n    ASR: [],\n    elements: [],\n    strangeness: [[]],\n    milestones: [[]],\n    tree: [],\n    challenges: {\n        active: null,\n        super: false,\n        void: [0, 0, 0, 0, 0, 0],\n        voidCheck: [0, 0, 0, 0, 0, 0],\n        supervoid: [0, 0, 0, 0, 0, 0],\n        supervoidMax: [0, 0, 0, 0, 0, 0],\n        stability: 0\n    },\n    toggles: {\n        normal: [], //class 'toggleNormal'\n        confirm: [], //Class 'toggleConfirm'\n        hover: [], //Class 'toggleHover'\n        max: [], //Class 'toggleMax'\n        auto: [], //Class 'toggleAuto'\n        buildings: [[]],\n        verses: [],\n        shop: {\n            input: 0,\n            wait: [2]\n        }\n    },\n    history: {\n        stage: {\n            best: [3.1556952e16, 0, 0],\n            list: [],\n            input: [20, 100]\n        },\n        end: {\n            best: [3.1556952e16, 0],\n            list: [],\n            input: [20, 100]\n        }\n    },\n    event: false,\n    clone: {}\n};\n\nexport const global: globalType = {\n    tabs: {\n        current: 'stage',\n        list: ['stage', 'upgrade', 'strangeness', 'inflation', 'settings'],\n        stage: {\n            current: 'Structures',\n            list: ['Structures', 'Advanced']\n        },\n        upgrade: {\n            current: 'Upgrades',\n            list: ['Upgrades', 'Elements']\n        },\n        strangeness: {\n            current: 'Matter',\n            list: ['Matter', 'Milestones']\n        },\n        inflation: {\n            current: 'Inflations',\n            list: ['Inflations', 'Milestones']\n        },\n        settings: {\n            current: 'Settings',\n            list: ['Settings', 'Stats', 'History']\n        }\n    } as globalType['tabs'],\n    debug: {\n        timeLimit: false,\n        rankUpdated: null,\n        historyStage: null,\n        historyEnd: null\n    } as globalType['debug'],\n    offline: {\n        active: true,\n        stage: [null, null],\n        cacheUpdate: true\n    },\n    paused: false,\n    trueActive: 1,\n    lastSave: 0,\n    log: {\n        add: [],\n        lastHTML: ['Start of the log', 1, 0, true]\n    },\n    hotkeys: {\n        disabled: true,\n        repeat: false,\n        shift: false,\n        ctrl: false,\n        tab: false\n    },\n    lastUpgrade: [[null, 'upgrades']],\n    lastElement: null,\n    lastStrangeness: [null, 0],\n    lastInflation: [null, 0],\n    lastMilestone: [null, 0],\n    lastChallenge: [1, 1],\n    sessionToggles: [false, false],\n    automatization: {\n        autoU: [[]],\n        autoR: [[]],\n        autoE: [[]],\n        elements: []\n    },\n    stageInfo: {\n        word: ['', 'Microworld', 'Submerged', 'Accretion', 'Interstellar', 'Intergalactic', 'Abyss'],\n        textColor: ['', 'cyan', 'blue', 'gray', 'orange', 'darkorchid', 'darkviolet'],\n        buttonBorder: ['', 'darkcyan', '#386cc7', '#424242', '#a35700', '#8f004c', '#6c1ad1'],\n        imageBorderColor: ['', '#008b8b', '#1460a8', '#5b5b75', '#e87400', '#b324e2', '#5300c1'],\n        costName: ['', 'Energy', 'Drops', 'Mass', 'Stardust', 'Stardust', 'Dark matter'],\n        activeAll: []\n    },\n    dischargeInfo: {\n        energyType: [[], [], [], [], [], [], []],\n        energyStage: [0, 0, 0, 0, 0, 0, 0],\n        energyTrue: 0,\n        next: 1,\n        total: 0,\n        base: 1\n    },\n    vaporizationInfo: {\n        S2Research0: 0,\n        S2Research1: 0,\n        S2Extra1: 0,\n        get: 0\n    },\n    accretionInfo: {\n        unlockA: [2, 4, 8, 11],\n        rankU: [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 7],\n        rankR: [1, 1, 2, 2, 3, 3, 3, 4, 5],\n        rankE: [2, 3, 4, 5, 3, 6],\n        rankCost: [5.9722e27, 1e-7, 1e10, 1e24, 5e29, 2.45576045e31, 1.98847e40],\n        rankColor: ['blue', 'cyan', 'gray', 'gray', 'gray', 'darkviolet', 'orange', 'gray'],\n        rankName: ['Ocean world', 'Cosmic dust', 'Meteoroid', 'Asteroid', 'Planet', 'Jovian planet', 'Protostar', 'Protogalaxy'],\n        rankImage: ['Ocean%20world.png', 'Dust.png', 'Meteoroids.png', 'Asteroid.png', 'Planet.png', 'Giant.png', 'Protostar.png', 'Protogalaxy.png'],\n        maxRank: 4,\n        effective: 1,\n        disableAuto: false,\n        dustSoft: 1\n    },\n    collapseInfo: {\n        unlockB: [0, 0.01235, 0.23, 10, 40, 1000],\n        unlockU: [0.01235, 0.076, 1.3, 10, 40],\n        unlockR: [0.18, 0.3, 0.8, 1.3, 40, 1000],\n        supervoid: false,\n        newMass: 0,\n        starCheck: [0, 0, 0],\n        trueStars: 0,\n        pointsLoop: 0, //Micro optimization\n        solarCap: 0.01235\n    },\n    mergeInfo: {\n        unlockU: [0, 0, 0, 0, 1, 1, 3],\n        unlockR: [0, 0, 3, 3, 6],\n        unlockE: [0, 2, 4, 4, 6, 6],\n        S5Extra2: 0,\n        checkReward: [0, 0, 0, 0],\n        galaxies: 0\n    },\n    inflationInfo: {\n        globalSpeed: 1,\n        totalSuper: 0,\n        newFluid: 0,\n        disableAuto: false\n    },\n    intervalsId: {\n        main: undefined,\n        numbers: undefined,\n        visual: undefined,\n        autoSave: undefined,\n        mouseRepeat: undefined\n    },\n    buildingsInfo: {\n        maxActive: [0, 4, 6, 5, 5, 4, 1],\n        name: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms', 'Molecules'], //[0] Must be 'Mass'\n            ['Moles', 'Drops', 'Puddles', 'Ponds', 'Lakes', 'Seas', 'Oceans'],\n            ['Mass', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites', 'Subsatellites'],\n            ['Stardust', 'Brown dwarfs', 'Main sequence', 'Red supergiants', 'Blue hypergiants', 'Quasi-stars'],\n            ['Stars', 'Nebulas', 'Star clusters', 'Galaxies'],\n            ['Dark matter', 'Dark planets']\n        ],\n        hoverText: [\n            [],\n            ['Mass', 'Preons', 'Quarks', 'Particles', 'Atoms'],\n            ['Tritium', 'Drops', 'Puddles', 'Puddles', 'Puddles', 'Puddles'],\n            ['Preons hardcap', 'Cosmic dust', 'Planetesimals', 'Protoplanets', 'Satellites'],\n            ['Stardust', 'Stardust', 'Stardust', 'Stardust', 'Stardust'],\n            ['Interstellar Stars', 'Interstellar Stars', 'Nebulas and Star clusters'],\n            ['Dark matter hardcap']\n        ],\n        type: [\n            [],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'producing', 'improving', 'improving', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'improving', 'improving'],\n            ['producing', 'producing', 'producing', 'producing', 'producing'],\n            ['producing', 'improving', 'improving'],\n            ['delaying']\n        ],\n        firstCost: [\n            [],\n            [0, 0.005476, 6, 3, 24, 3],\n            [0, 2.7753108348135e-3, 100, 1e7, 1e18, 1e23, 2.676e25],\n            [0, 1e-19, 1e-9, 1e21, 1e17, 1e22],\n            [0, 1, 1e5, 1e15, 1e27, 1e50],\n            [0, 1e50, 1e54, 1e5],\n            [0, 1e8]\n        ],\n        increase: [\n            [],\n            [0, 1.4, 1.4, 1.4, 1.4, 1.4],\n            [0, 1.15, 1.2, 1.25, 1.35, 1.4, 4],\n            [0, 1.15, 1.25, 1.35, 10, 10],\n            [0, 1.4, 1.55, 1.70, 1.85, 2],\n            [0, 2, 2, 1.11],\n            [0, 1.4]\n        ],\n        producing: [[]] as unknown as globalType['buildingsInfo']['producing']\n    },\n    versesInfo: {\n        firstCost: [120],\n        increase: [1.5],\n        producing: [0]\n    },\n    strangeInfo: {\n        name: ['Strange quarks', 'Strangelets'],\n        stageBoost: [1, 1, 1, 1, 1, 1],\n        strangeletsInfo: [0, 1],\n        quarksGain: 0\n    },\n    upgradesInfo: [\n        {} as globalType['upgradesInfo'][0], { //Stage 1\n            name: [\n                'Weak force',\n                'Strong force',\n                'Electrons',\n                'Protons',\n                'Neutrons',\n                'Superposition',\n                'Protium',\n                'Deuterium',\n                'Tritium',\n                'Nuclear fusion',\n                'Nuclear fission'\n            ],\n            effectText: [\n                () => 'Particles will produce 8 times more Quarks.',\n                () => 'Gluons will be able to bind Quarks into Particles, which will make Particles 16 times cheaper.',\n                () => `${player.inflation.vacuum ? 'Atoms' : 'Particles'} will be 8 times cheaper.`,\n                () => `Atoms will produce ${player.inflation.vacuum ? 6 : 4} times more Particles.`,\n                () => 'Molecules will produce 4 times more Atoms.',\n                () => `Ability to regain spent Energy and if had enough Energy, it will also boost production of all ${player.inflation.vacuum ? 'Microworld ' : ''}Structures by ${format(global.dischargeInfo.base, { padding: true })}.${player.inflation.vacuum ? `\\n(In true Vacuum it will also reset resources and all non-self-made Structures from all Stages${player.stage.true >= 7 ? ' before Abyss' : ''}, and enough self-made Structures to fully regain spent Energy)` : ''}`,\n                () => `Decrease Structures cost scaling by -${format(calculateEffects.S1Upgrade6() / 100)}.`,\n                () => `Make self-made Structures boost themselves by ${format(calculateEffects.S1Upgrade7())}.${player.inflation.vacuum ? `\\n(Self-made Preons boost themselves by ${format(calculateEffects.S1Upgrade7(true), { padding: true })} instead, softcaps instantly and gets completely disabled after ${format(1001)} Preons)` : ''}`,\n                () => `Molecules will produce Molecules, at a reduced rate.\\n(${format(new Overlimit(effectsCache.tritium).multiply(global.inflationInfo.globalSpeed), { padding: true })} Molecules per second)`,\n                () => `Unspent Energy ${player.upgrades[1][10] === 1 ? '' : `^${format(0.5)}`} will boost 'Tritium' production of Molecules.\\n(Boost: ${format(calculateEffects.S1Upgrade9(), { padding: true })})`,\n                () => \"Unlock the full strength of 'Nuclear fusion' and increase effective Energy by 2.\"\n            ],\n            cost: [40, 60, 100, 120, 180, 360, 1200, 3600, 12000, 80000, 2.4e6],\n            maxActive: 10\n        }, { //Stage 2\n            name: [\n                'Molecules to Moles',\n                'Water spread',\n                'Vaporization',\n                'Surface tension',\n                'Surface stress',\n                'Stream',\n                'River',\n                'Tsunami',\n                'Tide'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} ${format(player.inflation.vacuum ? 1.02 : 1.04)} times ${player.inflation.vacuum ? 'more' : 'faster'} for every self-made Drop.`,\n                () => `Spread water faster with every Puddle, current formula is ${format(player.challenges.active === 0 && player.challenges.super ? 1.01 : 1.02)} ^ effective Puddles.\\nPuddles after 200 and non-self-made ones are raised to the power of ${format(0.7)}.\\n(Total effect: ${format(calculateEffects.S2Upgrade1(), { padding: true })})`,\n                () => { //[2]\n                    const softcap = format(calculateEffects.cloudsGain());\n                    return `Gain ability to convert Drops into Clouds. Cloud gain formula: (Clouds ^ (1 / ${softcap}) + (Drops / ${format(calculateEffects.S2Upgrade2())})) ^ ${softcap} - Clouds.`;\n                },\n                () => `Puddles will get a boost based on Moles ^${format(calculateEffects.S2Upgrade3_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade3(), { padding: true })})`,\n                () => `Puddles will get a boost based on Drops ^${format(calculateEffects.S2Upgrade4_power())}.\\n(Boost: ${format(calculateEffects.S2Upgrade4(), { padding: true })})`,\n                () => `Ponds will increase current Puddle amount. (${1 + player.researches[2][4]} extra Puddles per Pond)`,\n                () => `Lakes will increase current Pond amount. (${1 + player.researches[2][5]} extra Ponds per Lake)`,\n                () => `Spreads enough water to make Seas increase current Lake amount. (${1 + player.researches[2][6]} extra Lakes per Sea)`,\n                () => 'Spreads water too fast. 1 extra Seas per Ocean.\\nIt will also improve Oceans effect scaling.'\n            ],\n            cost: [10, 1e6, 1e10, 1e3, 1e4, 2e9, 5e20, 1e28, 2e48],\n            maxActive: 8\n        }, { //Stage 3\n            name: [\n                'Brownian motion',\n                'Gas',\n                'Micrometeoroid',\n                'Streaming instability',\n                'Gravitational field',\n                'Rubble pile',\n                'Magma ocean',\n                'Hydrostatic equilibrium',\n                'Satellite system',\n                'Atmosphere',\n                'Pebble accretion',\n                'Tidal force',\n                'Ring system',\n                'Self-gravity'\n            ],\n            effectText: [\n                () => `Through random collisions every self-made Cosmic dust will ${player.inflation.vacuum ? 'delay Preons hardcap even more' : 'produce even more Mass'}.\\n(By ${format(calculateEffects.S3Upgrade0())} per self-made Cosmic dust)`,\n                () => `A new substance for the Accretion, it will provide boost to Cosmic dust based on its quantity.\\n(Formula: (self-made * current) ^${format(calculateEffects.S3Upgrade1_power())} | Boost: ${format(calculateEffects.S3Upgrade1(), { padding: true })})`,\n                () => 'Just a small meteoroid, but it will be a good base for what to come.\\n(Unlock a new Structure and get 2x boost to Cosmic dust)',\n                () => `Small bodies will spontaneously concentrate into clumps.\\n(Self-made Planetesimals will boost each other by ${format(calculateEffects.S3Upgrade3())})`,\n                () => 'Bodies will become massive enough to affect each other with their own gravity.\\n(Unlock a new Structure and get 3x boost to Planetesimals)',\n                () => `Shattered pieces will fall back together. ${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => `Melt the core to increase Accretion speed.\\n(Cosmic dust strength will be increased by ${format(2 * 1.5 ** player.researches[3][7])})`,\n                () => `After reaching equilibrium, self-made Protoplanets will boost each other by ${format(1.02)}.`,\n                () => 'Unlock yet another Structure.',\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased again (because of drag and escape velocity), by 2.`,\n                () => `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be greatly increased by ${8 * 2 ** player.researches[3][8]}.`,\n                () => `Satellites cost scaling will be 2 times smaller.${player.inflation.vacuum ? '\\nAlso unlock a new Structure.' : ''}`,\n                () => 'Satellites effect will scale better.',\n                () => `Allow for Star clusters to be boosted by ('Gravity' / ${format(2e5)}) ^${format(0.5)} + 1.\\n(Boost is equal to ${format((calculateEffects.S3Research6() / 2e5) ** 0.5 + 1, { padding: true })})`\n            ],\n            cost: [1e-16, 1e-13, 1e-13, 1, 1e14, 1e17, 1e10, 1e22, 1e22, 1e23, 1e9, 1e26, 1e29, 1e86],\n            maxActive: 13\n        }, { //Stage 4\n            name: [\n                'Gravitational Collapse',\n                'Proton-proton chain',\n                'Carbon-Nitrogen-Oxygen cycle',\n                'Helium fusion',\n                'Nucleosynthesis'\n            ],\n            effectText: [\n                () => `As fuel runs out, every Star will boost production in its own special way.\\nSolar mass ${player.inflation.vacuum ? `on Collapse is Accretion Mass / ${format(1.98847e33)} and ` : ''}will not decrease if to reset below current. (Hover over Remnants effects to see what they boost)`,\n                () => \"Fuse with Protium instead of Deuterium. Unlock 5 first Elements. ('Elements' subtab)\",\n                () => 'Unlock the CNO cycle, which is a better source of Helium and Energy. Unlock 5 more Elements.',\n                () => 'Through Triple-alpha and then Alpha process unlock 2 more Elements.',\n                () => `Create new Atomic nuclei with Neutron capture (s-process and p-process).\\nUnlock ${player.verses[0].true + 1} more Element${player.stage.true >= 7 ? 's (+1 for every self-made Universe)' : ''}.`\n            ],\n            cost: [100, 1000, 1e9, 1e48, 1e128],\n            maxActive: 4\n        }, { //Stage 5\n            name: [\n                'Molecular cloud',\n                'Super Star cluster',\n                'Quasar',\n                'Galactic Merger',\n                'Starburst region',\n                'Globular cluster',\n                'Starburst Galaxy'\n            ],\n            effectText: [\n                () => `Nebula that is dense enough to block the light, it will boost Nebulas by ${format(calculateEffects.S5Upgrade0())}.`,\n                () => `A very massive Star cluster that will boost Star clusters by ${format(calculateEffects.S5Upgrade1())}.`,\n                () => `Boost per Galaxy will be increased by +${format(calculateEffects.S5Upgrade2(false, 1), { padding: true })}.\\n(Effect will be stronger with more Solar mass past ${format(1e5)})`,\n                () => `Unlock a new reset type that will bring Galaxies closer for potential Merging.${player.inflation.vacuum ? ' That reset behaves like a Galaxy reset, while also converting self-made Galaxies into bonus ones. Can only be done a limited amount of times per Stage reset.' : ''}`,\n                () => `Region of space that is undergoing a larger amount of Star formations, it will boost Nebulas by ${format(1000 * 10 ** player.researches[5][4])}.`,\n                () => `A spheroidal conglomeration of Stars that is even more dense than Super Star cluster, it will boost Star clusters by ${format(1000 * 10 ** player.researches[5][4])}.`,\n                () => `An entire Galaxy that is undergoing higher rate of Star formations, it will boost Galaxies by ${format(100 * 10 ** player.researches[5][4])}.`\n            ],\n            cost: [1e56, 1e60, 1e120, 1e160, 1e200, 1e210, 1e290] as unknown as Overlimit[],\n            maxActive: 4\n        }, { //Stage 6\n            name: [\n                'Dark nucleation',\n                'Galactic boost'\n            ],\n            effectText: [\n                () => `Unlock a new Dark reset, it will start the formation of the new Dark resources by modifing existing physics.\\n(Formula for Dark fluid gain is (log10(Dark matter) + Dark energy) ^${format(0.2)} - 1. Dark fluid boost Dark matter production and effective Dark energy)`,\n                () => `Boost Dark matter production by current Galaxies.\\n(Boost is equal to ${format((global.mergeInfo.galaxies + 1) ** 0.5, { padding: true })})`\n            ],\n            cost: [8e12, 2e16],\n            maxActive: 0\n        }\n    ],\n    researchesInfo: [\n        {} as globalType['researchesInfo'][0], { //Stage 1\n            name: [\n                'Stronger Protium',\n                'Better Deuterium',\n                'Improved Tritium',\n                'Requirement decrease',\n                'Discharge improvement',\n                'Radioactive Discharge'\n            ],\n            effectText: [\n                () => `Cost scaling will be -${format(0.03)} smaller with every level.`,\n                () => `Self-made Structures will boost each other by an additional +${format(0.01)}.`,\n                () => `Molecules will produce themselves ${format(calculateEffects.S1Research2())} times quicker.`,\n                () => `Discharge goals requirement will scale slower. (-2)\\n(Creating this Research will make the next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(player.researches[1][3] + 1)))} Energy)`,\n                () => { //[4]\n                    const newBase = calculateEffects.dischargeBase(player.researches[1][4] + 1);\n                    return `Discharge production boost from reached goals will be increased by +${format(newBase - global.dischargeInfo.base)}.\\n(This is equal to ${format((newBase / global.dischargeInfo.base) ** global.dischargeInfo.total, { padding: true })}x boost improvement)`;\n                },\n                () => `Discharge goals will be able to boost 'Tritium'.\\n(Current effect: ${format(calculateEffects.S1Research5())} ^ level)`\n            ],\n            cost: [],\n            firstCost: [1600, 4800, 16000, 32000, 16000, 24000],\n            scaling: [400, 1200, 8000, 40000, 16000, 16000],\n            max: [5, 4, 8, 2, 4, 3],\n            maxActive: 6\n        }, { //Stage 2\n            name: [\n                'Better Mole production',\n                'Better Drop production',\n                'Stronger surface tension',\n                'Stronger surface stress',\n                'More streams',\n                'Distributary channel',\n                'Megatsunami'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce Moles'} ${player.challenges.active === 0 && player.challenges.super ? 2 : 3} times more.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research0 !== player.researches[2][0] ? `is ${format(global.vaporizationInfo.S2Research0, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}`,\n                () => `Puddles will produce ${player.challenges.active === 0 && player.challenges.super ? format(1.4) : 2} times more Drops.${player.upgrades[2][2] === 1 || player.inflation.vacuum ? `\\nEffective level ${global.vaporizationInfo.S2Research1 !== player.researches[2][1] ? `is ${format(global.vaporizationInfo.S2Research1, { padding: true })}, will be restored with more Drops` : 'will be set to 0 after any reset'}.` : ''}`,\n                () => { //[2]\n                    const power = calculateEffects.S2Upgrade3_power(player.researches[2][2] + 1) - calculateEffects.S2Upgrade3_power();\n                    return `'Surface tension' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade3(power), { padding: true })}x boost improvement)`;\n                },\n                () => { //[3]\n                    const power = calculateEffects.S2Upgrade4_power(player.researches[2][3] + 1) - calculateEffects.S2Upgrade4_power();\n                    return `'Surface stress' base will be +${format(power)} stronger.\\n(This is equal to ${format(calculateEffects.S2Upgrade4(power), { padding: true })}x boost improvement)`;\n                },\n                () => 'With more streams, will be able to have even more extra Puddles. (+1 extra Puddles per Pond)',\n                () => 'Rivers will be able to split, which will allow even more Ponds per Lake. (+1 per)',\n                () => 'Big enough to allow even more Lakes per Sea. (+1)'\n            ],\n            cost: [],\n            firstCost: [10, 400, 1e4, 1e5, 1e14, 1e22, 1e80],\n            scaling: [1.366, 5, 1e3, 1e2, 1e3, 1e4, 1],\n            max: [8, 8, 4, 4, 2, 1, 1],\n            maxActive: 6\n        }, { //Stage 3\n            name: [\n                'More massive bodies',\n                'Adhesion',\n                'Space weathering',\n                'Inelastic collisions',\n                'Destructive collisions',\n                'Contact binary',\n                'Gravity',\n                'Planetary differentiation',\n                'Aerodynamic drag'\n            ],\n            effectText: [\n                () => 'Increase strength of Cosmic dust by 3.',\n                () => `Cosmic dust particles will cling to each other. (+${format(0.01)} to 'Brownian motion')`,\n                () => 'Planetesimals will produce more Cosmic dust. (3 times more)',\n                () => `Slow encounter velocities will result in a more efficient growth.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 2.`,\n                () => `When shattered, Planetesimals will replenish small grains quantity.\\n'Streaming instability' effect will be increased by +${format(0.005)}.`,\n                () => `Instead of shattering, some Planetesimals will form a contact binary or even trinary.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be increased by 3.`,\n                () => { //[6]\n                    const effect = calculateEffects.S3Research6();\n                    return `Planetesimals will attract other bodies and get a boost to their own production based on unspent Mass ^${format(effect > 1 ? logAny(effect, player.buildings[3][0].current.toNumber()) : 0, { padding: true })}.\\n(Boost: ${format(effect, { padding: true })} \u27F6 ${format(calculateEffects.S3Research6(player.researches[3][6] + 1), { padding: true })}, weaker after ${format(1e21)} Mass)`;\n                },\n                () => `'Magma Ocean' will become stronger, by ${format(1.5)}.`,\n                () => `Improve 'Pebble accretion' Accretion speed even more.\\n${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will increased by 2.`\n            ],\n            cost: [],\n            firstCost: [1e-16, 1e-15, 1e-5, 1e2, 1e10, 1e11, 1e15, 1e14, 1e12],\n            scaling: [11, 111, 22, 10, 100, 100, 10, 1e4, 1e3],\n            max: [9, 3, 8, 8, 2, 2, 6, 4, 4],\n            maxActive: 9\n        }, { //Stage 4\n            name: [\n                'Planetary system',\n                'Star system',\n                'Protoplanetary disk',\n                'Planetary nebula',\n                'Gamma-ray burst',\n                'Inner Black hole'\n            ],\n            effectText: [\n                () => `From Planetesimals to Planets, will get ${format(calculateEffects.S4Research0_base())}x boost to all Stars with every level.\\n(Total boost: ${format(calculateEffects.S4Research0(), { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S4Research1();\n                    return `All self-made Stars will boost each other by ${format(base, { padding: true })}.\\n(Total boost: ${format(new Overlimit(base).power(global.collapseInfo.trueStars), { padding: true })} \u27F6 ${format(new Overlimit(calculateEffects.S4Research1(player.researches[4][1] + 1)).power(global.collapseInfo.trueStars), { padding: true })})`;\n                },\n                () => `Improve effect scaling of 'Planetary system', as well increase its max level by +3.\\n(Total boost from 'Planetary system' will be increased by ${format(calculateEffects.S4Research0(calculateEffects.S4Research0_base(player.researches[4][2] + 1) / calculateEffects.S4Research0_base()), { padding: true })})`,\n                () => \"Matter will be expelled from Red giants, this will boost Main-sequence Stars by 2, and also increase 'Planetary system' max level by +3.\",\n                () => `An immensely energetic explosion that will boost all Stars by ${format(calculateEffects.S4Research4(), { padding: true })}${player.researches[4][4] < 2 ? ` \u27F6 ${format(calculateEffects.S4Research4(false, player.researches[4][4] + 1), { padding: true })}` : ''}.\\n(Effect will be stronger with more Black holes${player.elements[23] >= 1 ? ' and Solar mass' : ''})`,\n                () => 'Quasi-stars will Collapse into Intermediate-mass Black holes that are equivalent to +1 (Stellar) Black holes per level.'\n            ],\n            cost: [],\n            firstCost: [1e3, 5e4, 1e8, 1e11, 1e28, 1e154],\n            scaling: [10, 200, 1e12, 1, 2e8, 1e306],\n            max: [3, 2, 1, 1, 2, 1],\n            maxActive: 5\n        }, { //Stage 5\n            name: [\n                'Higher density',\n                'Type frequency',\n                'Jeans instability',\n                'Gravitational binding Energy',\n                'Star formation'\n            ],\n            effectText: [\n                () => `Higher density of Nebulas will allow them to produce Stars of higher tier, but each tier is 4 times slower than the previous one. It will also boost Nebulas by 2.\\nNext tier will be ${global.buildingsInfo.name[4][Math.min(player.researches[5][0] + 2, player.inflation.vacuum ? 5 : 4)]}.`,\n                () => `More of the same Star type will be found within Star cluster. Star clusters and their minimum strength will be improved by 2. It will also boost Stars of lower tier, but 2 times less than the previous one.\\nNext tier will be ${global.buildingsInfo.name[4][Math.max((player.inflation.vacuum ? 4 : 3) - player.researches[5][1], 1)]}.`,\n                () => `Weaken internal gas pressure within Nebulas to cause even more gravitational Collapses.\\nThis will make every self-made Nebula boost each other by ${format(calculateEffects.S5Research2(), { padding: true })}. (+${format(0.00625)} per level)`,\n                () => `Increase the Energy required for Star clusters to cease being in a gravitationally bound state.\\nThis will make every self-made Star cluster boost each other by ${format(calculateEffects.S5Research3(), { padding: true })}. (+${format(0.00625)} per level)`,\n                () => \"Produce even more stars and increase strength of 'Starburst region', 'Globular cluster' and 'Starburst Galaxy' effects by 10 per level.\"\n            ],\n            cost: [],\n            firstCost: [1e54, 1e58, 1e270, 1e280, '1e550'] as unknown as Overlimit[],\n            scaling: [1e8, 1e8, 1e30, 1e30, 1e30],\n            max: [4, 4, 2, 2, 4],\n            maxActive: 2\n        }, { //Stage 6\n            name: [\n                'Dark aggregation',\n                'Faster aggregation',\n                'Time dilation',\n                'Self-interaction'\n            ],\n            effectText: [\n                () => `Boost production of Dark matter by 2.${player.upgrades[6][0] !== 1 ? '\\nFinal level will also unlock a new minor Dark Structure.' : ''}`,\n                () => 'Boost production of Dark matter again by 2.',\n                () => `Boost global speed by ${format(1.1)}.\\nAlso delays Dark matter hardcap by 1 + level.`,\n                () => `Make self-made Dark planets boost each other by 1 + ${format(0.01)} * level and scale in cost slower by -${format(0.05)} * level.`\n            ],\n            cost: [],\n            firstCost: [4e5, 2e8, 1e9, 4e9],\n            scaling: [2, 2, 2, 3],\n            max: [8, 14, 9, 5],\n            maxActive: 0\n        }\n    ],\n    researchesExtraInfo: [\n        {} as globalType['researchesExtraInfo'][0], { //Stage 1\n            name: [\n                'Extra strong force',\n                'Improved formula',\n                'Accretion',\n                'Later Preons',\n                'Impulse',\n                'Radioactive decay'\n            ],\n            effectText: [\n                () => \"Mesons will be able to bind Particles to form Atoms, which will make Atoms to be affected by 'Strong force'.\\n(Atoms will be 16 times cheaper)\",\n                () => { //[1]\n                    const now = calculateEffects.S1Extra1();\n                    const after = calculateEffects.S1Extra1(player.researchesExtra[1][1] + 1);\n                    return `Improve 'Tritium' formula, current formula is log${format(now)}${player.researchesExtra[1][1] < 4 ? ` \u27F6 log${format(after)}.\\n(Which is equal to ${format(logAny(now, after), { padding: true })}x improvement)` : '.'}`;\n                },\n                () => `First level is to begin the Accretion, second level is to Submerge it.\\nAll Structures produce Energy on creation and all resets affect all lower Stages, while also doing Discharge reset.\\nAccretion Mass is Microworld Mass * ${format(1.78266192e-33)} and Moles are Molecules / ${format(6.02214076e23)}.`,\n                () => { //[3]\n                    const power = calculateEffects.S1Extra3();\n                    const energy = calculateEffects.effectiveEnergy();\n                    return `Boost Preons and delay hardcap by current Energy ^${format(power)}.\\n(Effect: ${format(energy ** power, { padding: true })} \u27F6 ${format(energy ** calculateEffects.S1Extra3(player.researchesExtra[1][3] + 1), { padding: true })})`;\n                },\n                () => { //[4]\n                    const base = calculateEffects.S1Extra4();\n                    return `Discharge goals will be able to boost all Interstellar Stars. Their strength is based on Energy and Discharge base.\\nCurrent base is ${format(base, { padding: true })}, total boost is ${format(base ** global.dischargeInfo.total, { padding: true })}.`;\n                },\n                () => `Improve 'Impulse' base strength even more.\\n(This will increase total boost by ${format((calculateEffects.S1Extra4(player.researchesExtra[1][5] + 1) / calculateEffects.S1Extra4()) ** global.dischargeInfo.total, { padding: true })})`\n            ],\n            cost: [],\n            firstCost: [2000, 40000, 12000, 16000, 160000, 1.6e6],\n            scaling: [0, 16000, 68000, 16000, 0, 1.6e6],\n            max: [1, 4, 2, 4, 1, 2],\n            maxActive: 0\n        }, { //Stage 2\n            name: [\n                'Natural Vaporization',\n                'Rain Clouds',\n                'Storm Clouds',\n                'Water Accretion',\n                'Jeans Mass'\n            ],\n            effectText: [\n                () => {\n                    if (!player.inflation.vacuum || player.tree[1][5] < 1) { return 'When formed, Clouds will use Drops produced this reset instead of current ones.'; }\n                    const level = player.researchesExtra[2][0];\n                    const extra = player.strangeness[2][4] >= 2 ? 1 : 4;\n                    return `Passively gain ${format(level * (5 + 5 * level) / extra)}% \u27F6 ${format((level + 1) * (10 + 5 * level) / extra)}% Clouds per second. (Not affected by global speed)`;\n                },\n                () => { //[1]\n                    const maxLevel = player.researchesExtra[2][1];\n                    const trueLevel = global.vaporizationInfo.S2Extra1;\n                    const penalty = player.buildings[2][2].true < 1;\n                    const effect = calculateEffects.S2Extra1;\n                    return `Some Clouds will start pouring Drops themselves. This will boost Puddles, even if there are none, based on current Clouds.\\nEffective level ${trueLevel !== maxLevel ? `is ${format(trueLevel, { padding: true })}, will be restored with more Drops, this doesn't` : \"will be set to 0 after any reset, this won't\"} affect pre-Puddles boost.\\n(Effect: ${format(penalty ? (effect(maxLevel) - 1) * global.inflationInfo.globalSpeed : effect(trueLevel), { padding: true })} \u27F6 ${format(penalty ? (effect(maxLevel + 1) - 1) * global.inflationInfo.globalSpeed : effect(maxLevel + (trueLevel === maxLevel ? 1 : 0)), { padding: true })}, weaker after ${format(1e6)} Clouds)`;\n                },\n                () => `Make 'Rain Clouds' boost Seas and their own pre-Puddles effect, at a reduced rate.\\n(Effect: ${format(calculateEffects.S2Extra2(calculateEffects.S2Extra1(player.buildings[2][2].true < 1 ? player.researchesExtra[2][1] : global.vaporizationInfo.S2Extra1), 1), { padding: true })})`,\n                () => { //[3]\n                    const level = player.researchesExtra[2][3];\n                    return `Submerge and boost Stars with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Stars: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                },\n                () => { //[4]\n                    const level = player.researchesExtra[2][4];\n                    return `High density of Drops will end up boosting Nebulas with 'Surface tension'. Also with 'Surface stress' ^${format(0.5)} at level 2, full power at level 3.\\n(Boost to Nebulas: ${level < 3 ? `${format(level < 1 ? 1 : effectsCache.S2Upgrade3 * (level > 1 ? effectsCache.S2Upgrade4 ** 0.5 : 1), { padding: true })} \u27F6 ` : ''}${format(effectsCache.S2Upgrade3 * (level < 1 ? 1 : effectsCache.S2Upgrade4 ** (level > 1 ? 1 : 0.5)), { padding: true })})`;\n                }\n            ],\n            cost: [],\n            firstCost: [1e18, 1e12, 1e26, 1e14, 1e60],\n            scaling: [1e8, 1e3, 1, 1e8, 1e8],\n            max: [1, 3, 1, 3, 3],\n            maxActive: 3\n        }, { //Stage 3\n            name: [\n                'Rank boost',\n                'Efficient growth',\n                'Weight',\n                'Viscosity',\n                'Efficient submersion',\n                'Ablative armor'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by another ${format(1.11)} per level. Max level is based on current Rank.\\n(Total increase: ${format(1.11 ** player.researchesExtra[3][0], { padding: true })})`,\n                () => { //[1]\n                    const base = calculateEffects.S3Extra1();\n                    return `${player.inflation.vacuum ? 'Preons hardcap delay' : 'Mass production'} from Cosmic dust will be even bigger, current formula is ${format(base)} ^ current Rank.\\n(Total boost: ${format(base ** global.accretionInfo.effective, { padding: true })} \u27F6 ${format(calculateEffects.S3Extra1(player.researchesExtra[3][1] + 1) ** global.accretionInfo.effective, { padding: true })})`;\n                },\n                () => \"'Gravitational field' will be able to boost Protoplanets, but at reduced strength. (2x boost)\",\n                () => `'Gas' will be ${format(calculateEffects.S3Upgrade1(calculateEffects.S3Upgrade1_power(player.researchesExtra[3][3] + 1)) / calculateEffects.S3Upgrade1(), { padding: true })} times stronger with every level.`,\n                () => `Submerge quicker by boosting Puddles, improved by current Rank.\\n(Current boost: ${format(calculateEffects.S3Extra4(), { padding: true })} \u27F6 ${format(calculateEffects.S3Extra4(player.researchesExtra[3][4] + 1), { padding: true })})`,\n                () => `Protect your Mass from being removed by removing Cosmic dust hardcap instead.\\nSecond level will redirect delay to the hardcap as a boost to Cosmic dust that ignores softcap.\\n(Current hardcap delay is ${format(calculateEffects.dustDelay(), { padding: true })})`\n            ],\n            cost: [],\n            firstCost: [1e-18, 1e-7, 1e26, 1e9, 1e-10, 1.98847e40],\n            scaling: [10, 100, 1, 1e5, 1e12, 5.024e59],\n            max: [14, 6, 1, 5, 1, 2],\n            maxActive: 4\n        }, { //Stage 4\n            name: [\n                'Nova',\n                'Mass transfer',\n                'White dwarfs',\n                'Quark-nova'\n            ],\n            effectText: [\n                () => `This violent stellar explosion is the main source of Elements, but also starts the formation of new Stars.\\nUnlock a new Star type and even more, after Collapse of that Star type.\\n(Will require at least ${format(global.collapseInfo.unlockB[Math.min(player.researchesExtra[4][0] + 2, 4)])} Solar mass to create that new Star type)`,\n                () => `Star material will transfer from one Star to another, improving Solar mass gain${player.inflation.vacuum ? ' (also delaying Preons hardcap)' : ''} by ${format(calculateEffects.S4Extra1())} in the process.\\nImproved by 'Star system' levels, but also improves their scaling (effect increase for 'Star system' is ${format(new Overlimit(calculateEffects.S4Research1(undefined, 1) / calculateEffects.S4Research1(undefined, 0)).power(global.collapseInfo.trueStars), { padding: true })}).`,\n                () => `After matter were dispeled from Red giant, White dwarf was all that remained.\\nImprove effect of '[6] Carbon' by +${format(0.5)} and increase max level of 'Star system' by +1.`,\n                () => \"As Neutron stars spin down, some of them may get converted into Quark stars.\\nThis will add a new effect to Neutron stars \u2012 all Stars are cheaper, and will also increase max level of 'Star system' by +1.\"\n            ],\n            cost: [],\n            firstCost: [4e4, 2e9, 1e50, 1e136],\n            scaling: [1e10, 1, 1, 1],\n            max: [3, 1, 1, 1],\n            maxActive: 3\n        }, { //Stage 5\n            name: [\n                'Hypercompact stellar system',\n                'Interacting Galaxies',\n                'Central dominant Galaxy',\n                'More Merges',\n                'Compact Group',\n                'Interacting Groups'\n            ],\n            effectText: [\n                () => `Super dense core which will allow creation of a new Structure. That Structure will increase Stage reset reward${player.inflation.vacuum ? ', starting Energy after any Reset' : ''}, boost Nebulas and Star clusters. But creating it will fully reset ${player.inflation.vacuum ? 'all' : 'Interstellar and Intergalactic'} Stages.\\nThis Research also removes Solar mass and other Remnant requirements from everything in the Interstellar Stage.`,\n                () => `Unlock a new Result for the Merge resets, if to reset with enough self-made Galaxies.${global.researchesExtraInfo[5].max[1] > 1 ? '\\nSecond level will allow the use of the excess Galaxies from previous Merge resets when forming new Galaxy groups.' : ''}`,\n                () => { //[2]\n                    const maxLevel = player.researchesExtra[5][2] + player.merge.rewards[1];\n                    const trueLevel = global.mergeInfo.S5Extra2;\n                    return `An even bigger Galaxy to improve Stage reset reward and Galaxy groups effect with every Galaxy group.\\nEffective level is ${format(trueLevel, { padding: trueLevel !== maxLevel })}, will be ${trueLevel !== maxLevel ? \"restored with more Stardust, this doesn't\" : \"set to 0 after any reset, this won't\"} affect Stage reset reward.\\n(Total boost: ${format(calculateEffects.S5Extra2(trueLevel), { padding: true })} \u27F6 ${format(calculateEffects.S5Extra2(maxLevel + (maxLevel === trueLevel ? 1 : 0)), { padding: true })})`;\n                },\n                () => 'Increase max allowed Merge resets by +1 per level.',\n                () => `Decrease amount of Galaxies required for the creation of a Galaxy Group.\\n(Effect: ${calculateEffects.S5Extra4()} \u27F6 ${calculateEffects.S5Extra4(player.researchesExtra[5][4] + 1)}, effect increase per level decreases with more level)`,\n                () => 'Unlock the second Merge result.'\n            ],\n            cost: [],\n            firstCost: [1e80, 1e260, '1e320', '1e350', '1e560', '1e660'] as unknown as Overlimit,\n            scaling: [1, 1e150, 1e30, 1e210, 1e90, 1],\n            max: [1, 1, 2, 1, 1, 1],\n            maxActive: 1\n        }, { //Stage 6\n            name: [\n                'Acceleration',\n                'Expansion',\n                'Composition',\n                'Quintessence'\n            ],\n            effectText: [\n                () => `Boost global speed by ${format(1.2)}.\\nAlso increases max level of 'Faster aggregation' by +1.`,\n                () => `Delay Dark matter hardcap by current Dark energy ^(${format(0.5)} * level).`,\n                () => 'Have more Dark energy by increasing its gain by 1 + level.',\n                () => `Change the ratio of kinetic and potential Dark energy.\\nThis will make Dark matter hardcap ^(${format(0.125)} * level) to buff the Universes and to be based on 20 seconds worth of Dark matter production.`\n            ],\n            cost: [],\n            firstCost: [20, 40, 100, 200],\n            scaling: [20, 40, 200, 200],\n            max: [4, 2, 3, 4],\n            maxActive: 0\n        }\n    ],\n    researchesAutoInfo: {\n        name: [\n            'Upgrade automatization',\n            'Element automatization',\n            'Reset automatization'\n        ],\n        effectText: [\n            () => `Automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.researchesAuto[0], 2)]} from any Stage.`,\n            () => 'Elements will no longer require Collapse for activation.\\nSecond level will unlock auto creation of Elements.',\n            () => { //[2]\n                const index = player.researchesAuto[2] >= 4 ? 4 : Math.min(player.inflation.vacuum ? player.researchesAuto[2] : player.stage.current - 1, 3);\n                return `Unlock auto ${['Discharge', 'Vaporization', 'Rank', 'Collapse', 'Merge'][player.inflation.vacuum ? (index === 1 ? 2 : index === 2 ? 1 : index) : index]} level 1.${player.inflation.vacuum ? '\\nCost will decrease by -1 level per related level 1 Strangeness.' : ''}`;\n            }\n        ],\n        costRange: [\n            [1e13, 2e34, 1e30],\n            [136000, 272000],\n            [1200, 2400, 4800, 8400, 13200]\n        ],\n        autoStage: [\n            [2, 3, 4],\n            [1, 1],\n            [6, 6, 6, 6, 6]\n        ],\n        max: [3, 2, 1]\n    },\n    ASRInfo: {\n        name: 'Auto Structures',\n        effectText: () => {\n            const stageIndex = player.stage.active;\n            const index = Math.min(player.ASR[stageIndex] + 1, Math.max(global.ASRInfo.max[stageIndex], 1));\n            let unlocked = true;\n            if (player.stage.true < 6) {\n                if (stageIndex === 3 && player.stage.resets < 5) {\n                    if (index === 2) {\n                        unlocked = player.upgrades[3][2] === 1 || player.buildings[3][2].trueTotal.moreThan('0');\n                    } else if (index === 3) {\n                        unlocked = player.upgrades[3][4] === 1 || player.buildings[3][3].trueTotal.moreThan('0');\n                    }\n                } else if (stageIndex === 5) {\n                    if (index === 1) {\n                        unlocked = player.milestones[2][0] >= 7;\n                    } else if (index === 2) {\n                        unlocked = player.milestones[3][0] >= 7;\n                    } else if (index === 3) {\n                        unlocked = player.milestones[4][1] >= 8;\n                    }\n                }\n            } else if (player.stage.true < 7) {\n                if (player.stage.resets < 2 && index === 5) {\n                    if (stageIndex === 3) {\n                        unlocked = player.upgrades[3][11] === 1 || player.buildings[3][5].trueTotal.moreThan('0');\n                    } else if (stageIndex === 4) {\n                        unlocked = player.elements[26] >= 1;\n                    }\n                }\n            } else if (player.stage.true < 8) {\n                if (stageIndex === 6) {\n                    unlocked = index === 1 && (player.upgrades[6][0] === 1 || player.researches[6][0] >= 8);\n                }\n            }\n            return `Automatically make ${unlocked ? global.buildingsInfo.name[stageIndex][index] : '(Not unlocked)'} (counts as self-made).\\n(Auto ${stageIndex === 5 && index === 3 ? \"for this Structure doesn't wait and ignores related settings\" : `will wait until ${format(player.toggles.shop.wait[stageIndex])} times of the Structure cost`})`;\n        },\n        costRange: [\n            [],\n            [2000, 8000, 16000, 32000, 56000],\n            [1e10, 1e14, 1e18, 1e23, 1e28, 1e30],\n            [1e-7, 1e10, 5e29, 2e30, 2e36],\n            [1e6, 1e17, 1e28, 1e39, 1e52],\n            [1e56, 1e60, 1e100],\n            [1e18]\n        ],\n        max: [0, 3, 5, 4, 4, 3, 0]\n    },\n    elementsInfo: {\n        name: [\n            '[0] Neutronium',\n            '[1] Hydrogen',\n            '[2] Helium',\n            '[3] Lithium',\n            '[4] Beryllium',\n            '[5] Boron',\n            '[6] Carbon',\n            '[7] Nitrogen',\n            '[8] Oxygen',\n            '[9] Fluorine',\n            '[10] Neon',\n            '[11] Sodium',\n            '[12] Magnesium',\n            '[13] Aluminium',\n            '[14] Silicon',\n            '[15] Phosphorus',\n            '[16] Sulfur',\n            '[17] Chlorine',\n            '[18] Argon',\n            '[19] Potassium',\n            '[20] Calcium',\n            '[21] Scandium',\n            '[22] Titanium',\n            '[23] Vanadium',\n            '[24] Chromium',\n            '[25] Manganese',\n            '[26] Iron',\n            '[27] Cobalt',\n            '[28] Nickel',\n            '[29] Copper',\n            '[30] Zinc',\n            '[31] Gallium',\n            '[32] Germanium',\n            '[33] Arsenic',\n            '[34] Selenium',\n            '[35] Bromine',\n            '[36] Krypton'\n        ],\n        effectText: [\n            () => `Element with no protons, true head of this table.\\nThis one is ${Math.random() < 0.1 ? (Math.random() < 0.1 ? 'an illusive Tetraneutron, or maybe even Pentaneutron. Wait where did it go? Was it even there?' : 'a rare Dineutron, but it is already gone...') : 'a simple Mononeutron, it will stay with you for as long as it can.'}`,\n            () => `The most basic Element, increases Brown dwarfs${player.inflation.vacuum ? ' and Puddles' : ''} production by 2.`,\n            () => `Fusion reaction byproduct, makes Interstellar Stars cost scale -${format(0.1)} less.`,\n            () => `First metal, Solar mass gain${player.inflation.vacuum ? ' and hardcap delay for Cosmic dust' : ''} per Brown dwarf will be lightly increased.`,\n            () => `Brittle earth metal and so is the brittle increase to the production.\\n(${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''})`,\n            () => `A new color, and a new boost to the Solar mass gain${player.inflation.vacuum ? ' and delay to the Cosmic dust hardcap' : ''} that is based on current Brown dwarfs.`,\n            () => `Base for organics, it will increase the boost from Red giants by ^${format(calculateEffects.element6())}.`,\n            () => \"The most abundant Element in the atmosphere of some Planets, it allows for 2 more levels of 'Star system'.\",\n            () => `An oxidizing agent that will make Interstellar Stars cost scale even slower. (-${format(0.05)} less)`,\n            () => \"Highly toxic and reactive, +12 to max level of 'Planetary system'.\",\n            () => `A noble 2x boost to the Solar mass gain${player.inflation.vacuum ? ' and delay to the Preons hardcap' : ''}.`,\n            () => \"Through leaching will get 1 extra level of 'Protoplanetary disk'.\",\n            () => 'Stars are inside you, as well Neutron stars strength will be increased by log4.',\n            () => 'Has a great affinity towards Oxygen and to decrease cost of all Stars by 100.',\n            () => `Just another tetravalent metalloid, and so is another ${format(1.4)}x boost to all Stars${player.inflation.vacuum ? ' and Cosmic dust' : ''}.`,\n            () => `One of the Fundamentals for Life and to make all Stars boost Solar mass gain${player.inflation.vacuum ? ' and delay Cosmic dust hardcap' : ''}.`,\n            () => \"A burning rock that will increase max level of 'Star system' by 1.\",\n            () => \"Extremely reactive to extend max level of 'Planetary system' by another 24 levels.\",\n            () => 'Less noble, but Black holes effect will be a little stronger.',\n            () => \"Don't forget about it and will get 1 free level of 'Planetary system'.\\n(It will also make Solar mass effect apply twice to Brown dwarfs)\",\n            () => \"Get stronger with 1 extra level of 'Star system'.\",\n            () => `A new color and a rare bonus of ^${format(1.1)} to the Solar mass effect.`,\n            () => 'Part of a new alloy that will allow for Red giants to be added into an effective amount of Neutron stars.',\n            () => `Catalyst for production of Stardust. 'Gamma-ray burst' effect will be increased by Solar mass ^${format(0.1)}.\\n(Effect increase: ${format(player.collapse.mass ** 0.1, { padding: true })})`,\n            () => `No corrosion, only boost to all Stars that is based on unspent Stardust ^${format(calculateEffects.element24_power())}.\\n(Boost to Stars: ${format(calculateEffects.element24(), { padding: true })})`,\n            () => \"Brittle Element, but not the bonus \u2012 1 more level in 'Star system'.\",\n            () => `Any further fusion will be an endothermic process. ${player.inflation.vacuum ? `Unlock a new Star type${player.strangeness[5][3] >= 1 ? ' and Intergalactic Stage' : ''}` : 'Enter Intergalactic space'}.\\n${player.stage.true >= 6 || player.strange[0].total >= 1 ? `Current base increase for Stage reset reward is +${format(effectsCache.element26, { padding: true })}, which is equal to log10(Stardust produced this Stage) - 48.${player.elements[29] >= 1 ? \"\\n(Formula doesn't show improvement from '[29] Copper', but base increase does)\" : ''}` : '(Can change active Stage from footer, new effect will be added after another Stage reset)'}`,\n            () => `Combined and ready to make all self-made Red supergiants count as Red giants and improve '[24] Chromium' Element by +^${format(0.01)}.`,\n            () => \"Slow to react, but will increase max level of 'Star system' by +1.\",\n            () => `Does not need to be prepared to increase Stage reset reward base by Arithmetic progression with step of ${format(0.01)}.`,\n            () => `First of new Elements to come, increases max allowed Merge resets by +1 for every new Element past '[29] Copper'.\\n(Currently highest created Element in the current Stage reset is '${global.elementsInfo.name[player.collapse.maxElement]}', equals to +${Math.max(player.collapse.maxElement - 29, 0)} allowed Merges)`,\n            () => \"Will melt in the palm of your hand to increase max level of 'Star system' by +1.\",\n            () => `Too late to appear, but it will make all Galaxies cost scale slower by ${format(-0.01)} anyway.`,\n            () => 'Toxic enough to buff only Quasi-stars with Black holes effect.',\n            () => \"Capable of sensing an +1 increase to the max level of 'Star system'.\",\n            () => \"The only liquid nonmetal to increase the max level of 'Inner Black hole' by +1.\",\n            () => 'Nothing special, just an Xx decrease to Galaxies cost.'\n        ],\n        cost: [ //New Element cost must be higher than previous one\n            0, 1000, 4000, 2e4, 1e5, 1e8, 1e10, 4e11, 8e12, 6e13,\n            1e15, 1e20, 1e22, 1e24, 1.4e26, 1e28, 1e30, 1e32, 2e36, 1e38,\n            1e39, 1e41, 2e42, 3e43, 4e44, 5e45, 1e48, 1e54, 1e58, 1e140,\n            1e220, 1e240, 1e260, '1e380', '1e520', '1e600', '1e9000'\n        ] as unknown as Overlimit[]\n    },\n    strangenessInfo: [\n        {} as globalType['strangenessInfo'][0], { //Stage 1\n            name: [\n                'Fundamental boost',\n                'Better improvement',\n                'Cheaper Discharge',\n                'Free Discharge',\n                'Automatic Discharge',\n                'Auto Structures',\n                'Strange boost',\n                'Energy increase',\n                'Conservation of Mass',\n                'Conservation of Energy'\n            ],\n            effectText: [\n                () => `Boost all Microworld Structures by ${format(player.inflation.vacuum ? 2 : 1.8)}.`,\n                () => `Base for 'Improved Tritium' Research will be bigger by +${format(player.inflation.vacuum ? 1.5 : 1)}.\\n(Boost from it at current Research level is ${format((calculateEffects.S1Research2(player.strangeness[1][1] + 1) / calculateEffects.S1Research2()) ** player.researches[1][2], { padding: true })})`,\n                () => `Discharge goals requirement will scale slower. (-${format(0.5)})\\n(Creating this Strangeness will make next Discharge goal to be ${format(calculateEffects.dischargeCost(calculateEffects.dischargeScaling(undefined, player.strangeness[1][2] + 1)))} Energy)`,\n                () => `Obtain +${format(0.5)} bonus Discharge goals.`,\n                () => `Automatically Discharge upon reaching next goal or spending Energy. (Needs to be enabled in Settings)${global.strangenessInfo[1].max[4] > 1 ? '\\nSecond level will make Discharge goals to be based on true Energy and without needing to reset.' : ''}`,\n                () => 'Make auto for all Microworld Structures permanent.',\n                () => `Unspent Strange quarks will boost Microworld by improving its Structures.\\n(Formula: Strange quarks ^${format(player.inflation.vacuum ? 0.26 : 0.22)} | Effect: ${format(global.strangeInfo.stageBoost[1], { padding: true })})`,\n                () => 'Increase Energy gain from creating Preons by +2.',\n                () => { //[8]\n                    const improved = player.challenges.supervoid[1] >= 2;\n                    return `No Mass will be lost when creating Preons${improved ? '' : ', only works when Accretion Stage is unlocked'}.\\nSecond level will disable auto Accretion Structures, if Cosmic dust is hardcapped, until will have enough Mass for the highest Solar mass conversion${improved ? \" or to increase current Rank, if its below 'Protostar' and 'Automatic Rank' level is below 2\" : ', only works if Interstellar Stage is unlocked'}.${global.strangenessInfo[1].max[8] > 2 ? '\\nThird level will make auto Structures ignore wait value for Dark Structures if Dark matter is hardcapped.' : ''}`;\n                },\n                () => `No Energy will be lost when creating Upgrades or Researches${player.challenges.supervoid[4] < 1 ? ', only works when Interstellar Stage is unlocked' : ''}.`\n            ],\n            cost: [],\n            firstCost: [1, 1, 1, 2, 12, 2, 24, 2, 12, 15600],\n            scaling: [2.46, 2, 6, 4, 400, 1, 1, 6, 10, 1],\n            max: [6, 4, 4, 2, 1, 1, 1, 2, 2, 1],\n            maxActive: 7\n        }, { //Stage 2\n            name: [\n                'More Moles',\n                'Bigger Puddles',\n                'More spread',\n                'Cloud density',\n                'Automatic Vaporization',\n                'Auto Structures',\n                'Strange boost',\n                'Improved flow',\n                'Mechanical spread',\n                'Ocean world'\n            ],\n            effectText: [\n                () => `Drops will ${player.inflation.vacuum ? 'improve Tritium' : 'produce'} 2 times more${player.inflation.vacuum ? '' : ' Moles'}.`,\n                () => `Puddles will produce ${format(player.inflation.vacuum ? 1.8 : 1.6)} times more Drops.`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[2][2] >= 1) { extraText = \"max level increased for 'More streams' (+1)\"; }\n                    if (player.strangeness[2][2] >= 2) { extraText += \" and 'Distributary channel' (+1)\"; }\n                    if (player.strangeness[2][2] >= 3) { extraText += \", a new Upgrade \u2012 'Tsunami'\"; }\n                    return `Increase max level for one of the Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Decrease amount of Drops required to get a Cloud by ${format(player.inflation.vacuum ? 2.5 : 2)}.`,\n                () => `Automatically Vaporize when reached enough boost from new Clouds. (Needs to be enabled in Settings)${global.strangenessInfo[2].max[4] > 1 ? `\\nSecond level will unlock an automatic ${format(2.5)}% gain of Clouds per second${player.tree[1][5] >= 1 ? ' or if its already unlocked, then increase gain by 4' : ''}.${player.stage.true >= 7 ? ' (Not affected by global speed)' : ''}` : ''}`,\n                () => 'Make auto for all Submerged Structures permanent.',\n                () => `Unspent Strange quarks will boost Submerged by improving Puddles.\\n(Formula: Strange quarks ^${format(player.inflation.vacuum ? 0.22 : 0.18)} | Effect: ${format(global.strangeInfo.stageBoost[2], { padding: true })})`,\n                () => `Submerged Structures that improve other Submerged Structures will do it ${format(1.24)} times stronger.\\n(Affected Structures are Ponds, Lakes, Seas and Oceans)`,\n                () => { //[8]\n                    let extraText = 'none';\n                    if (player.strangeness[2][8] >= 1) { extraText = \"max level increased for 'Stronger surface tension' (+3)\"; }\n                    if (player.strangeness[2][8] >= 2) { extraText += \" and 'Stronger surface stress' (+1)\"; }\n                    if (player.strangeness[2][8] >= 3) { extraText += \", a new Upgrade \u2012 'Tide'\"; }\n                    return `Increase max level for one of the Researches. Final level will instead unlock an even better new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => `Increase Stage reset reward based on current Cloud amount.\\n(Formula: log10(Clouds) / 80 + 1 | Effect: ${format(calculateEffects.S2Strange9(), { padding: true })}${global.strangenessInfo[2].max[9] > 1 ? ' ^level' : ''})`\n            ],\n            cost: [],\n            firstCost: [1, 1, 2, 2, 12, 4, 24, 18, 800, 9600],\n            scaling: [2.46, 2, 3, 4, 800, 1, 1, 3.4, 3, 1e14],\n            max: [4, 8, 3, 2, 1, 1, 1, 6, 3, 1],\n            maxActive: 7\n        }, { //Stage 3\n            name: [\n                'Faster Accretion',\n                'Intense weathering',\n                'More levels',\n                'Improved Satellites',\n                'Automatic Rank',\n                'Auto Structures',\n                'Upgrade automatization',\n                'Strange boost',\n                'Mass delay',\n                'Rank raise'\n            ],\n            effectText: [\n                () => `Increase strength of Cosmic dust by ${format(1.8)}.`,\n                () => `Accretion Structures that produce other Accretion Structures will do it ${format(player.inflation.vacuum ? 1.48 : 1.6)} times faster.\\n(Affected Structures are Planetesimals and Protoplanets)`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[3][2] >= 1) { extraText = \"max level increased for 'Rank boost' (+6)\"; }\n                    if (player.strangeness[3][2] >= 2) { extraText += \" and 'Efficient growth' (+2)\"; }\n                    if (player.strangeness[3][2] >= 3) { extraText += \", a new Upgrade \u2012 'Hydrostatic equilibrium'\"; }\n                    return `Increase max level for one of the Rank Researches. Final level will instead unlock a new Upgrade.\\n(Current effect: ${extraText})`;\n                },\n                () => { //[3]\n                    if (!global.stageInfo.activeAll.includes(3)) { assignBuildingsProduction.stage3Cache(); }\n                    return `Satellites will be able to improve remaining ${player.inflation.vacuum ? 'Accretion ' : ''} Structures, but at reduced strength (^${format(player.inflation.vacuum ? 0.1 : 0.2)}).\\n(Affected Structures are Cosmic dust and Planetesimals, boost is equal to ${format(effectsCache.S3Strange3, { padding: true })})`;\n                },\n                () => `Automatically increase Rank when possible. (Needs to be enabled in Settings)${global.strangenessInfo[3].max[4] > 1 ? '\\nSecond level will make Rank increase use Mass produced this reset instead of current.' : ''}`,\n                () => 'Make auto for all Accretion Structures permanent.',\n                () => `Always automatically create all ${['Upgrades', 'Stage Researches', 'Special Researches'][Math.min(player.strangeness[3][6], 2)]} from any Stage${player.strangeness[6][3] < 4 && player.strangeness[6][3] >= 1 ? ' before Abyss' : !player.inflation.vacuum && player.strangeness[5][3] < 1 && player.verses[0].current < 3 ? ' before Intergalactic' : ''}. (Needs to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Accretion by making its Structures cheaper.\\n(Formula: Strange quarks ^${format(player.inflation.vacuum ? 0.68 : 0.76)} | Effect: ${format(global.strangeInfo.stageBoost[3], { padding: true })})`,\n                () => `Delay Cosmic dust hardcap by ${format(1.4)} per level.`,\n                () => { //[9]\n                    const max2 = global.strangenessInfo[3].max[9] > 1;\n                    return `Unlock a new Accretion Rank to achieve.${player.stage.true >= 7 ? `${max2 ? ' ' : '\\n'}(Also increase max level of 'Reset automatization')` : ''}${max2 ? '\\nSecond level will remove the limit for new Ranks, but they will not unlock anything new.' : ''}`;\n                }\n            ],\n            cost: [],\n            firstCost: [1, 2, 2, 24, 12, 4, 4, 24, 18000, 2.16e6],\n            scaling: [2, 3.4, 3, 1, 100, 1, 1.74, 1, 2.46, 1e308],\n            max: [8, 4, 3, 1, 1, 1, 3, 1, 6, 1],\n            maxActive: 8\n        }, { //Stage 4\n            name: [\n                'Hotter Stars',\n                'Cheaper Stars',\n                'New Upgrade',\n                'Main giants',\n                'Automatic Collapse',\n                'Auto Structures',\n                'Element automatization',\n                'Strange boost',\n                'Neutronium',\n                'Newer Upgrade'\n            ],\n            effectText: [\n                () => `All Stars will produce ${format(1.6)} times more Stardust.`,\n                () => 'Stars will be 2 times cheaper.',\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[4][2] >= 1) { extraText = \"'Planetary nebula' (Stage Research)\"; }\n                    if (player.strangeness[4][2] >= 2) { extraText += \", 'White dwarfs' (Collapse Research)\"; }\n                    if (player.strangeness[4][2] >= 3) { extraText += \", 'Helium fusion' (Upgrade)\"; }\n                    return `Unlock a new Upgrade, its pretty good.\\n(Current unlocks: ${extraText})`;\n                },\n                () => '10% of Brown dwarfs will be able to turn into Red giants after Collapse.',\n                () => `Automatically Collapse once reached enough boost or Solar mass. (Needs to be enabled in Settings)${global.strangenessInfo[4].max[4] > 1 ? `\\nSecond level will unlock an automatic Star remnants${global.strangenessInfo[4].max[4] > 2 ? ' (and Solar mass with third level)' : ''} gain without needing to reset.` : ''}`,\n                () => 'Make auto for all Interstellar Structures permanent.',\n                () => `Elements will no longer require Collapse for activation${player.inflation.vacuum ? ' and related automatization Research will cost as if its level is -1' : ''}.\\nSecond level will unlock auto creation of Elements. (${global.strangenessInfo[4].max[6] > 1 ? 'Needs to be enabled in settings' : 'Not yet unlocked for Interstellar space'})`,\n                () => `Unspent Strange quarks will boost Interstellar by improving all Stars.\\n(Formula: Strange quarks ^(${format(0.16)} or ${format(0.32)}, if '[26] Iron' is created) | Effect: ${format(global.strangeInfo.stageBoost[4], { padding: true })})`,\n                () => `Increase effective amount of Neutron stars (doesn't include ones from '[22] Titanium') by 1 + level and improve Neutron stars strength by +^${format(0.125)}.`,\n                () => { //[9]\n                    let extraText = 'none';\n                    if (player.strangeness[4][9] >= 1) { extraText = \"'Nucleosynthesis' (Upgrade)\"; }\n                    if (player.strangeness[4][9] >= 2) { extraText += \", 'Quark-nova' (Collapse Research)\"; }\n                    if (player.strangeness[4][9] >= 3) { extraText += \", 'Inner Black hole' (Stage Research)\"; }\n                    return `Unlock yet another an even better new Upgrade.\\n(Current unlocks: ${extraText})`;\n                }\n            ],\n            cost: [],\n            firstCost: [1, 2, 4, 2, 12, 6, 6, 24, 12000, 2.4e5],\n            scaling: [2, 3.4, 3, 4, 1900, 1, 1.74, 1, 2, 3],\n            max: [8, 4, 3, 2, 1, 1, 1, 1, 8, 3],\n            maxActive: 8\n        }, { //Stage 5\n            name: [\n                'Bigger Structures',\n                'Higher density',\n                'Strange gain',\n                'Gravitational bound',\n                'Automatic Galaxy',\n                'Auto Structures',\n                'Automatic Stage',\n                'Strange boost',\n                'Strange growth',\n                'Automatic Merge',\n                'Galactic tide'\n            ],\n            effectText: [\n                () => `More matter for the Accretion (flavor text), first two Intergalactic Structures will be ${format(player.inflation.vacuum ? 1.4 : 1.6)} times stronger.`,\n                () => `With higher density, first two Intergalactic upgrades will be even stronger. Effects will be increased by ${format(player.inflation.vacuum ? 1.6 : 1.8)}.`,\n                () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset.`,\n                () => player.inflation.vacuum ? `Unlock Intergalactic Stage and increase Strange quarks from Stage resets by +1.${player.challenges.active === 0 && player.challenges.super && player.tree[1][6] >= 4 ? \"\\n(Also increase 'Rank raise' Strangeness level to 1 for free)\" : ''}` : `Make Intergalactic Stage immune to Collapse reset${player.verses[0].current < 3 ? \" and allow 'Upgrade automatization' to work within the Intergalactic Stage\" : ''}.`,\n                () => 'Automatically Collapse if able to afford a new Galaxy and auto Galaxy is enabled.\\n(Also unlocks permanent auto Galaxies for free and removes Mass limit for auto Collapse points)',\n                () => `Make auto for ${player.strangeness[5][4] >= 1 ? 'all' : 'the first two'} Intergalactic Structures permanent${player.strangeness[5][4] < 1 ? ' and prevent the rest from resetting' : ''}.`,\n                () => `Automatically trigger Stage reset${player.inflation.vacuum ? ' or leave current Challenge if time limit is reached, auto disabled while inside the Void' : `, doesn't work for the Interstellar Stage${player.stage.true >= 7 ? ' and Challenges' : ''} until second level`}. (Needs to be enabled in Settings)`,\n                () => `Unspent Strange quarks will boost Intergalactic by increasing Solar mass gain.\\n(Formula: Strange quarks ^${format(0.06)} | Effect: ${format(global.strangeInfo.stageBoost[5], { padding: true })})`,\n                () => 'Unlock another Strange Structure.\\n(Click on that Structure to see its effects)',\n                () => `Automatically Merge Galaxies ${player.inflation.vacuum ? \"if can't get any more of them quickly\" : 'as soon as its possible'}. (Needs to be enabled in Settings)`,\n                () => { //[10]\n                    let passive = 'none';\n                    let upgrades = 'none';\n                    if (player.strangeness[5][10] >= 1) {\n                        passive = `increase Energy gain from Galaxies by 5, decrease Discharge goal requirement by ${format(calculateEffects.S5Strange9_stage1(), { padding: 'exponent' })}`;\n                        upgrades = \"'Nuclear fission' (Microworld Upgrade), 'Radioactive decay' (Energy Research)\";\n                    }\n                    if (player.strangeness[5][10] >= 2) {\n                        passive += `, boost Puddles ${player.strangeness[5][10] >= 3 ? 'and Cosmic dust strength ' : ''}by ${format(calculateEffects.S5Strange9_stage2(), { padding: 'exponent' })}`;\n                        upgrades += `${player.tree[1][5] >= 3 ? \", 'Megatsunami' (Submerged Research)\" : ''}, 'Jeans Mass' (Clouds Research)`;\n                    }\n                    if (player.strangeness[5][10] >= 3) {\n                        passive += `, delay Cosmic dust hardcap by ${format(calculateEffects.S5Strange9_stage3(), { padding: true })}`;\n                        upgrades += \", 'Self-gravity' (Accretion Upgrade), 'Ablative armor' (Rank Research)\";\n                    }\n                    return `Boost lower Stages based on current Galaxies and unlock new Upgrades for them.\\n(Passive effects: ${passive})\\n(New Upgrades: ${upgrades})`;\n                }\n            ],\n            cost: [],\n            firstCost: [24, 36, 4, 24, 15600, 24, 480, 120, 6000, 6e6, 1.2e7],\n            scaling: [2, 2, 4, 1, 1, 1, 1, 1, 1e308, 1, 3],\n            max: [8, 8, 2, 1, 1, 1, 1, 1, 1, 1, 3],\n            maxActive: 8\n        }, { //Stage 6\n            name: [\n                'Global boost',\n                'Stranger gain',\n                'More Strangeness',\n                'Darkness',\n                'Strange boost',\n                'Stranger boost'\n            ],\n            effectText: [\n                () => `Boost global speed by ${format(1.4)}.`,\n                () => `Gain ${format(1.4)} times more Strangelets from the Stage resets.`,\n                () => { //[2]\n                    let extraText = 'none';\n                    if (player.strangeness[6][2] >= 1) { extraText = \"'Automatic Collapse' (+1)\"; }\n                    if (player.strangeness[6][2] >= 2) { extraText += \", 'Hotter Stars' (+4)\"; }\n                    if (player.strangeness[6][2] >= 3) { extraText += \", 'Conservation of Mass' (+1)\"; }\n                    if (player.strangeness[6][2] >= 4) { extraText += \", 'Main giants' (+4)\"; }\n                    return `Increase max level for the Strangeness or unlock new one.\\n(Current unlocks: ${extraText})`;\n                },\n                () => { //[3]\n                    let extraText = 'none';\n                    if (player.strangeness[6][3] >= 2) { extraText = 'Keep Auto Structures'; }\n                    if (player.strangeness[6][3] >= 3) { extraText += `, Auto Upgrades and ${player.strangeness[6][3] >= 4 ? 'all' : 'Stage'} Researches`; }\n                    if (player.strangeness[6][3] >= 5) { extraText += ', Auto Nucleation (WIP)'; }\n                    return `Unlock Dark matter Upgrades. (And disable basic hotkeys for Universes)\\nFurther levels unlock more automatizations for Dark matter.\\n(Unlocked automatization: ${extraText})`;\n                },\n                () => 'Unspent Strange quarks will boost Dark matter gain. (WIP)',\n                () => 'Strangelets will boost global speed. (WIP)'\n            ],\n            cost: [],\n            firstCost: [2.4e17, 1.6e17, 8e16, 5e15, Infinity, Infinity],\n            scaling: [3, 3, 4, 32, 1, 1],\n            max: [8, 8, 4, 4, 1, 1],\n            maxActive: 0\n        }\n    ],\n    treeInfo: [{ //Inflatons\n        name: [\n            'Overboost',\n            'Global boost',\n            'Strange gain',\n            'Instability',\n            'Void Milestones',\n            'Improved Offline'\n        ],\n        effectText: [\n            () => `Boost global speed by 2${player.tree[1][2] < 1 ? `, but reduce time limit on everything that has it by 4, if level is below 2.\\nIf there is no time limit, then 2nd level will instead boost global speed by ${format(calculateEffects.T0Inflation0(), { padding: true })} (strength depletes over 1 hour of the Stage time)` : ''}.`,\n            () => { //[1]\n                const effect = calculateEffects.T0Inflation1();\n                return `Boost global speed by unspent Dark matter ^${format((effect > 1 ? logAny(effect, player.buildings[6][0].current.toNumber() + 1) : 0.04) * player.tree[0][1], { padding: true })}.\\n(Boost per level: ${format(effect, { padding: true })}, softcaps after ${format(1e8)} Dark matter)`;\n            },\n            () => `Gain ${format(1.4)} times more Strange quarks from any Stage reset per level.${player.tree[0][3] >= 1 ? `\\nFirst ${player.tree[0][3] * 2} levels will also boost global speed by ${format(1.2)}, but only while inside any Void.` : ''}`,\n            () => `Boost global speed and Stage reset reward by ${format(calculateEffects.T0Inflation3())}, strength is based on Supervoid progress in the current Universe.\\nEvery level will also improve 2 levels of 'Strange gain' Inflation to boost global speed while inside any Void.`,\n            () => 'For false Vacuum it will remove time limit from Milestones.\\nFor true Vacuum it will unlock Void Milestones. Their effects are active, only when this Inflation is active.',\n            () => {\n                const level = player.tree[0][5];\n                return `Allow for Export storage to be increased by ${(2 + 2 * level) * level}%${level < 4 ? ` \u27F6 ${(4 + 2 * level) * (level + 1)}%` : ''} of the Stage reset value and to claim entire storage at once, but without bonus +1 to the Strange quarks base. Also increases Export time gain by ${format(calculateEffects.T0Inflation5(), { padding: level < 4 })}${level < 4 ? ` \u27F6 ${format(calculateEffects.T0Inflation5(level + 1), { padding: true })}` : ''}, if inside any Challenge, then its further increased by 4.\\nIf inside any Challenge, then it will also boost global speed by ${format(6 / (6 - level))}${level < 4 ? ` \u27F6 ${format(6 / (5 - level))}` : ''}, but decrease the time limit for the Challenges by the same amount.`;\n            }\n        ],\n        cost: [],\n        firstCost: [0, 1, 1, 2, 4, 1],\n        scaling: [2, 0.75, 0.5, 2, 0, 1],\n        max: [2, 6, 8, 4, 1, 4]\n    }, { //Cosmon\n        name: [\n            'More speed',\n            'More Strange quarks',\n            'Stability',\n            'Stranger gain',\n            'Discharge improvement',\n            'Vaporization improvement',\n            'Rank improvement',\n            'Conservation of Resources'\n        ],\n        effectText: [\n            () => `Boost global speed again by ${format(1.4)}.`,\n            () => `Boost Strange quarks gain from the Stage resets again by ${format(1.2)}.`,\n            () => \"First level removes all negative effects and time limit from 'Overboost' Inflation.\\nFurther levels will instead increase its max level by +1.\",\n            () => `Boost Strangelets gain from the Stage resets by ${format(1.4)} and increase max level of 'Strange gain' Inflation by +1.`,\n            () => `True Vacuum only, gain +1 free Goals and decrease requirement scaling by -${format(0.5)} with every level.\\nAlso improve Discharge base by +${format(0.5)} (before the softcap), but only inside any Void.`,\n            () => \"True Vacuum only, make 'Natural Vaporization' Clouds Research old effect permanent and replace it with auto Vaporization level 2 (it itself will now increase strength by 4), second level will increase its max level by +3 and remove the 'no Rank resets' condition from the Void rewards.\\nThird level will unlock a new Research for 'Galactic tide' Strangeness, final level will increase max level of 'Ocean world' Strangeness by +1.\\nAlso decrease required Drops for a Cloud by 8 per level if inside any Void.\",\n            () => `True Vacuum only, make effective Rank boost even more: (All effects are per Rank)\\n+${format(0.5)} Discharge goals at level 1, +1 extra level of 'Planetary system' Interstellar Research at level 2 and ${format(1.01)}x to the Solar mass gain at level 3.\\nFinal level will instead increase max level of 'Rank raise' Strangeness by +1 (WIP) and make the first level free inside Supervoid if got 'Gravitational bound' Strangeness.\\nAlso increase effective Rank by +1 per level if inside any Void.`,\n            () => { //[7]\n                const level = Math.min(player.tree[1][7] + 1, 4);\n                return `Keep more of ${global.stageInfo.word[level]}${level === 4 ? ' and Intergalactic' : ''} Resources by making all of its Structures${level === 4 ? \"(doesn't include Galaxies)\" : ''} not spend them on creation.`;\n            }\n        ],\n        cost: [],\n        firstCost: [1, 1, 2, 2, 0, 1, 1, 2],\n        scaling: [1, 1, 2, 2, 1, 1.4, 1.5, 1.4],\n        max: [9, 9, 3, 4, 4, 4, 4, 4]\n    }],\n    milestonesInfo: [\n        {} as globalType['milestonesInfo'][0], { //Stage 1\n            name: [\n                'Fundamental Matter',\n                'Energized'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[1].need[0])} ${player.inflation.vacuum ? 'Preons' : 'Quarks'} this reset.`,\n                () => `Have current Energy reach ${format(global.milestonesInfo[1].need[1])}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Microworld Structures strength increased by ${format(global.milestonesInfo[1].reward[0], { padding: true })}.` : 'Increase base for Strange quarks from any Stage reset by +1.',\n                () => player.inflation.vacuum ? `Effective Energy increased by ${format(global.milestonesInfo[1].reward[1], { padding: true })}.` : 'Permanent Microworld Stage.'\n            ],\n            need: [],\n            reward: [0, 0],\n            scaling: [\n                [1e152, 1e158, 1e164, 1e170, 1e178, 1e190],\n                [23800, 24600, 25800, 27000, 28200, 29600]\n            ]\n        }, { //Stage 2\n            name: [\n                'A Nebula of Drops',\n                'Just a bigger Puddle'\n            ],\n            needText: [\n                () => `${player.inflation.vacuum ? 'Vaporize to' : 'Produce'} at least ${format(global.milestonesInfo[2].need[0])} ${player.inflation.vacuum ? 'Clouds' : 'Drops this reset'}.`,\n                () => `${player.inflation.vacuum ? 'Produce' : 'Have'} at least ${format(global.milestonesInfo[2].need[1])} ${player.inflation.vacuum ? 'Drops this reset' : 'Puddles at the same time'}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Decrease Drops requirement to get a Cloud by ${format(global.milestonesInfo[2].reward[0], { padding: true })}.` : 'First Intergalactic Structure. (Nebula)',\n                () => player.inflation.vacuum ? `Puddles strength increased by ${format(global.milestonesInfo[2].reward[1], { padding: true })}.` : 'Permanent Submerged Stage.'\n            ],\n            need: [],\n            reward: [0, 0],\n            scaling: [\n                [1e30, 1e32, 1e34, 1e36, 1e38, 1e40, 1e44],\n                [1500, 2300, 3100, 3900, 4700, 5500, 6400]\n            ]\n        }, { //Stage 3\n            name: [\n                'Cluster of Mass',\n                'Satellites of Satellites'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[3].need[0])} Mass this reset.`,\n                () => `Have more or equal to ${format(global.milestonesInfo[3].need[1])} Satellites${player.inflation.vacuum ? ' and Subsatellites' : ''}.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `Cosmic dust strength increased by ${format(global.milestonesInfo[3].reward[0], { padding: true })}.` : 'Second Intergalactic Structure. (Star cluster)',\n                () => player.inflation.vacuum ? `Increase effective Rank by +${format(global.milestonesInfo[3].reward[1])}.` : 'Permanent Accretion Stage.'\n            ],\n            need: [],\n            reward: [0, 0],\n            scaling: [\n                [1e32, 1e34, 1e36, 1e38, 1e40, 1e42, 1e45],\n                [24, 28, 32, 36, 40, 44, 50]\n            ]\n        }, { //Stage 4\n            name: [\n                'Remnants of past',\n                'Supermassive'\n            ],\n            needText: [\n                () => `Produce at least ${format(global.milestonesInfo[4].need[0])} Stardust this reset.`,\n                () => `Have ${player.inflation.vacuum ? 'current Black holes' : 'Solar mass after Collapse'} reach ${format(global.milestonesInfo[4].need[1])} or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `All Stars strength increased by ${format(global.milestonesInfo[4].reward[0], { padding: true })}.` : \"New Intergalactic themed Strangeness, Milestone and second level of 'Element automatization'.\",\n                () => player.inflation.vacuum ? `Black holes effect increased by ${format(global.milestonesInfo[4].reward[1], { padding: true })}.` : 'Research to make third Intergalactic Structure and the final Milestone. (Galaxy)'\n            ],\n            need: [],\n            reward: [0, 0],\n            scaling: [\n                [1e48, 1e49, 1e50, 1e52, 1e54, 1e56, 1e58, 1e60],\n                [9000, 12000, 16000, 22000, 30000, 42000, 60000, 84000]\n            ]\n        }, { //Stage 5\n            name: [\n                'Light in the dark',\n                'End of Greatness'\n            ],\n            needText: [\n                () => `Have ${player.inflation.vacuum ? 'total produced' : 'self-made'} Stars ${player.inflation.vacuum ? 'this reset' : 'count'} reach at least ${format(global.milestonesInfo[5].need[0])}.`,\n                () => `Have ${format(global.milestonesInfo[5].need[1])} ${player.inflation.vacuum ? 'self-made ' : ''}Galaxies or more.`\n            ],\n            rewardText: [\n                () => player.inflation.vacuum ? `First two Intergalactic Structures strength increased by ${format(global.milestonesInfo[5].reward[0], { padding: true })}.` : \"Unlock a new Intergalactic Strangeness 'Strange gain' and second level of 'Automatic Stage'.\",\n                () => player.inflation.vacuum ? `Boost per Galaxy is increased by +${format(global.milestonesInfo[5].reward[1])}.` : \"Unlock a new Intergalactic Upgrade 'Galactic Merger'.\"\n            ],\n            need: [],\n            reward: [0, 0],\n            scaling: [\n                [1460, 1540, 1620, 1700, 1780, 1860, 1940, 2020],\n                [1, 2, 4, 6, 10, 14, 18, 22]\n            ]\n        }\n    ],\n    challengesInfo: [{\n        name: 'Void',\n        description: () => `Result of Vacuum Instability, investigate at your own will\\n(${player.inflation.vacuum || player.challenges.super ? `Entering will force a ${player.challenges.super ? 'Vacuum' : 'Stage'} reset, will be reverted after exiting` : 'No reason to enter from false Vacuum, since all rewards are disabled'})`,\n        effectText: () => {\n            const progress = player.challenges.voidCheck;\n            let text = `<p class=\"orangeText\">\u2012 Microworld Structures are 4 times weaker${progress[1] >= 1 ? `\\n\u2012 Discharge base is raised to the root of 2 (^${format(0.5)})` : ''}${progress[1] >= 2 ? '\\n\u2012 Energy gain from Submerged and Accretion Stages is divided by 2' : ''}\\n${progress[3] >= 5 ? '\u2012 Energy gain from Interstellar and Intergalactic Stages is divided by 4' : 'More nerfs will be shown with more rewards'}</p>`;\n            if (progress[1] >= 3) { text += `<p class=\"blueText\">\u2012 Drops above 1 do not increase their own production\\n\u2012 Puddles are ${format(8e3)} times weaker\\n${progress[2] >= 1 ? `\u2012 Clouds gain is decreased by ^${format(0.8)}` : 'More nerfs will be shown with more rewards'}${player.challenges.super ? (player.challenges.supervoid[1] >= 3 ? \"\\n\u2012 'Water spread' and the first 2 Researches are weaker\\n\u2012 Ponds, Lakes and Seas are 2 times weaker \" : '\\nMore nerfs will be shown with more rewards') : ''}</p>`; }\n            if (progress[1] >= 2) { text += `<p class=\"grayText\">\u2012 Cosmic dust is softcapped (^${format(0.9)})\\n${progress[3] >= 4 ? `\u2012 Softcap is stronger after reaching 'Jovian planet' Rank (^${format(0.8)})` : 'More nerfs will be shown with more rewards'}${player.challenges.super ? (player.challenges.supervoid[3] >= 1 ? \"\\n\u2012 Increasing Rank doesn't increase effective Rank\" : '\\nMore nerfs will be shown with more rewards') : ''}</p>`; }\n            if (progress[3] >= 5) { text += `<p class=\"orchidText\">\u2012 Stars are ${format(8e3)} times weaker${progress[4] >= 1 ? '\\n\u2012 Solar mass gain is 2 times smaller' : ''}${progress[4] >= 2 ? `\\n\u2012 Solar mass effect is softcapped ^${format(0.2)} after 1` : ''}\\n${progress[4] >= 5 ? (player.verses[0].current >= 7 ? '\u2012 Quasi-stars do not produce anything and scale in cost faster' : \"\u2012 Can't create or gain Quasi-stars\") : 'More nerfs will be shown with more rewards'}${player.challenges.super ? (player.challenges.supervoid[3] >= 5 ? '\\n\u2012 All Upgrade types cost 100 times more Stardust' : '\\nMore nerfs will be shown with more rewards') : ''}</p>`; }\n            if (progress[3] >= 1) { text += `<p class=\"cyanText\">${player.challenges.super ? '\u2012 Global speed is decreased by 5\\n' : ''}\u2012 All resets affect all ${player.stage.true >= 7 ? 'pre-Abyss ' : ''}Stages\\n${progress[5] >= 1 ? `\u2012 Galaxies cost scaling increased by +${format(0.05)}` : 'More nerfs will be shown with more rewards'}</p>`; }\n            return text;\n        },\n        needText: [\n            [], [\n                () => 'Perform the Discharge',\n                () => 'Unlock Accretion Stage',\n                () => 'Unlock Submerged Stage'\n            ], [\n                () => 'Vaporize the Drops',\n                () => `Have more than ${format(1e4)} Clouds`,\n                () => player.tree[1][5] >= 2 ? `Have more than ${format(1e12)} Clouds` : player.stage.true >= 7 ? `Reach ${format(1e12)} Clouds with no Rank resets` : null\n            ], [\n                () => \"Reach 'Meteoroid' Rank\",\n                () => \"Reach 'Asteroid' Rank\",\n                () => \"Reach 'Planet' Rank\",\n                () => \"Reach 'Jovian planet' Rank\",\n                () => \"Reach 'Protostar' Rank\",\n                () => player.stage.true >= 7 ? \"Reach 'Protogalaxy' Rank\" : null\n            ], [\n                () => 'Cause the Collapse',\n                () => 'Get the first Red giant',\n                () => 'Get the first Neutron star',\n                () => 'Get the first Black hole',\n                () => 'Unlock Intergalactic Stage'\n            ], [\n                () => 'Create a Galaxy',\n                () => player.stage.true >= 7 ? 'Force the Galactic Merge' : null,\n                () => player.stage.true >= 8 ? 'Create a Galaxy group' : null,\n                () => player.stage.true >= 8 ? 'Create a Galaxy cluster' : null\n            ]\n        ],\n        rewardText: [[\n            [],\n            [\"'Energy increase' (Microworld)\", \"'Conservation of Mass' (Microworld)\", \"'Improved flow' (Submerged)\"],\n            [\"'Mechanical spread' (Submerged)\", \"'Ocean world' (Submerged)\", \"'Galactic tide' (Intergalactic)\"],\n            ['Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', 'Multiple max level increases', \"'Strange growth' (Intergalactic)\", \"'Automatic Merge' (Intergalactic)\"],\n            ['Max level increased for Auto resets', \"'Conservation of Energy' (Microworld)\", \"'Neutronium' (Interstellar)\", \"'Mass delay' (Accretion)\", \"'Newer Upgrade' (Interstellar)\"],\n            [\"'Rank raise' (Accretion)\", 'New Abyss themed Strangeness', 'Work in progress', 'Work in progress']\n        ], [\n            [],\n            [\"'Discharge improvement' (Advanced)\", \"'Improved conservation' (Milestone)\", \"'Conservation of Resources' (Advanced)\"],\n            [\"'Vaporization improvement' (Advanced)\", '\"Strange Ocean\" (Milestone, WIP)', 'Work in progress'],\n            [\"'Indestructible matter' (Milestone)\", \"'Latest Preons' (Milestone)\", \"'Improved Offline' (Basic)\", \"'Rank improvement' (Advanced)\", \"'Stranger gain' (Advanced)\", 'Work in progress'],\n            [\"Improved the 'Improved conservation'\", 'Work in progress', 'Work in progress', 'Work in progress', 'Work in progress'],\n            ['Work in progress', 'Work in progress', 'Work in progress', 'Work in progress']\n        ]],\n        resetType: 'stage',\n        time: 3600,\n        color: 'darkviolet'\n    }, {\n        name: 'Vacuum stability',\n        description: () => 'A more stable, but still the false Vacuum state\\n(Entering will force a Vacuum reset, will be reverted after exiting)',\n        effectText: () => {\n            const completions = player.challenges.stability;\n            return `<p class=\"orchidText\">\u2012 Global speed is decreased by ${format(8 ** completions, { padding: 'exponent' })}\\n\u2012 Milestones time limit is 0 seconds\\n\u2012 Permanent Stages are removed from reset cycle</p>\n            <p class=\"greenText\">\u2012 Strange quarks from Stage resets are decreased by ${format(2 ** Math.max((player.challenges.active === 1 ? player.stage.resets : 0) - 7, 0) * 2 ** completions, { padding: 'exponent' })}\\n\u2012 Strange quarks from non-Interstellar Stage resets are further decreased by ${format(2 ** (completions + 2), { padding: 'exponent' })}\\n\u2012 Stage resets above 8 decrease Strange quarks from the Stage resets by 2\\n\u2012 Going above 10 minutes of the Stage time will force Stage reset</p>\n            <p class=\"darkvioletText\">\u2012 Galaxies scale in cost faster by +${format(0.01)}\\n\u2012 Merge requirement is increased by +${completions}, which is equal to ${calculateEffects.mergeRequirement(true)}</p>`;\n        },\n        needText: ['1 Completion', '2 Completions', '3 Completions', '4 Completions'],\n        rewardText: [\n            \"'Stability' (Advanced Inflation)\", //1\n            \"'Instability' Inflation will be immune to the Universe resets\", //2\n            \"Start Vacuum resets with Void equal to the 'Instability' Supervoid (WIP)\", //3\n            'Strangelets first effect will use peak Strange quarks rate (WIP)' //4\n        ],\n        resetType: 'vacuum',\n        time: 7200,\n        color: 'darkorchid'\n    }],\n    historyStorage: {\n        stage: [],\n        end: []\n    },\n    loadouts: {\n        input: [],\n        buttons: []\n    }\n};\n\n/** Only for effects that are calculated multiple times per tick */\nexport const effectsCache = { //Cannot be in Stage.ts due to esbuild file ordering\n    microworld: 0,\n    S1Upgrade6: 0,\n    S1Upgrade7: 0,\n    /** Alternative names are S1Upgrade8 and S1Build6 */\n    tritium: 0,\n    S2Upgrade3: 0,\n    S2Upgrade4: 0,\n    interstellar: 0,\n    mass: 0,\n    star1: 0,\n    star2: 0,\n    galaxyBase: 0,\n    interstellarQuarks: 0,\n    element26: 0,\n    S1SolarDelay: 0,\n    S3SolarDelay: 0,\n    fluid: 0,\n    S3Strange1: 0,\n    S3Strange3: 0,\n    /** Total effect */\n    T0Inflation3: 0\n};\n\n//Math.log extension for any base\nexport const logAny = (number: number, base: number) => Math.log(number) / Math.log(base);\n\n/** Not for the deep copy, works on Overlimit, but not prefered */\nexport const cloneArray = <ArrayClone extends Array<number | string | boolean | null | undefined>>(array: ArrayClone) => array.slice(0) as ArrayClone;\n//Actual type is any[], it's because TS is dumb; [...array] will be better after ~>10000 keys\n\n/** For non deep clone use { ...object } or cloneArray when possible */\nexport const deepClone = <CloneType>(toClone: CloneType): CloneType => {\n    if (typeof toClone !== 'object' || toClone === null) { return toClone; }\n\n    let value: any;\n    if (Array.isArray(toClone)) {\n        if (toClone instanceof Overlimit) { return new Overlimit(toClone) as CloneType; }\n\n        value = []; //Faster this way\n        for (let i = 0; i < toClone.length; i++) { value.push(deepClone(toClone[i])); }\n    } else {\n        value = {};\n        for (const check in toClone) { value[check] = deepClone(toClone[check]); }\n    }\n    return value;\n};\n\nconst fillMissingValues = <ArrayType extends any[]>(test: ArrayType, start: ArrayType) => {\n    for (let i = test.length; i < start.length; i++) { test[i] = deepClone(start[i]); }\n};\n\n{ //Final preparations for global and player\n    /** Does not clone given value */\n    const createArray = <startValue extends number | string | boolean | null | undefined>(length: number, value: startValue) => {\n        //Doing 'new Array(length)' is faster, but will force array to be holey type (and using .fill will make it slower)\n        const array = [];\n        for (let i = 0; i < length; i++) { array.push(value); }\n        return array as startValue[];\n    };\n\n    for (let s = 1; s < global.buildingsInfo.firstCost.length; s++) {\n        player.buildings[s] = [] as unknown as playerType['buildings'][0];\n        player.toggles.buildings[s] = createArray(global.buildingsInfo.firstCost[s].length, false);\n        global.buildingsInfo.producing[s] = [];\n        for (let i = 0; i < global.buildingsInfo.firstCost[s].length; i++) {\n            const start = i === 0 && s === 4 ? '1' : '0';\n            player.buildings[s][i] = {\n                current: new Overlimit(start),\n                total: new Overlimit(start),\n                trueTotal: new Overlimit(start)\n            };\n            if (i !== 0) { player.buildings[s][i as 1].true = 0; }\n            global.buildingsInfo.producing[s as 0].push(i === 0 ? 0 : new Overlimit('0'));\n        }\n    }\n    player.toggles.verses = createArray(player.verses.length, false);\n    {\n        const pointer = global.upgradesInfo;\n        for (let s = 1; s < pointer.length; s++) {\n            const cost = pointer[s].cost;\n            player.upgrades[s] = createArray(cost.length, 0);\n            global.automatization.autoU = [];\n            global.automatization.autoR = [];\n            global.automatization.autoE = [];\n            global.lastUpgrade[s] = [null, 'upgrades'];\n            if (s === 1) { continue; }\n            for (let i = 0; i < cost.length; i++) { cost[i] = new Overlimit(cost[i]); }\n        }\n    }\n    for (const upgradeType of ['researches', 'researchesExtra'] as const) {\n        const pointer = global[`${upgradeType}Info`];\n        for (let s = 1; s < pointer.length; s++) {\n            const firstCost = pointer[s].firstCost;\n            player[upgradeType][s] = createArray(firstCost.length, 0);\n            if (s === 1 || (s === 6 && upgradeType === 'researchesExtra')) {\n                pointer[s].cost = cloneArray(firstCost as number[]);\n                continue;\n            }\n            for (let i = 0; i < firstCost.length; i++) {\n                firstCost[i] = new Overlimit(firstCost[i]);\n                pointer[s].cost[i] = new Overlimit(firstCost[i]);\n            }\n        }\n    }\n    player.researchesAuto = createArray(global.researchesAutoInfo.costRange.length, 0);\n    player.ASR = createArray(global.ASRInfo.costRange.length, 0);\n    {\n        const cost = global.elementsInfo.cost;\n        player.elements = createArray(cost.length, 0);\n        for (let i = 1; i < cost.length; i++) { cost[i] = new Overlimit(cost[i]); }\n    }\n    for (let s = 1; s < global.strangenessInfo.length; s++) {\n        player.strangeness[s] = createArray(global.strangenessInfo[s].firstCost.length, 0);\n        global.strangenessInfo[s].cost = cloneArray(global.strangenessInfo[s].firstCost);\n    }\n    for (let s = 1; s < global.milestonesInfo.length; s++) {\n        const pointer = global.milestonesInfo[s];\n        player.milestones[s] = createArray(pointer.needText.length, 0);\n        for (let i = 0; i < pointer.needText.length; i++) {\n            pointer.need.push(new Overlimit('Infinity'));\n        }\n    }\n    for (let s = 0; s < global.treeInfo.length; s++) {\n        player.tree[s] = createArray(global.treeInfo[s].firstCost.length, 0);\n        global.treeInfo[s].cost = cloneArray(global.treeInfo[s].firstCost);\n    }\n    player.toggles.normal = createArray(document.getElementsByClassName('toggleNormal').length, false);\n    player.toggles.confirm = createArray(document.getElementsByClassName('toggleConfirm').length, 'Safe');\n    player.toggles.hover = createArray(document.getElementsByClassName('toggleHover').length, false);\n    player.toggles.max = createArray(document.getElementsByClassName('toggleMax').length, false);\n    player.toggles.auto = createArray(document.getElementsByClassName('toggleAuto').length, false);\n    player.toggles.normal[1] = true;\n}\n//player.example = playerStart.example; Is not allowed (if example is an array or object), instead iterate or create clone\nexport const playerStart = deepClone(player);\n\nexport const updatePlayer = (load: playerType): string => {\n    if (load.inflation === undefined) { throw new ReferenceError('This save file is not from this game or too old'); }\n    prepareVacuum(load.inflation.vacuum); //Only to set starting buildings values\n\n    const oldVersion = load.version;\n    if (oldVersion !== playerStart.version) {\n        if (load.version === 'v0.1.2') {\n            load.version = 'v0.1.3';\n            load.stage.time = 0;\n            load.inflation.age = 0;\n        }\n        if (['v0.1.3', 'v0.1.4', 'v0.1.5', 'v0.1.6', 'v0.1.7', 'v0.1.8'].includes(load.version)) {\n            load.version = 'v0.1.9';\n            load.discharge = deepClone(playerStart.discharge);\n            load.researchesAuto = cloneArray(playerStart.researchesAuto);\n            delete load['saveUpdate016' as keyof unknown];\n            delete load.accretion['input' as keyof unknown];\n        }\n        if (load.version === 'v0.1.9') {\n            load.version = 'v0.2.0';\n            load.stage.peak = 0;\n            load.vaporization.input = cloneArray(playerStart.vaporization.input);\n            delete load['separator' as keyof unknown];\n            delete load['intervals' as keyof unknown];\n            delete load.stage['best' as keyof unknown];\n            delete load.stage['export' as keyof unknown];\n        }\n        if (load.version === 'v0.2.0') {\n            load.version = 'v0.2.1';\n            load.time = deepClone(playerStart.time);\n            load.toggles = deepClone(playerStart.toggles);\n            load.inflation.resets = load.inflation.vacuum ? 1 : 0;\n            load.buildings = deepClone(playerStart.buildings);\n            load.upgrades[6] = cloneArray(playerStart.upgrades[6]);\n            load.researches[6] = cloneArray(playerStart.researches[6]);\n            load.researchesExtra[6] = cloneArray(playerStart.researchesExtra[6]);\n            load.history = deepClone(playerStart.history);\n        }\n        if (load.version === 'v0.2.1') {\n            load.version = 'v0.2.2';\n            load.elements = cloneArray(playerStart.elements);\n            load.collapse = deepClone(playerStart.collapse);\n            load.inflation.time = load.inflation.age;\n            load.clone = {};\n            delete load['events' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.time.vacuum = load.time.universe;\n        }\n        if (load.version === 'v0.2.2') {\n            load.version = 'v0.2.3';\n            const old = load.challenges?.active;\n            load.challenges = deepClone(playerStart.challenges);\n            if (old !== undefined && old !== -1) { load.challenges.active = old; }\n        }\n        if (load.version === 'v0.2.3') {\n            load.version = 'v0.2.4';\n            load.merge = deepClone(playerStart.merge);\n            if (load.clone.depth !== undefined) { load.clone.merge = deepClone(playerStart.merge); }\n        }\n        if (load.version === 'v0.2.4') {\n            load.version = 'v0.2.5';\n            load.stage.peakedAt = 0;\n            const old = (load.cosmon as unknown as playerType['cosmon'][0])?.total;\n            load.cosmon = deepClone(playerStart.cosmon);\n            if (old !== undefined) {\n                load.cosmon[0].current = old;\n                load.cosmon[0].total = old;\n            }\n            load.event = false;\n            delete load.inflation['spent' as keyof unknown];\n            delete load.inflation['tree' as keyof unknown];\n            delete load['maxASR' as keyof unknown];\n\n            /* Can be removed eventually */\n            load.challenges.stability = 0; //DeepClone\n            load.challenges.supervoidMax = cloneArray(load.challenges.supervoid);\n            load.merge.rewards = cloneArray(playerStart.merge.rewards); //DeepClone\n            if (load.clone.depth !== undefined) { load.clone.merge.rewards = cloneArray(playerStart.merge.rewards); }\n            delete load.merge['reward' as keyof unknown];\n        }\n        if (load.version === 'v0.2.5') {\n            load.version = 'v0.2.6_beta1';\n            load.stage.input ??= 0; //Shorten\n            load.darkness = deepClone(playerStart.darkness);\n            load.inflation.loadouts ??= []; //Shorten\n            load.inflation.voidVerses = 0;\n            load.inflation.ends = cloneArray(playerStart.inflation.ends);\n            load.verses = deepClone(playerStart.verses);\n            load.verses[0].true = load.buildings[6][1].true;\n            load.verses[0].current = load.buildings[6][1].true;\n            load.strangeness[6] = cloneArray(playerStart.strangeness[6]);\n            load.tree = deepClone(playerStart.tree);\n            if (load.clone.depth !== undefined) {\n                load.clone.darkness = {\n                    energy: 0,\n                    fluid: 0\n                };\n                load.clone.vaporization.clouds = Number(load.clone.vaporization.clouds); //Can be shortened\n                load.clone.vaporization.cloudsMax = load.clone.vaporization.clouds;\n                if (load.clone.depth !== 'stage') { load.clone.strangeness[6] = cloneArray(playerStart.strangeness[6]); }\n            }\n\n            /* Can be removed eventually */\n            if (typeof load.stage.input === 'object') { load.stage.input = (load.stage.input as number[])[1]; }\n            if (!Array.isArray(load.inflation.loadouts)) {\n                const old = load.inflation.loadouts as unknown as Record<string, number[]>;\n                load.inflation.loadouts = [];\n                for (const key in old) { load.inflation.loadouts.push([key, old[key]]); }\n            }\n            load.buildings[6][1] = deepClone(playerStart.buildings[6][1]);\n            load.toggles.verses = cloneArray(playerStart.toggles.verses);\n            if (load.challenges.stability === 2) {\n                load.challenges.stability = 1;\n                load.cosmon[0].total--;\n            }\n            load.cosmon[0].current = load.cosmon[0].total;\n            load.history.end = deepClone(playerStart.history.end);\n            load.vaporization.clouds = Number(load.vaporization.clouds);\n            load.vaporization.cloudsMax = load.vaporization.clouds;\n            load.time.end = load.time.online / 1000;\n            delete load.history['vacuum' as keyof unknown];\n        }\n\n        if (load.version !== playerStart.version) {\n            throw new ReferenceError(`Save file version ${load.version} is not allowed`);\n        }\n    }\n\n    for (let s = 1; s <= 6; s++) {\n        fillMissingValues(load.buildings[s], playerStart.buildings[s]);\n        fillMissingValues(load.toggles.buildings[s], playerStart.toggles.buildings[s]);\n        if (!(load.toggles.shop.wait[s] >= 1)) { load.toggles.shop.wait[s] = 2; }\n\n        fillMissingValues(load.upgrades[s], playerStart.upgrades[s]);\n        fillMissingValues(load.researches[s], playerStart.researches[s]);\n        fillMissingValues(load.researchesExtra[s], playerStart.researchesExtra[s]);\n        load.ASR[s] ??= 0;\n        fillMissingValues(load.strangeness[s], playerStart.strangeness[s]);\n\n        if (s >= 6) { continue; }\n        fillMissingValues(load.milestones[s], playerStart.milestones[s]);\n    }\n    fillMissingValues(load.strange, playerStart.strange);\n    fillMissingValues(load.verses, playerStart.verses);\n    fillMissingValues(load.cosmon, playerStart.cosmon);\n\n    fillMissingValues(load.researchesAuto, playerStart.researchesAuto);\n    fillMissingValues(load.elements, playerStart.elements);\n    for (let s = 0; s < playerStart.tree.length; s++) { fillMissingValues(load.tree[s], playerStart.tree[s]); }\n\n    fillMissingValues(load.toggles.verses, playerStart.toggles.verses);\n    fillMissingValues(load.toggles.normal, playerStart.toggles.normal);\n    fillMissingValues(load.toggles.confirm, playerStart.toggles.confirm);\n    fillMissingValues(load.toggles.hover, playerStart.toggles.hover);\n    fillMissingValues(load.toggles.max, playerStart.toggles.max);\n    fillMissingValues(load.toggles.auto, playerStart.toggles.auto);\n\n    const { clone } = load;\n    if (clone.depth !== undefined) {\n        for (let s = 1; s <= 6; s++) {\n            fillMissingValues(clone.upgrades[s], playerStart.upgrades[s]);\n            fillMissingValues(clone.researches[s], playerStart.researches[s]);\n            fillMissingValues(clone.researchesExtra[s], playerStart.researchesExtra[s]);\n            clone.ASR[s] ??= 0;\n\n            if (clone.depth === 'stage') { continue; }\n            fillMissingValues(clone.strangeness[s], playerStart.strangeness[s]);\n\n            if (s >= 6) { continue; }\n            fillMissingValues(clone.milestones[s], playerStart.milestones[s]);\n        }\n        fillMissingValues(clone.researchesAuto, playerStart.researchesAuto);\n        fillMissingValues(clone.elements, playerStart.elements);\n    }\n\n    /* Restore data post JSON parse */\n    load.fileName = new TextDecoder().decode(Uint8Array.from(load.fileName, (c) => c.codePointAt(0) as number));\n    for (let i = 0; i < load.inflation.loadouts.length; i++) {\n        load.inflation.loadouts[i][0] = new TextDecoder().decode(Uint8Array.from(load.inflation.loadouts[i][0], (c) => c.codePointAt(0) as number));\n    }\n    for (let s = 1; s < load.buildings.length; s++) {\n        for (let i = 0; i < load.buildings[s].length; i++) {\n            const building = load.buildings[s][i];\n            building.current = new Overlimit(building.current);\n            building.total = new Overlimit(building.total);\n            building.trueTotal = new Overlimit(building.trueTotal);\n        }\n    }\n    Object.assign(player, load);\n\n    /* Final preparations and fixes */\n    global.trueActive = player.stage.active;\n    global.debug.historyStage = null;\n    global.debug.historyEnd = null;\n    global.debug.timeLimit = false;\n    if (player.time.export[0] < -86400_000) { player.time.export[0] = -86400_000; }\n    if (player.time.offline < -600_000) { player.time.offline = -600_000; }\n\n    const progress = player.challenges.supervoidMax;\n    global.inflationInfo.totalSuper = progress[1] + progress[2] + progress[3] + progress[4] + progress[5];\n    const stars = player.buildings[4];\n    global.collapseInfo.trueStars = stars[1].true + stars[2].true + stars[3].true + stars[4].true + stars[5].true;\n    global.collapseInfo.pointsLoop = 0;\n    global.historyStorage.stage = player.history.stage.list;\n    global.historyStorage.end = player.history.end.list;\n    assignResetInformation.supervoid();\n\n    for (let s = 1; s <= 5; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            assignMilestoneInformation(i, s);\n        }\n    }\n    for (let s = 1; s <= 6; s++) {\n        const strangeness = player.strangeness[s];\n        const strangenessMax = global.strangenessInfo[s].max;\n        for (let i = 0; i < global.strangenessInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'strangeness');\n            if (strangeness[i] > strangenessMax[i]) { strangeness[i] = strangenessMax[i]; }\n        }\n        const extra = player.researchesExtra[s];\n        const extraMax = global.researchesExtraInfo[s].max;\n        for (let i = 0; i < global.researchesExtraInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researchesExtra');\n            if (extra[i] > extraMax[i]) { extra[i] = extraMax[i]; }\n        }\n        const researches = player.researches[s];\n        const researchesMax = global.researchesInfo[s].max;\n        for (let i = 0; i < global.researchesInfo[s].maxActive; i++) {\n            calculateMaxLevel(i, s, 'researches');\n            if (researches[i] > researchesMax[i]) { researches[i] = researchesMax[i]; }\n        }\n        calculateMaxLevel(0, s, 'ASR');\n        autoUpgradesSet(s);\n        autoResearchesSet('researches', s);\n        autoResearchesSet('researchesExtra', s);\n\n        getId(`stageSwitch${s}`).style.textDecoration = global.trueActive === s ? 'underline' : '';\n        global.lastUpgrade[s][0] = null;\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) { calculateMaxLevel(i, 0, 'researchesAuto'); }\n    for (let s = 0; s < playerStart.tree.length; s++) {\n        const tree = player.tree[s];\n        const treeMax = global.treeInfo[s].max;\n        for (let i = 0; i < playerStart.tree[s].length; i++) {\n            calculateMaxLevel(i, s, 'inflations');\n            if (tree[i] > treeMax[i]) { tree[i] = treeMax[i]; }\n        }\n    }\n    autoElementsSet();\n\n    toggleSupervoid();\n    for (let i = 0; i < global.challengesInfo.length; i++) { assignChallengeInformation(i); }\n    global.lastElement = null;\n    global.lastStrangeness = [null, 0];\n    global.lastMilestone = [null, 0];\n    global.lastChallenge[0] = player.challenges.active === null ? 1 : player.challenges.active;\n    global.lastInflation = [null, 0];\n\n    const logHTML = getId('logMain', true);\n    if (logHTML !== null) {\n        logHTML.innerHTML = '<li></li>';\n        global.log.lastHTML[0] = 'Start of the log';\n        global.log.lastHTML[1] = 1;\n        global.log.lastHTML[3] = true;\n    }\n    global.log.lastHTML[2] = player.time.stage;\n    global.log.add = [];\n\n    assignBuildingsProduction.strange1();\n    assignBuildingsProduction.strange0();\n    assignBuildingsProduction.S2Levels(true);\n    assignBuildingsProduction.S4Levels(true);\n    assignResetInformation.maxRank();\n    assignResetInformation.trueEnergy();\n    (getId('loadoutsName') as HTMLInputElement).value = 'Auto-generate';\n    loadoutsLoadAuto();\n\n    visualTrueStageUnlocks();\n    switchTab(); //Order matters\n    (getId('saveFileNameInput') as HTMLInputElement).value = player.fileName;\n    (getId('stageInput') as HTMLInputElement).value = format(player.stage.input, { type: 'input' });\n    (getId('vaporizationInput') as HTMLInputElement).value = format(player.vaporization.input[0], { type: 'input' });\n    (getId('vaporizationInputMax') as HTMLInputElement).value = format(player.vaporization.input[1], { type: 'input' });\n    (getId('collapseInput') as HTMLInputElement).value = format(player.collapse.input[0], { type: 'input' });\n    (getId('collapseInputWait') as HTMLInputElement).value = format(player.collapse.input[1], { type: 'input' });\n    (getId('mergeInput') as HTMLInputElement).value = format(player.merge.input[0], { type: 'input' });\n    (getId('mergeInputSince') as HTMLInputElement).value = format(player.merge.input[1], { type: 'input' });\n    (getId('stageHistorySave') as HTMLInputElement).value = `${player.history.stage.input[0]}`;\n    (getId('stageHistoryShow') as HTMLInputElement).value = `${player.history.stage.input[1]}`;\n    (getId('endHistorySave') as HTMLInputElement).value = `${player.history.end.input[0]}`;\n    (getId('endHistoryShow') as HTMLInputElement).value = `${player.history.end.input[1]}`;\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) { toggleSwap(i, 'normal'); }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) { toggleConfirm(i); }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) { toggleSwap(i, 'hover'); }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) { toggleSwap(i, 'max'); }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) { toggleSwap(i, 'auto'); }\n    (getId('buyAnyInput') as HTMLInputElement).value = format(player.toggles.shop.input, { type: 'input' });\n    updateCollapsePoints();\n    loadoutsRecreate();\n\n    return oldVersion;\n};\n", "import { player, global, playerStart, updatePlayer, deepClone } from './Player';\nimport { getUpgradeDescription, switchTab, numbersUpdate, visualUpdate, format, getChallengeDescription, getChallenge0Reward, getChallenge1Reward, stageUpdate, getStrangenessDescription, addIntoLog, updateCollapsePoints } from './Update';\nimport { assignBuildingsProduction, autoElementsSet, autoResearchesSet, autoUpgradesSet, buyBuilding, buyStrangeness, buyUpgrades, buyVerse, calculateEffects, collapseResetUser, dischargeResetUser, endResetUser, enterExitChallengeUser, inflationRefund, loadoutsLoadAuto, mergeResetUser, nucleationResetUser, rankResetUser, setActiveStage, stageResetUser, switchStage, timeUpdate, toggleConfirm, toggleSupervoid, toggleSwap, vaporizationResetUser } from './Stage';\nimport { Alert, Prompt, setTheme, changeFontSize, changeFormat, specialHTML, replayEvent, Confirm, preventImageUnload, Notify, MDStrangenessPage, globalSave, toggleSpecial, saveGlobalSettings, openHotkeys, openVersionInfo, openLog, errorNotify } from './Special';\nimport { assignHotkeys, detectHotkey, detectShift, handleTouchHotkeys } from './Hotkeys';\nimport { prepareVacuum } from './Vacuum';\nimport { checkUpgrade } from './Check';\nimport type { hotkeysList } from './Types';\n\n/** Only for static HTML, by default (false) throws error if id is null */\nexport const getId = (id: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.idMap.get(id);\n    if (test !== undefined) { return test; }\n\n    const store = document.getElementById(id);\n    if (store !== null) {\n        specialHTML.cache.idMap.set(id, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    errorNotify(`Error encountered, ID \u2012 '${id}' doesn't exist`);\n    throw new ReferenceError(`ID \u2012 '${id}' doesn't exist`);\n};\n\n/** Only for static HTML, by default (false) throws error if query isn't found is null */\nexport const getQuery = (query: string, noError = false): HTMLElement => {\n    const test = specialHTML.cache.queryMap.get(query);\n    if (test !== undefined) { return test; }\n\n    const store = document.querySelector(query) as HTMLElement; //Can't add null type due to eslint being buggy\n    if (store !== null) {\n        specialHTML.cache.queryMap.set(query, store);\n        return store;\n    }\n\n    if (noError) { return null as unknown as HTMLElement; }\n    errorNotify(`Error encountered, Query \u2012 '${query}' failed to find anything`);\n    throw new ReferenceError(`Query \u2012 '${query}' failed to find anything`);\n};\n\n/** Id collection will be auto updated by browser */\nexport const getClass = (idCollection: string): HTMLCollectionOf<HTMLElement> => {\n    const test = specialHTML.cache.classMap.get(idCollection);\n    if (test !== undefined) { return test; }\n    const store = document.getElementsByClassName(idCollection) as HTMLCollectionOf<HTMLElement>;\n    specialHTML.cache.classMap.set(idCollection, store);\n    return store;\n};\n\n/** Returns offline time in milliseconds */\nconst handleOfflineTime = (): number => {\n    const timeNow = Date.now();\n    const offlineTime = timeNow - player.time.updated;\n    player.time.updated = timeNow;\n    player.time.export[0] += offlineTime * calculateEffects.T0Inflation5();\n    return offlineTime;\n};\nexport const simulateOffline = async(offline: number) => {\n    const info = global.offline;\n    if (!info.active) { pauseGame(); }\n    offline += player.time.offline;\n    player.time.offline = 0;\n\n    let decline = false;\n    if (offline >= 20 && !player.toggles.normal[4]) {\n        decline = !await Confirm(`Claim ${format(Math.min(offline / 1000, 43200), { type: 'time', padding: false })} worth of Offline time?\\n(Includes time spent to click any of the buttons)`, 2) &&\n            (globalSave.developerMode || !await Confirm(\"Press 'Cancel' again to confirm losing Offline time, 'Confirm' to keep it\"));\n        const extra = handleOfflineTime();\n        global.lastSave += extra;\n        offline += extra;\n    }\n    if (decline || offline < 20) {\n        if (offline < 0) { player.time.offline = offline - 20; }\n        timeUpdate(20, 20); //Just in case\n        pauseGame(false);\n        visualUpdate();\n        numbersUpdate();\n        return;\n    } else if (offline > 43200_000) { offline = 43200_000; }\n    let tick = globalSave.intervals.offline;\n    const startValue = offline;\n    const startStage = player.stage.active;\n    info.stage[0] = null;\n    info.stage[1] = null;\n    player.time.online += offline;\n\n    const body = document.documentElement;\n    const mainHTML = getId('offlineMain');\n    const accelBtn = getId('offlineAccelerate');\n    const deaccelBtn = getId('offlineDeaccelerate');\n    const cancelBtn = getId('offlineCancel');\n    const oldFocus = document.activeElement as HTMLElement | null;\n    const accelerate = () => { tick *= 2; };\n    const deaccelerate = () => { tick = Math.max(tick / 2, 20); };\n    const finish = () => { tick = 0; };\n    const key = (event: KeyboardEvent) => {\n        const shift = detectShift(event);\n        if (shift === null) { return; }\n        const code = event.code;\n        if (code === 'Escape') {\n            if (shift) { return; }\n            finish();\n            event.preventDefault();\n        } else if (code === 'Tab') {\n            if (shift && document.activeElement === accelBtn) {\n                cancelBtn.focus();\n            } else if (!shift && document.activeElement === cancelBtn) {\n                accelBtn.focus();\n            } else { return; }\n            event.preventDefault();\n        }\n    };\n    const end = () => {\n        pauseGame(false);\n        if (info.stage[0] !== null) {\n            player.stage.active = startStage;\n            setActiveStage(info.stage[0]);\n        }\n        if (info.stage[1] !== null) {\n            stageUpdate(info.stage[1]);\n        } else {\n            visualUpdate();\n            numbersUpdate();\n        }\n        mainHTML.style.display = 'none';\n        accelBtn.removeEventListener('click', accelerate);\n        deaccelBtn.removeEventListener('click', deaccelerate);\n        cancelBtn.removeEventListener('click', finish);\n        body.removeEventListener('keydown', key);\n        oldFocus?.focus();\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Offline calculation ended'; }\n    };\n    accelBtn.addEventListener('click', accelerate);\n    deaccelBtn.addEventListener('click', deaccelerate);\n    cancelBtn.addEventListener('click', finish);\n    body.addEventListener('keydown', key);\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Offline calculation started'; }\n    mainHTML.style.display = '';\n    accelBtn.focus();\n\n    const tickHTML = getId('offlineTick');\n    const remainsHTML = getId('offlineRemains');\n    const percentageHTML = getQuery('#offlinePercentage > span');\n    const calculate = () => {\n        const time = tick <= 0 ? offline : Math.min(600 * tick, offline);\n        offline -= time;\n        try {\n            timeUpdate(Math.max(time / 600, 20), time);\n        } catch (error) {\n            end();\n            const stack = (error as { stack: string }).stack;\n            void Alert(`Offline calculation failed due to error:\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n            throw error;\n        }\n        if (offline >= 20) {\n            setTimeout(calculate);\n            tickHTML.textContent = format(tick);\n            remainsHTML.textContent = format(offline / 1000, { type: 'time' });\n            percentageHTML.textContent = format(100 - offline / startValue * 100, { padding: true });\n        } else {\n            player.time.offline += offline;\n            end();\n        }\n    };\n    calculate();\n};\n\nconst changeIntervals = () => {\n    const intervalsId = global.intervalsId;\n    const intervals = globalSave.intervals;\n    const paused = global.offline.active || global.paused;\n\n    clearInterval(intervalsId.main);\n    clearInterval(intervalsId.numbers);\n    clearInterval(intervalsId.visual);\n    clearInterval(intervalsId.autoSave);\n    intervalsId.main = paused ? undefined : setInterval(timeUpdate, 20, 20);\n    intervalsId.numbers = paused ? undefined : setInterval(numbersUpdate, intervals.numbers);\n    intervalsId.visual = paused ? undefined : setInterval(visualUpdate, intervals.visual);\n    intervalsId.autoSave = paused ? undefined : setInterval(saveGame, intervals.autoSave);\n};\n/** Pauses and unpauses game based on 'pause' value */\nexport const pauseGame = (pause = true) => {\n    if (!pause && global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = '';\n        button.style.color = '';\n        getId('gamePaused').style.display = 'none';\n        global.paused = false;\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Game unpaused'; }\n    }\n    global.hotkeys.disabled = pause;\n    global.offline.active = pause;\n    changeIntervals();\n\n    if (!pause && global.offline.cacheUpdate) {\n        global.offline.cacheUpdate = false;\n        preventImageUnload();\n    }\n};\nexport const pauseGameUser = () => {\n    if (global.offline.active) { return; }\n    if (!global.paused) {\n        const button = getId('pauseButton');\n        button.style.borderColor = 'forestgreen';\n        button.style.color = 'var(--green-text)';\n        getId('gamePaused').style.display = '';\n        global.paused = true;\n        changeIntervals();\n        if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Game paused'; }\n        return;\n    }\n    const offline = handleOfflineTime();\n    global.lastSave += offline;\n    void simulateOffline(offline);\n};\n\nconst saveGame = (noSaving = false): string | null => {\n    if (global.offline.active) { return null; }\n    try {\n        player.history.stage.list = global.historyStorage.stage.slice(0, player.history.stage.input[0]);\n        player.history.end.list = global.historyStorage.end.slice(0, player.history.end.input[0]);\n\n        const clone = { ...player };\n        clone.fileName = String.fromCharCode(...new TextEncoder().encode(clone.fileName));\n        clone.inflation = deepClone(clone.inflation);\n        for (let i = 0; i < clone.inflation.loadouts.length; i++) {\n            clone.inflation.loadouts[i][0] = String.fromCharCode(...new TextEncoder().encode(clone.inflation.loadouts[i][0]));\n        }\n        const save = btoa(JSON.stringify(clone));\n        if (!noSaving) {\n            localStorage.setItem(specialHTML.localStorage.main, save);\n            clearInterval(global.intervalsId.autoSave);\n            if (!global.paused) { global.intervalsId.autoSave = setInterval(saveGame, globalSave.intervals.autoSave); }\n            getId('isSaved').textContent = 'Saved';\n            global.lastSave = 0;\n        }\n        return save;\n    } catch (error) {\n        const stack = (error as { stack: string }).stack;\n        void Alert(`Failed to save the game\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 1);\n        throw error;\n    }\n};\nconst loadGame = (save: string) => {\n    if (global.offline.active) { return; }\n    pauseGame();\n    try {\n        const versionCheck = updatePlayer(JSON.parse(atob(save)));\n\n        global.lastSave = handleOfflineTime();\n        Notify(`This save is ${format(global.lastSave / 1000, { type: 'time', padding: false })} old${versionCheck !== player.version ? `\\nSave file version is ${versionCheck}` : ''}`);\n        stageUpdate(true, true);\n\n        void simulateOffline(global.lastSave);\n    } catch (error) {\n        prepareVacuum(Boolean(player.inflation.vacuum)); //Fix vacuum state\n        pauseGame(false);\n\n        void Alert(`Incorrect save file format\\n${error}`);\n        throw error;\n    }\n};\n\nconst replaceSaveFileSpecials = (name = player.fileName): string => {\n    const date = new Date();\n    const dateIndex = name.indexOf('[date');\n    if (dateIndex >= 0) {\n        const endIndex = name.indexOf(']', dateIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = name.substring(dateIndex + 5, endIndex);\n            const special = [\n                'Y',\n                'M',\n                'D'\n            ];\n            const replaceWith = [\n                `${date.getFullYear()}`,\n                `${date.getMonth() + 1}`.padStart(2, '0'),\n                `${date.getDate()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            name = name.replace(name.substring(dateIndex, endIndex + 1), replaced);\n        }\n    }\n    const timeIndex = name.indexOf('[time');\n    if (timeIndex >= 0) {\n        const endIndex = name.indexOf(']', timeIndex + 5);\n        if (endIndex >= 0) {\n            let replaced = name.substring(timeIndex + 5, endIndex);\n            const special = [\n                'H',\n                'M',\n                'S'\n            ];\n            const replaceWith = [\n                `${date.getHours()}`.padStart(2, '0'),\n                `${date.getMinutes()}`.padStart(2, '0'),\n                `${date.getSeconds()}`.padStart(2, '0')\n            ];\n            for (let i = 0; i < special.length; i++) {\n                replaced = replaced.replace(special[i], replaceWith[i]);\n            }\n            name = name.replace(name.substring(timeIndex, endIndex + 1), replaced);\n        }\n    }\n\n    const special = [\n        '[version]',\n        '[stage]',\n        '[strange]',\n        '[inflaton]',\n        '[cosmon]',\n        '[vacuum]',\n        '[galaxy]',\n        '[universe]'\n    ];\n    const replaceWith = [\n        player.version,\n        global.stageInfo.word[player.stage.current],\n        format(player.strange[0].total, { type: 'input', padding: true }),\n        format(player.cosmon[0].total, { type: 'input', padding: 'exponent' }),\n        format(player.cosmon[1].total, { type: 'input', padding: 'exponent' }),\n        `${player.inflation.vacuum}`,\n        format(player.buildings[5][3].current, { type: 'input', padding: 'exponent' }),\n        format(player.verses[0].current, { type: 'input', padding: 'exponent' })\n    ];\n    for (let i = 0; i < special.length; i++) {\n        name = name.replace(special[i], replaceWith[i]);\n    }\n    return `${name}.txt`;\n};\n\nconst repeatFunction = (repeat: () => any) => {\n    if (global.intervalsId.mouseRepeat !== undefined) { return; }\n    global.intervalsId.mouseRepeat = setTimeout(() => {\n        global.intervalsId.mouseRepeat = setInterval(repeat, 50);\n    }, 200);\n};\nconst cancelRepeat = () => {\n    clearInterval(global.intervalsId.mouseRepeat);\n    global.intervalsId.mouseRepeat = undefined;\n};\n\n/** Prevents element from going offscreen, for now only works for centered labels */\nconst showAndFix = (element: HTMLElement) => {\n    element.style.right = '';\n    element.style.display = '';\n    const rect = element.getBoundingClientRect();\n    if (rect.left < 0) {\n        element.style.right = `calc(50% - ${-rect.left}px)`;\n    } else {\n        const width = document.documentElement.clientWidth;\n        if (rect.right > width) { element.style.right = `calc(50% + ${rect.right - width}px)`; }\n    }\n};\n\nconst hoverUpgrades = (index: number, type: 'upgrades' | 'researches' | 'researchesExtra' | 'researchesAuto' | 'ASR' | 'elements') => {\n    if (type === 'elements') {\n        global.lastElement = index;\n    } else { global.lastUpgrade[player.stage.active] = [index, type]; }\n    getUpgradeDescription(index, type);\n};\nconst hoverStrangeness = (index: number, stageIndex: number, type: 'strangeness' | 'milestones' | 'inflations') => {\n    if (type === 'inflations') {\n        global.lastInflation = [index, stageIndex];\n    } else if (type === 'strangeness') {\n        global.lastStrangeness = [index, stageIndex];\n    } else { global.lastMilestone = [index, stageIndex]; }\n    getStrangenessDescription(index, stageIndex, type);\n};\nconst hoverChallenge = (index: number) => {\n    global.lastChallenge[0] = index;\n    getChallengeDescription(index);\n    if (index === 0) {\n        getChallenge0Reward(global.lastChallenge[1]);\n    } else if (index === 1) {\n        getChallenge1Reward();\n    }\n    visualUpdate();\n};\nexport const changeRewardType = (state = !global.sessionToggles[0]) => {\n    global.sessionToggles[0] = state;\n    getId('rewardsType').textContent = `${state ? 'Supervoid' : 'Void'} rewards:`;\n};\n/** Creates X automatization Research or switches Stage to from which that Research auto can be created if done from wrong Stage */\nconst handleAutoResearchCreation = (index: number) => {\n    if (player.researchesAuto[index] >= global.researchesAutoInfo.max[index]) { return; }\n    const stageIndex = player.stage.active;\n    if (checkUpgrade(index, stageIndex, 'researchesAuto')) {\n        buyUpgrades(index, stageIndex, 'researchesAuto');\n        return;\n    }\n\n    const autoStage = global.researchesAutoInfo.autoStage[index][player.researchesAuto[index]];\n    global.lastUpgrade[autoStage][0] = index;\n    global.lastUpgrade[autoStage][1] = 'researchesAuto';\n    switchStage(autoStage, stageIndex);\n};\n\nexport const buyAll = () => {\n    const active = player.stage.active;\n    const max = global.buildingsInfo.maxActive[active];\n    if (active === 3) {\n        for (let i = 1; i < max; i++) { buyBuilding(i, active, 0); }\n    } else {\n        for (let i = max - 1; i >= 1; i--) { buyBuilding(i, active, 0); }\n    }\n    if (active === 6 && player.strangeness[6][3] < 1) {\n        for (let i = 0; i < playerStart.verses.length; i++) { buyVerse(i); }\n    }\n};\n\nexport const loadoutsVisual = (loadout: number[]) => {\n    if (getId('loadoutsMain').style.display === 'none') { return; }\n    const appeared = {} as Record<number, number>;\n    const { firstCost, scaling } = global.treeInfo[0];\n    const calculate = (index: number) => Math.floor(Math.round((firstCost[index] + scaling[index] * appeared[index]) * 100) / 100);\n\n    let cost = 0;\n    let string = '';\n    for (let i = 0, dupes = 1; i < loadout.length; i += dupes, dupes = 1) {\n        const current = loadout[i];\n        appeared[current] = appeared[current] === undefined ? 0 : appeared[current] + 1;\n        cost += calculate(current);\n        while (loadout[i + dupes] === current) {\n            appeared[current]++;\n            cost += calculate(current);\n            dupes++;\n        }\n        string += `${i > 0 ? ', ' : ''}${current + 1}${dupes > 1 ? `x${dupes}` : ''}`;\n    }\n    getQuery('#loadoutsEditLabel > span').textContent = format(cost, { padding: 'exponent' });\n    (getId('loadoutsEdit') as HTMLInputElement).value = string;\n};\nexport const loadoutsRecreate = () => {\n    const old = global.loadouts.buttons;\n    for (let i = 0; i < old.length; i++) { old[i][0].removeEventListener('click', old[i][1]); }\n    const newOld: typeof old = [];\n    const listHTML = getQuery('#loadoutsList > span');\n    listHTML.textContent = '';\n    for (let i = 0; i < player.inflation.loadouts.length; i++) {\n        const button = document.createElement('button');\n        button.textContent = player.inflation.loadouts[i][0];\n        button.className = 'selectBtn redText';\n        button.type = 'button';\n        const event = () => {\n            if (global.hotkeys.shift) { return void loadoutsLoad(i); }\n            (getId('loadoutsName') as HTMLInputElement).value = player.inflation.loadouts[i][0];\n            loadoutsVisual(global.loadouts.input = player.inflation.loadouts[i][1]);\n        };\n        newOld[i] = [button, event];\n        listHTML.append(button, ', ');\n        button.addEventListener('click', event);\n    }\n    global.loadouts.buttons = newOld;\n};\nconst loadoutsSave = () => {\n    const name = (getId('loadoutsName') as HTMLInputElement).value;\n    if (name.length < 1 || name === 'Auto-generate') { return Notify(`Loadout name: '${name}' is not allowed`); }\n    const loadouts = player.inflation.loadouts;\n    let index = loadouts.length;\n    for (let i = 0; i < index; i++) {\n        if (name === loadouts[i][0]) {\n            index = i;\n            break;\n        }\n    }\n    loadouts[index] = [name, global.loadouts.input];\n    loadoutsRecreate();\n    Notify(`Saved loadout as '${name}'`);\n};\nconst loadoutsLoad = async(loadout = null as null | number) => {\n    if (global.offline.active || !await inflationRefund(loadout !== null || global.hotkeys.shift, true)) { return; }\n\n    const array = loadout !== null ? player.inflation.loadouts[loadout][1] : global.loadouts.input;\n    for (let i = 0; i < array.length; i++) {\n        if (!checkUpgrade(array[i], 0, 'inflations')) { continue; }\n        buyStrangeness(array[i], 0, 'inflations', true);\n    }\n    if ((getId('loadoutsName') as HTMLInputElement).value === 'Auto-generate') { loadoutsLoadAuto(); }\n    numbersUpdate();\n    if (globalSave.SRSettings[0]) { getId('SRMain').textContent = 'Loaded loadout'; }\n};\n\nexport const globalSaveStart = deepClone(globalSave);\ntry { //Start everything\n    const body = document.documentElement;\n    const globalSettings = localStorage.getItem(specialHTML.localStorage.settings);\n    if (globalSettings !== null) {\n        try {\n            Object.assign(globalSave, JSON.parse(atob(globalSettings)));\n            const decoder = new TextDecoder();\n            for (const key in globalSave.hotkeys) { //Restore decoded data\n                const array = globalSave.hotkeys[key as hotkeysList];\n                for (let i = 0; i < array.length; i++) {\n                    array[i] = decoder.decode(Uint8Array.from(array[i], (c) => c.codePointAt(0) as number));\n                }\n            }\n            if (!(globalSave.intervals.offline >= 20)) { globalSave.intervals.offline = 20; } //Fix NaN and undefined\n            for (let i = globalSave.toggles.length; i < globalSaveStart.toggles.length; i++) {\n                globalSave.toggles[i] = false;\n            }\n            for (let i = globalSave.MDSettings.length; i < globalSaveStart.MDSettings.length; i++) {\n                globalSave.MDSettings[i] = false;\n            }\n            for (let i = globalSave.SRSettings.length; i < globalSaveStart.SRSettings.length; i++) {\n                globalSave.SRSettings[i] = false;\n            }\n            for (const key in globalSaveStart.hotkeys) {\n                globalSave.hotkeys[key as hotkeysList] ??= ['None', 'None'];\n            }\n        } catch (error) {\n            Notify('Global settings failed to parse, default ones will be used instead');\n            console.log(`(Full parse error) ${error}`);\n        }\n    }\n    (getId('decimalPoint') as HTMLInputElement).value = globalSave.format[0];\n    (getId('thousandSeparator') as HTMLInputElement).value = globalSave.format[1];\n    (getId('offlineInterval') as HTMLInputElement).value = `${globalSave.intervals.offline}`;\n    (getId('numbersInterval') as HTMLInputElement).value = `${globalSave.intervals.numbers}`;\n    (getId('visualInterval') as HTMLInputElement).value = `${globalSave.intervals.visual}`;\n    (getId('autoSaveInterval') as HTMLInputElement).value = `${globalSave.intervals.autoSave / 1000}`;\n    for (let i = 0; i < globalSaveStart.toggles.length; i++) { toggleSpecial(i, 'global'); }\n    if (globalSave.fontSize !== 16) { changeFontSize(true); } //Also sets breakpoints for screen size\n    if (globalSave.toggles[4]) { getId('globalStats').style.display = 'none'; }\n    if (globalSave.toggles[3]) {\n        getQuery('#footer > div:first-child').style.display = 'none';\n        const fake2 = document.createElement('div');\n        fake2.style.height = 'max(calc(6.08em + 32px), 7.92em)';\n        getId('body').prepend(getId('footer'), fake2);\n        getId('fakeFooter').after(getId('shortcuts'));\n        const div = document.createElement('div');\n        div.append(getId('footerStats'), getQuery('#footerMain > nav'), getId('stageSelect'));\n        getId('footerMain').append(div, getId('subtabs'));\n        specialHTML.styleSheet.textContent += `.insideTab { margin-top: 0.6rem; }\n            #footer { top: 0; bottom: unset; }\n            #footerMain { flex-direction: row; padding: 0.6em 0; gap: 0.6em; }\n            #footerMain > div { display: flex; flex-direction: column; row-gap: 0.6em; margin: 0 0 0 auto; }\n            #footerMain > div > nav { display: flex; flex-flow: row nowrap; justify-content: center; column-gap: 0.4em; }\n            #footerStats { justify-content: center; column-gap: 0.6em; margin: 0; }\n            #stageSelect { position: unset; margin: 0; max-width: unset; }\n            #subtabs { flex-flow: column-reverse wrap; gap: 0.6em !important; align-self: end; margin: 0 auto 0 0 !important; max-height: 6.72em; width: 0; /* min-width: 7em; */ }\n            #footerMain button, #shortcuts button { width: min-content; min-width: 4em; height: 2em; border-radius: 10px; font-size: 0.92em; }\n            #subtabs button { width: 100%; min-width: 7em; }\n            #globalStats { bottom: 3.04em; right: calc(50vw - 6.325em); }\n            #shortcuts { flex-direction: row-reverse; gap: 0.4em; justify-content: center; position: fixed; width: 100vw; max-width: unset; bottom: 0.6em; margin: 0; }\n            #fakeFooter { height: 3.04em; } `;\n    }\n    if (globalSave.toggles[2]) { body.classList.remove('noTextSelection'); }\n    if (globalSave.toggles[1]) {\n        const elementsArea = getId('upgradeSubtabElements');\n        elementsArea.id = 'ElementsTab';\n        getId('upgradeTab').after(elementsArea);\n\n        const elementsButton = getId('upgradeSubtabBtnElements');\n        elementsButton.id = 'ElementsTabBtn';\n        elementsButton.classList.add('stage4Include');\n        getId('upgradeTabBtn').after(elementsButton);\n\n        global.tabs.Elements = {\n            current: 'Elements',\n            list: []\n        };\n        global.tabs.upgrade.list.splice(global.tabs.upgrade.list.indexOf('Elements'), 1);\n        global.tabs.list.splice(global.tabs.list.indexOf('upgrade') + 1, 0, 'Elements');\n    }\n\n    if (globalSave.MDSettings[0]) {\n        toggleSpecial(0, 'mobile');\n        (document.getElementById('MDMessage1') as HTMLElement).remove();\n        specialHTML.styleSheet.textContent += `html.noTextSelection, img, input[type = \"image\"], button, #load, a, #notifications > p, #globalStats { user-select: none; -webkit-user-select: none; -webkit-touch-callout: none; } /* Safari junk to disable image hold menu and text selection */\n            #themeArea > div > div { position: unset; display: flex; width: 15em; }\n            #themeArea > div > button { display: none; } /* More Safari junk to make windows work without focus */`;\n        (getId('file') as HTMLInputElement).accept = ''; //Accept for unknown reason not properly supported on phones\n        global.debug.MDStrangePage = 1;\n\n        for (let i = 0; i <= 2; i++) {\n            const arrow = document.createElement('button');\n            arrow.innerHTML = '<span class=\"downArrow\"></span>';\n            arrow.type = 'button';\n            getId(`reset${i}Main`).append(arrow);\n            arrow.addEventListener('click', () => getId(`reset${i}Main`).classList.toggle('open'));\n            arrow.addEventListener('blur', () => getId(`reset${i}Main`).classList.remove('open'));\n        }\n        specialHTML.styleSheet.textContent += `#resets { row-gap: 1em; }\n            #resets > section { position: relative; flex-direction: row; justify-content: center; width: unset; padding: unset; row-gap: unset; background-color: unset; border: unset; }\n            #resets > section:not(.open) > p { display: none !important; }\n            #resets > section > button:last-of-type { display: flex; justify-content: center; align-items: center; width: 2.2em; margin-left: -2px; }\n            #resets .downArrow { width: 1.24em; height: 1.24em; }\n            #resets p { position: absolute; width: 17.4em; padding: 0.5em 0.6em 0.6em; background-color: var(--window-color); border: 2px solid var(--window-border); top: calc(100% - 2px); z-index: 2; box-sizing: content-box; } `;\n\n        const createUpgButton = document.createElement('button');\n        createUpgButton.className = 'hollowButton';\n        createUpgButton.textContent = 'Create';\n        createUpgButton.id = 'upgradeCreate';\n        createUpgButton.type = 'button';\n        getId('toggleHover0').after(createUpgButton);\n\n        const createInfButton = document.createElement('button');\n        createInfButton.className = 'hollowButton';\n        createInfButton.textContent = 'Activate';\n        createInfButton.id = 'inflationActivate';\n        createInfButton.type = 'button';\n        getId('inflationRefund').before(createInfButton);\n\n        const pages = document.createElement('div');\n        pages.id = 'strangenessPages';\n        pages.innerHTML = '<button type=\"button\" id=\"strangenessPage1\" class=\"stage1borderImage hollowButton\">1</button><button type=\"button\" id=\"strangenessPage2\" class=\"stage2borderImage hollowButton\">2</button><button type=\"button\" id=\"strangenessPage3\" class=\"stage3borderImage hollowButton\">3</button><button type=\"button\" id=\"strangenessPage4\" class=\"stage4borderImage hollowButton\">4</button><button type=\"button\" id=\"strangenessPage5\" class=\"stage5borderImage hollowButton\">5</button><button type=\"button\" id=\"strangenessPage6\" class=\"stage6borderImage hollowButton\">6</button><button type=\"button\" id=\"strangenessCreate\" class=\"hollowButton\">Create</button>';\n        specialHTML.styleSheet.textContent += `#strangenessPages { display: flex; justify-content: center; column-gap: 0.36em; }\n            #strangenessPages button { width: 2.08em; height: calc(2.08em - 2px); border-top: none; border-radius: 0 0 4px 4px; }\n            #strangenessCreate { width: unset !important; padding: 0 0.4em; } `;\n        getId('strangenessResearch').append(pages);\n\n        const mainLi = getId('MDLi');\n        const MDToggle1 = document.createElement('li');\n        MDToggle1.innerHTML = '<label>Keep mouse events<button type=\"button\" id=\"MDToggle1\" class=\"specialToggle\">OFF</button></label>';\n        const MDToggle2 = document.createElement('li');\n        MDToggle2.innerHTML = '<label>Allow zoom<button type=\"button\" id=\"MDToggle2\" class=\"specialToggle\">OFF</button></label>';\n        mainLi.after(MDToggle1, MDToggle2);\n        for (let i = 1; i < globalSaveStart.MDSettings.length; i++) {\n            getId(`MDToggle${i}`).addEventListener('click', () => {\n                toggleSpecial(i, 'mobile', true, i === 1);\n                if (i === 2) {\n                    (getId('viewportMeta') as HTMLMetaElement).content = `width=device-width${globalSave.MDSettings[2] ? '' : ', minimum-scale=1.0, maximum-scale=1.0'}, initial-scale=1.0`;\n                }\n            });\n            toggleSpecial(i, 'mobile');\n        }\n        if (globalSave.MDSettings[2]) { (getId('viewportMeta') as HTMLMetaElement).content = 'width=device-width, initial-scale=1.0'; }\n\n        const refreshButton = document.createElement('button');\n        refreshButton.className = 'hollowButton';\n        refreshButton.textContent = 'Reload';\n        refreshButton.type = 'button';\n        mainLi.append(refreshButton);\n        refreshButton.addEventListener('click', async() => {\n            if (await Confirm('Reload the page?\\n(Game will not autosave)')) { window.location.reload(); }\n        });\n    }\n    if (globalSave.SRSettings[0]) {\n        toggleSpecial(0, 'reader');\n        const message = getId('SRMessage1');\n        message.textContent = 'Screen reader support is enabled, disable it if its not required';\n        message.className = 'greenText';\n        message.ariaHidden = 'true';\n        for (let i = 0; i <= 3; i++) {\n            const effectID = getQuery(`#${i === 0 ? 'solarMass' : `star${i}`}Effect > span.info`);\n            effectID.classList.remove('greenText');\n            effectID.before(' (');\n            effectID.after(')');\n        }\n        for (let i = 1; i <= 2; i++) {\n            const effectID = getQuery(`#merge${i}Effect > span.info`);\n            effectID.classList.remove('greenText');\n            effectID.before(' (');\n            effectID.after(')');\n        }\n        specialHTML.styleSheet.textContent += `#starEffects > p > span, #mergeEffects > p > span { display: unset !important; }\n            #starEffects, #mergeEffects { cursor: default; } `;\n        for (let i = 0; i < playerStart.strange.length; i++) { getId(`strange${i}`).tabIndex = 0; }\n\n        const SRMainDiv = document.createElement('article');\n        SRMainDiv.innerHTML = '<h5>Information for the Screen reader</h5><p id=\"SRTab\" aria-live=\"polite\"></p><p id=\"SRStage\" aria-live=\"polite\"></p><p id=\"SRMain\" aria-live=\"assertive\"></p>';\n        SRMainDiv.className = 'reader';\n        getId('fakeFooter').before(SRMainDiv);\n\n        const SRToggle1 = document.createElement('li');\n        SRToggle1.innerHTML = '<label>Keep tab index on created Upgrades<button type=\"button\" id=\"SRToggle1\" class=\"specialToggle\">OFF</button></label>';\n        const SRToggle2 = document.createElement('li');\n        SRToggle2.innerHTML = '<label>Keep tab index on primary buttons<button type=\"button\" id=\"SRToggle2\" class=\"specialToggle\">OFF</button></label>';\n        getId('SRLi').after(SRToggle1, SRToggle2);\n\n        const primaryIndex = () => {\n            const newTab = globalSave.SRSettings[2] ? 0 : -1;\n            for (const tabText of global.tabs.list) {\n                getId(`${tabText}TabBtn`).tabIndex = newTab;\n                for (const subtabText of global.tabs[tabText].list) {\n                    getId(`${tabText}SubtabBtn${subtabText}`).tabIndex = newTab;\n                }\n            }\n            for (let i = 1; i < global.stageInfo.word.length; i++) {\n                getId(`stageSwitch${i}`).tabIndex = newTab;\n            }\n        };\n        for (let i = 1; i < globalSaveStart.SRSettings.length; i++) {\n            getId(`SRToggle${i}`).addEventListener('click', () => {\n                toggleSpecial(i, 'reader', true);\n                if (i === 2) {\n                    primaryIndex();\n                }\n            });\n            toggleSpecial(i, 'reader');\n        }\n        if (globalSave.SRSettings[2]) { primaryIndex(); }\n    } else {\n        const index = globalSave.toggles[0] ? 0 : 1;\n        getQuery('#SRMessage1 span').textContent = `${globalSave.hotkeys.tabLeft[index]} and ${globalSave.hotkeys.tabRight[index]}`;\n        getQuery('#SRMessage1 span:last-of-type').textContent = `${globalSave.hotkeys.subtabDown[index]} and ${globalSave.hotkeys.subtabUp[index]}`;\n    }\n\n    let oldVersion = player.version;\n    const save = localStorage.getItem(specialHTML.localStorage.main);\n    if (save !== null) {\n        oldVersion = updatePlayer(JSON.parse(atob(save)));\n    } else {\n        prepareVacuum(false); //Set buildings values\n        updatePlayer(deepClone(playerStart));\n        player.buildings[3][0].current.setValue('5.9722e27');\n    }\n\n    /* Global */\n    assignHotkeys();\n    const MD = globalSave.MDSettings[0];\n    const SR = globalSave.SRSettings[0];\n    const PC = !MD || globalSave.MDSettings[1];\n    const releaseHotkey = (event: KeyboardEvent | null) => {\n        const hotkeys = global.hotkeys;\n        if (hotkeys.shift && (event === null || event.key === 'Shift')) {\n            hotkeys.shift = false;\n            numbersUpdate();\n        }\n        if (hotkeys.ctrl && (event === null || event.key === 'Control')) {\n            hotkeys.ctrl = false;\n            numbersUpdate();\n        }\n        hotkeys.repeat = false;\n        hotkeys.tab = false;\n    };\n    body.addEventListener('contextmenu', (event) => {\n        const activeType = (document.activeElement as HTMLInputElement)?.type;\n        if (activeType !== 'text' && activeType !== 'number' && !globalSave.developerMode) { event.preventDefault(); }\n    });\n    body.addEventListener('keydown', (key) => detectHotkey(key));\n    body.addEventListener('keyup', releaseHotkey);\n    if (PC) {\n        body.addEventListener('mouseup', cancelRepeat);\n        body.addEventListener('mouseleave', () => {\n            releaseHotkey(null);\n            cancelRepeat();\n        });\n    }\n    if (MD) {\n        body.addEventListener('touchstart', (event) => {\n            specialHTML.mobileDevice.start = [event.touches[0].clientX, event.touches[0].clientY];\n        });\n        body.addEventListener('touchend', (event) => {\n            cancelRepeat();\n            const notAllowed = [getId('globalStats'), getId('footerMain')]; //[0] Shouldn't be changed\n            for (let target = event.target as HTMLElement; target != null; target = target.parentElement as HTMLElement) {\n                if (notAllowed.includes(target)) {\n                    if (target !== notAllowed[0]) { notAllowed[0].style.opacity = '1'; }\n                    return;\n                }\n            }\n            notAllowed[0].style.opacity = '1';\n            handleTouchHotkeys(event);\n        });\n        body.addEventListener('touchcancel', () => {\n            releaseHotkey(null);\n            cancelRepeat();\n        });\n    }\n    {\n        const hoverEvent = (event: MouseEvent) => {\n            const element = event.currentTarget as HTMLElement;\n            const window = getId('hoverWindow');\n            window.textContent = element.dataset.title as string;\n            window.style.display = '';\n            const position = (event: MouseEvent) => {\n                window.style.left = `${Math.min(event.clientX, document.documentElement.clientWidth - window.getBoundingClientRect().width)}px`;\n                window.style.top = `${event.clientY}px`;\n            };\n            position(event);\n            element.addEventListener('mousemove', position);\n            element.addEventListener('mouseleave', () => {\n                window.style.display = 'none';\n                element.removeEventListener('mousemove', position);\n            }, { once: true });\n        };\n        for (const element of getClass('hasTitle')) { element.addEventListener('mouseenter', hoverEvent); }\n    }\n    for (let i = 0; i < globalSaveStart.toggles.length; i++) {\n        getId(`globalToggle${i}`).addEventListener('click', () => {\n            toggleSpecial(i, 'global', true, i === 1 || i === 3);\n            if (i === 0) {\n                assignHotkeys();\n                const index = globalSave.toggles[0] ? 0 : 1;\n                for (const key in globalSaveStart.hotkeys) { getQuery(`#${key}Hotkey button`).textContent = globalSave.hotkeys[key as hotkeysList][index]; }\n            } else if (i === 2) {\n                document.documentElement.classList[globalSave.toggles[2] ? 'remove' : 'add']('noTextSelection');\n            } else if (i === 4) {\n                getId('globalStats').style.display = !globalSave.toggles[4] ? '' : 'none';\n                visualUpdate();\n                numbersUpdate();\n            }\n        });\n    }\n    for (let i = 0; i < playerStart.toggles.normal.length; i++) {\n        getId(`toggleNormal${i}`).addEventListener('click', () => toggleSwap(i, 'normal', true));\n    }\n    for (let i = 0; i < playerStart.toggles.confirm.length; i++) {\n        getId(`toggleConfirm${i}`).addEventListener('click', () => toggleConfirm(i, true));\n    }\n    for (let i = 0; i < specialHTML.longestBuilding; i++) {\n        getId(`toggleBuilding${i}`).addEventListener('click', () => toggleSwap(i, 'buildings', true));\n    }\n    for (let i = 0; i < playerStart.toggles.hover.length; i++) {\n        getId(`toggleHover${i}`).addEventListener('click', () => toggleSwap(i, 'hover', true));\n    }\n    for (let i = 0; i < playerStart.toggles.max.length; i++) {\n        getId(`toggleMax${i}`).addEventListener('click', () => toggleSwap(i, 'max', true));\n    }\n    for (let i = 0; i < playerStart.toggles.auto.length; i++) {\n        getId(`toggleAuto${i}`).addEventListener('click', () => {\n            toggleSwap(i, 'auto', true);\n            if (i === 5) {\n                for (let s = 1; s <= 6; s++) { autoUpgradesSet(s); }\n            } else if (i === 6) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researches', s); }\n            } else if (i === 7) {\n                for (let s = 1; s <= 6; s++) { autoResearchesSet('researchesExtra', s); }\n            } else if (i === 8) {\n                autoElementsSet();\n            }\n        });\n    }\n\n    /* Stage tab */\n    {\n        const button = getId('reset2Button');\n        const footer = getId('reset2Footer');\n        const repeatFunc = () => repeatFunction(endResetUser);\n        button.addEventListener('click', endResetUser);\n        footer.addEventListener('click', endResetUser);\n        if (PC) {\n            button.addEventListener('mousedown', repeatFunc);\n            footer.addEventListener('mousedown', repeatFunc);\n        }\n        if (MD) {\n            button.addEventListener('touchstart', repeatFunc);\n            footer.addEventListener('touchstart', repeatFunc);\n        }\n    } {\n        const button = getId('reset1Button');\n        const footer = getId('reset1Footer');\n        const repeatFunc = () => repeatFunction(() => {\n            if (player.inflation.vacuum || player.stage.active >= 4) { return; }\n            void stageResetUser();\n        });\n        button.addEventListener('click', stageResetUser);\n        footer.addEventListener('click', stageResetUser);\n        if (PC) {\n            button.addEventListener('mousedown', repeatFunc);\n            footer.addEventListener('mousedown', repeatFunc);\n        }\n        if (MD) {\n            button.addEventListener('touchstart', repeatFunc);\n            footer.addEventListener('touchstart', repeatFunc);\n        }\n    } {\n        const button = getId('reset0Button');\n        const footer = getId('reset0Footer');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            if (active === 1) {\n                void dischargeResetUser();\n            } else if (active === 2) {\n                void vaporizationResetUser();\n            } else if (active === 3) {\n                void rankResetUser();\n            } else if (active === 4) {\n                void collapseResetUser();\n            } else if (active === 5) {\n                void mergeResetUser();\n            } else if (active === 6) {\n                void nucleationResetUser();\n            }\n        };\n        const repeatFunc = () => repeatFunction(() => {\n            if (player.stage.active !== 1 && player.stage.active !== 3) { return; }\n            clickFunc();\n        });\n        button.addEventListener('click', clickFunc);\n        footer.addEventListener('click', clickFunc);\n        if (PC) {\n            button.addEventListener('mousedown', repeatFunc);\n            footer.addEventListener('mousedown', repeatFunc);\n        }\n        if (MD) {\n            button.addEventListener('touchstart', repeatFunc);\n            footer.addEventListener('touchstart', repeatFunc);\n        }\n    } {\n        const button = getId('resetExtraFooter');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            if (active === 4) {\n                buyBuilding(3, 5);\n            } else if (active === 5) {\n                void collapseResetUser();\n            } else if (active === 6) {\n                void mergeResetUser();\n            }\n        };\n        const repeatFunc = () => {\n            repeatFunction(() => {\n                if (player.stage.active !== 4) { return; }\n                clickFunc();\n            });\n        };\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', repeatFunc); }\n        if (MD) { button.addEventListener('touchstart', repeatFunc); }\n    }\n    const getMakeCount = () => global.hotkeys.shift ? (global.hotkeys.ctrl ? 100 : 1) : global.hotkeys.ctrl ? 10 : undefined;\n    for (let i = 1; i < specialHTML.longestBuilding; i++) {\n        const button = getId(`building${i}Btn`);\n        const clickFunc = () => buyBuilding(i, player.stage.active, getMakeCount());\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n        if (MD) { button.addEventListener('touchstart', () => repeatFunction(clickFunc)); }\n    }\n    for (let i = 0; i < playerStart.verses.length; i++) {\n        const button = getId(`verse${i}Btn`);\n        const clickFunc = () => buyVerse(i);\n        button.addEventListener('click', clickFunc);\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n        if (MD) { button.addEventListener('touchstart', () => repeatFunction(clickFunc)); }\n    } {\n        const button = getId('makeAllStructures');\n        const footer = getId('structuresFooter');\n        button.addEventListener('click', buyAll);\n        footer.addEventListener('click', () => {\n            if (global.hotkeys.shift) {\n                toggleSwap(0, 'buildings', true);\n            } else { buyAll(); }\n        });\n        if (PC) {\n            button.addEventListener('mousedown', () => repeatFunction(buyAll));\n            footer.addEventListener('mousedown', () => {\n                if (!global.hotkeys.shift) { repeatFunction(buyAll); }\n            });\n        }\n        if (MD) {\n            button.addEventListener('touchstart', () => repeatFunction(buyAll));\n            footer.addEventListener('touchstart', () => {\n                if (!global.hotkeys.shift) { repeatFunction(buyAll); }\n            });\n        }\n    }\n    getId('buyAnyInput').addEventListener('focus', () => {\n        const window = getQuery('#buyAnyMain > label');\n        showAndFix(window);\n        const input = getId('buyAnyInput') as HTMLInputElement;\n        const change = () => {\n            player.toggles.shop.input = Math.max(Math.trunc(Number(input.value)), 0);\n            input.value = format(player.toggles.shop.input, { type: 'input' });\n            numbersUpdate();\n        };\n        input.addEventListener('change', change);\n        input.addEventListener('blur', () => {\n            window.style.display = 'none';\n            input.removeEventListener('change', change);\n        }, { once: true });\n    });\n    getId('autoWaitInput').addEventListener('focus', () => {\n        const window = getQuery('#autoWaitMain > label');\n        showAndFix(window);\n        const input = getId('autoWaitInput') as HTMLInputElement;\n        const change = () => {\n            if (!global.offline.active) {\n                const value = Math.max(Number(input.value), 1);\n                player.toggles.shop.wait[player.stage.active] = isNaN(value) ? 2 : value;\n            }\n            input.value = format(player.toggles.shop.wait[player.stage.active], { type: 'input' });\n        };\n        input.addEventListener('change', change);\n        input.addEventListener('blur', () => {\n            window.style.display = 'none';\n            input.removeEventListener('change', change);\n        }, { once: true });\n    });\n\n    for (let i = 0; i < global.challengesInfo.length; i++) {\n        const image = getId(`challenge${i + 1}`);\n        if (!MD) { image.addEventListener('mouseenter', () => hoverChallenge(i)); }\n        image.addEventListener('click', () => { global.lastChallenge[0] === i ? enterExitChallengeUser(i) : hoverChallenge(i); });\n    }\n    getId('challengeName').addEventListener('click', () => { toggleSupervoid(true); });\n    getId('rewardsType').addEventListener('click', () => {\n        changeRewardType();\n        getChallenge0Reward(global.lastChallenge[1]);\n    });\n    for (let s = 1; s <= 5; s++) {\n        const image = getId(`voidReward${s}`);\n        const clickFunc = () => {\n            global.lastChallenge[1] = s;\n            getChallenge0Reward(s);\n        };\n        image.addEventListener('mouseenter', clickFunc);\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                clickFunc();\n            });\n        }\n    }\n\n    /* Upgrade tab */\n    for (let i = 0; i < specialHTML.longestUpgrade; i++) {\n        const image = getId(`upgrade${i + 1}`);\n        const hoverFunc = () => hoverUpgrades(i, 'upgrades');\n        const clickFunc = () => buyUpgrades(i, player.stage.active, 'upgrades');\n        if (PC) {\n            image.addEventListener('mouseenter', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n        if (MD) {\n            image.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { repeatFunction(clickFunc); }\n            });\n        } else {\n            image.addEventListener('click', clickFunc);\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearch; i++) {\n        const label = getId(`research${i + 1}`);\n        const image = getQuery(`#research${i + 1} > input`);\n        const hoverFunc = () => hoverUpgrades(i, 'researches');\n        const clickFunc = () => buyUpgrades(i, player.stage.active, 'researches');\n        if (PC) {\n            label.addEventListener('mouseenter', hoverFunc);\n            image.addEventListener('mouseenter', () => {\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n        if (MD) {\n            label.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { repeatFunction(clickFunc); }\n            });\n        } else {\n            label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            image.addEventListener('click', clickFunc);\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n    }\n    for (let i = 0; i < specialHTML.longestResearchExtra; i++) {\n        const label = getId(`researchExtra${i + 1}`);\n        const image = getQuery(`#researchExtra${i + 1} > input`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesExtra');\n        const clickFunc = () => buyUpgrades(i, player.stage.active, 'researchesExtra');\n        if (PC) {\n            label.addEventListener('mouseenter', hoverFunc);\n            image.addEventListener('mouseenter', () => {\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n        if (MD) {\n            label.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { repeatFunction(clickFunc); }\n            });\n        } else {\n            label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            image.addEventListener('click', clickFunc);\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n    }\n    for (let i = 0; i < playerStart.researchesAuto.length; i++) {\n        const label = getId(`researchAuto${i + 1}`);\n        const image = getQuery(`#researchAuto${i + 1} > input`);\n        const hoverFunc = () => hoverUpgrades(i, 'researchesAuto');\n        const clickFunc = () => handleAutoResearchCreation(i);\n        if (PC) {\n            label.addEventListener('mouseenter', hoverFunc);\n            image.addEventListener('mouseenter', () => {\n                if (player.toggles.hover[0]) { buyUpgrades(i, player.stage.active, 'researchesAuto'); }\n            });\n        }\n        if (MD) {\n            label.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { repeatFunction(clickFunc); }\n            });\n        } else {\n            label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            image.addEventListener('click', clickFunc);\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { buyUpgrades(i, player.stage.active, 'researchesAuto'); }\n            });\n        }\n    } {\n        const label = getId('ASR');\n        const image = getQuery('#ASR > input');\n        const hoverFunc = () => hoverUpgrades(0, 'ASR');\n        const clickFunc = () => buyUpgrades(0, player.stage.active, 'ASR');\n        if (PC) {\n            label.addEventListener('mouseenter', hoverFunc);\n            image.addEventListener('mouseenter', () => {\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n        if (MD) {\n            label.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { repeatFunction(clickFunc); }\n            });\n        } else {\n            label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n            image.addEventListener('click', clickFunc);\n        }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n    }\n    if (MD) {\n        const button = getId('upgradeCreate');\n        const clickFunc = () => {\n            const active = player.stage.active;\n            const last = global.lastUpgrade[active];\n            if (last[0] !== null) {\n                if (last[1] === 'researchesAuto') { return handleAutoResearchCreation(last[0]); }\n                buyUpgrades(last[0], active, last[1]);\n            }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    {\n        const button = getId('element0');\n        const dblclickFunc = () => {\n            global.lastElement = 0;\n            getUpgradeDescription(0, 'elements');\n        };\n        if (SR) {\n            getId('element1').addEventListener('keydown', (event) => {\n                if (event.code !== 'Tab' || detectShift(event) !== true) { return; }\n                const element = getId('element0');\n                element.tabIndex = 0;\n                element.ariaHidden = 'false';\n            });\n            button.addEventListener('keydown', (event) => {\n                if (event.code === 'Enter' && detectShift(event) === false) {\n                    event.preventDefault();\n                    dblclickFunc();\n                }\n            });\n            button.addEventListener('blur', () => {\n                const element = getId('element0');\n                element.tabIndex = -1;\n                element.ariaHidden = 'true';\n            });\n        }\n        if (PC) { button.addEventListener('dblclick', dblclickFunc); }\n        if (MD) {\n            button.addEventListener('touchstart', () => {\n                if (global.intervalsId.mouseRepeat !== undefined) { return; }\n                global.intervalsId.mouseRepeat = setTimeout(dblclickFunc, 3000);\n            });\n        }\n    }\n    for (let i = 1; i < playerStart.elements.length; i++) {\n        const image = getId(`element${i}`);\n        const clickFunc = () => buyUpgrades(i, 4, 'elements');\n        const hoverFunc = () => hoverUpgrades(i, 'elements');\n        if (PC) {\n            image.addEventListener('mouseenter', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n            image.addEventListener('mousedown', () => repeatFunction(clickFunc));\n        }\n        if (MD) {\n            image.addEventListener('touchstart', () => {\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n                repeatFunction(clickFunc);\n            });\n        } else { image.addEventListener('click', clickFunc); }\n        if (PC || SR) {\n            image.addEventListener('focus', () => {\n                if (!global.hotkeys.tab) { return; }\n                hoverFunc();\n                if (player.toggles.hover[0]) { clickFunc(); }\n            });\n        }\n    }\n\n    /* Strangeness tab */\n    for (let i = 0; i < playerStart.strange.length; i++) {\n        const button = getId(`strange${i}`);\n        const open = (focus = false) => {\n            if (i === 0 && player.stage.true < 6 && player.milestones[4][0] < 8) { return; }\n            const html = getId(`strange${i}EffectsMain`);\n            if (html.dataset.focus === 'true') { return; }\n            const button = getId(`strange${i}`);\n            if (focus) {\n                html.dataset.focus = 'true';\n                button.addEventListener('blur', () => {\n                    html.style.display = 'none';\n                    html.dataset.focus = '';\n                }, { once: true });\n            } else {\n                button.addEventListener('mouseleave', () => {\n                    if (html.dataset.focus === 'true') { return; }\n                    html.style.display = 'none';\n                }, { once: true });\n            }\n            html.style.display = '';\n            numbersUpdate();\n        };\n        button.addEventListener('mouseenter', () => open());\n        if (SR) { button.addEventListener('focus', () => open(true)); }\n    }\n    for (let s = 1; s < playerStart.strangeness.length; s++) {\n        if (MD) { getId(`strangenessPage${s}`).addEventListener('click', () => MDStrangenessPage(s)); }\n        for (let i = 0; i < playerStart.strangeness[s].length; i++) {\n            const label = getId(`strange${i + 1}Stage${s}`);\n            const image = getQuery(`#strange${i + 1}Stage${s} > input`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'strangeness');\n            const clickFunc = () => buyStrangeness(i, s, 'strangeness');\n            if (PC) {\n                label.addEventListener('mouseenter', hoverFunc);\n                image.addEventListener('mouseenter', () => {\n                    if (player.toggles.hover[1]) { clickFunc(); }\n                });\n            }\n            if (MD) {\n                label.addEventListener('touchstart', () => {\n                    hoverFunc();\n                    if (player.toggles.hover[1]) { repeatFunction(clickFunc); }\n                });\n            } else {\n                label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n                image.addEventListener('click', clickFunc);\n            }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                    if (player.toggles.hover[1]) { clickFunc(); }\n                });\n            }\n        }\n    }\n    if (MD) {\n        const button = getId('strangenessCreate');\n        const clickFunc = () => {\n            const last = global.lastStrangeness;\n            if (last[0] !== null) { buyStrangeness(last[0], last[1], 'strangeness'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n    getId('strangenessVisibility').addEventListener('click', () => {\n        global.sessionToggles[1] = !global.sessionToggles[1];\n        getId('strangenessVisibility').textContent = `Permanent ones are ${global.sessionToggles[1] ? 'shown' : 'hidden'}`;\n        visualUpdate();\n    });\n\n    for (let s = 1; s < playerStart.milestones.length; s++) {\n        for (let i = 0; i < playerStart.milestones[s].length; i++) {\n            const image = getQuery(`#milestone${i + 1}Stage${s}Div > input`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'milestones');\n            if (PC) { image.addEventListener('mouseenter', hoverFunc); }\n            if (MD) { image.addEventListener('touchstart', hoverFunc); }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n\n    /* Inflation tab */\n    for (let s = 0; s <= 1; s++) {\n        for (let i = 0; i < playerStart.tree[s].length; i++) {\n            const label = getId(`inflation${i + 1}Tree${s + 1}`);\n            const image = getQuery(`#inflation${i + 1}Tree${s + 1} > input`);\n            const hoverFunc = () => hoverStrangeness(i, s, 'inflations');\n            if (PC) { label.addEventListener('mouseenter', hoverFunc); }\n            if (MD) {\n                label.addEventListener('touchstart', hoverFunc);\n            } else {\n                const clickFunc = () => buyStrangeness(i, s, 'inflations');\n                label.addEventListener('mousedown', () => repeatFunction(clickFunc));\n                image.addEventListener('click', clickFunc);\n            }\n            if (PC || SR) {\n                image.addEventListener('focus', () => {\n                    if (!global.hotkeys.tab) { return; }\n                    hoverFunc();\n                });\n            }\n        }\n    }\n    {\n        const button = getId('loadoutsName');\n        button.addEventListener('change', () => { (getId('loadoutsName') as HTMLInputElement).value = (getId('loadoutsName') as HTMLInputElement).value.trim(); });\n        button.addEventListener('keydown', (event) => {\n            if (detectShift(event) === false && event.code === 'Enter') {\n                event.preventDefault();\n                loadoutsSave();\n            }\n        });\n    }\n    getId('inflationRefund').addEventListener('click', () => void inflationRefund(global.hotkeys.shift));\n    getId('inflationLoadouts').addEventListener('click', () => {\n        const windowHTML = getId('loadoutsMain');\n        const status = windowHTML.style.display === 'none';\n        if (status) {\n            windowHTML.style.display = '';\n            loadoutsVisual(global.loadouts.input);\n        } else { windowHTML.style.display = 'none'; }\n        if (globalSave.SRSettings[0]) { getId('inflationLoadouts').ariaExpanded = `${status}`; }\n    });\n    getId('loadoutsEdit').addEventListener('change', () => {\n        const first = (getId('loadoutsEdit') as HTMLInputElement).value.split(',');\n        const appeared = {} as Record<number, number>;\n        const max = global.treeInfo[0].max;\n        const final = [];\n        for (let i = 0; i < first.length; i++) {\n            const index = first[i].indexOf('x');\n            let repeat = 1;\n            if (index !== -1) {\n                repeat = Number(first[i].slice(index + 1));\n                first[i] = first[i].slice(0, index);\n            }\n            const number = Math.trunc(Number(first[i]) - 1);\n            const inside = appeared[number] ?? 0;\n            const maxRepeats = max[number] - inside;\n            if (repeat > maxRepeats) { repeat = maxRepeats; }\n            if (isNaN(maxRepeats) || isNaN(repeat) || repeat < 1) { continue; }\n            appeared[number] = inside + repeat;\n            for (let r = 0; r < repeat; r++) { final.push(number); }\n        }\n        global.loadouts.input = final;\n        loadoutsVisual(final);\n    });\n    getId('loadoutsLoadAuto').addEventListener('click', () => {\n        if (!global.hotkeys.shift) { (getId('loadoutsName') as HTMLInputElement).value = 'Auto-generate'; }\n        loadoutsLoadAuto();\n    });\n    getId('loadoutsSave').addEventListener('click', loadoutsSave);\n    getId('loadoutsLoad').addEventListener('click', () => void loadoutsLoad());\n    getId('loadoutsMove').addEventListener('click', () => {\n        const name = (getId('loadoutsName') as HTMLInputElement).value;\n        let index;\n        const loadouts = player.inflation.loadouts;\n        for (let i = 0; i < loadouts.length; i++) {\n            if (name === loadouts[i][0]) {\n                index = i;\n                break;\n            }\n        }\n        if (index === undefined) { return; }\n        const deleted = loadouts.splice(index, 1)[0];\n        const newIndex = index + (global.hotkeys.shift ? -1 : 1);\n        if (newIndex < 0) {\n            loadouts.push(deleted);\n        } else if (newIndex > loadouts.length) {\n            loadouts.unshift(deleted);\n        } else { loadouts.splice(newIndex, 0, deleted); }\n        loadoutsRecreate();\n    });\n    getId('loadoutsDelete').addEventListener('click', () => {\n        const loadouts = player.inflation.loadouts;\n        const name = (getId('loadoutsName') as HTMLInputElement).value;\n        let index;\n        for (let i = 0; i < loadouts.length; i++) {\n            if (name === loadouts[i][0]) {\n                index = i;\n                break;\n            }\n        }\n        if (index === undefined) { return; }\n        loadouts.splice(index, 1);\n        loadoutsRecreate();\n    });\n    if (MD) {\n        const button = getId('inflationActivate');\n        const clickFunc = () => {\n            if (global.lastInflation[0] !== null) { buyStrangeness(global.lastInflation[0], global.lastInflation[1], 'inflations'); }\n        };\n        button.addEventListener('click', clickFunc);\n        button.addEventListener('touchstart', () => repeatFunction(clickFunc));\n        if (PC) { button.addEventListener('mousedown', () => repeatFunction(clickFunc)); }\n    }\n\n    /* Settings tab */\n    for (const number of [0, 2, 4, 9]) {\n        const button = getId(`toggleAuto${number}Info`);\n        const open = (hover = false) => {\n            const html = getId(`toggleAuto${number}Menu`);\n            if (html.dataset.click === 'true') { return; }\n            const button = getId(`toggleAuto${number}Info`);\n            const body = document.documentElement;\n            if (hover) {\n                button.addEventListener('mouseleave', () => {\n                    if (html.dataset.click === 'true') { return; }\n                    html.style.display = 'none';\n                }, { once: true });\n            } else {\n                html.dataset.click = 'true';\n                const fullClose = (event: MouseEvent) => {\n                    for (let target = event.target as HTMLElement; target != null; target = target.parentElement as HTMLElement) {\n                        if (html === target) { return; }\n                    }\n                    body.removeEventListener('click', fullClose, { capture: true });\n                    html.style.display = 'none';\n                    html.dataset.click = '';\n                };\n                body.addEventListener('click', fullClose, { capture: true });\n            }\n            showAndFix(html);\n        };\n        button.addEventListener('click', () => open());\n        if (PC) { button.addEventListener('mouseenter', () => open(true)); }\n    }\n    getId('vaporizationInput').addEventListener('change', () => {\n        const input = getId('vaporizationInput') as HTMLInputElement;\n        if (!global.offline.active) { player.vaporization.input[0] = Math.max(Number(input.value), 0); }\n        input.value = format(player.vaporization.input[0], { type: 'input' });\n    });\n    getId('vaporizationInputMax').addEventListener('change', () => {\n        const input = getId('vaporizationInputMax') as HTMLInputElement;\n        if (!global.offline.active) { player.vaporization.input[1] = Math.max(Number(input.value), 0); }\n        input.value = format(player.vaporization.input[1], { type: 'input' });\n    });\n    getId('collapseInput').addEventListener('change', () => {\n        const input = getId('collapseInput') as HTMLInputElement;\n        if (!global.offline.active) { player.collapse.input[0] = Math.max(Number(input.value), 1); }\n        input.value = format(player.collapse.input[0], { type: 'input' });\n    });\n    getId('collapseInputWait').addEventListener('change', () => {\n        const input = getId('collapseInputWait') as HTMLInputElement;\n        if (!global.offline.active) { player.collapse.input[1] = Number(input.value); }\n        input.value = format(player.collapse.input[1], { type: 'input' });\n    });\n    getId('collapseAddNewPoint').addEventListener('change', () => {\n        const input = getId('collapseAddNewPoint') as HTMLInputElement;\n        const value = Number(input.value);\n        input.value = '';\n        if (global.offline.active) { return; }\n        if (isFinite(value)) {\n            if (value === 0) {\n                player.collapse.points = [];\n            } else {\n                const points = player.collapse.points;\n                const index = points.indexOf(Math.abs(value));\n                if (value > 0 && index === -1) {\n                    points.push(value);\n                    points.sort((a, b) => a - b);\n                } else if (value < 0 && index !== -1) {\n                    points.splice(index, 1);\n                    points.sort((a, b) => a - b);\n                }\n            }\n        }\n        global.collapseInfo.pointsLoop = 0;\n        updateCollapsePoints();\n    });\n    getId('mergeInput').addEventListener('change', () => {\n        const input = getId('mergeInput') as HTMLInputElement;\n        if (!global.offline.active) { player.merge.input[0] = Math.max(Math.trunc(Number(input.value)), 0); }\n        input.value = format(player.merge.input[0], { type: 'input' });\n    });\n    getId('mergeInputSince').addEventListener('change', () => {\n        const input = getId('mergeInputSince') as HTMLInputElement;\n        if (!global.offline.active) { player.merge.input[1] = Number(input.value); }\n        input.value = format(player.merge.input[1], { type: 'input' });\n    });\n    getId('stageInput').addEventListener('change', () => {\n        const input = getId('stageInput') as HTMLInputElement;\n        if (!global.offline.active) { player.stage.input = Math.max(Number(input.value), 0); }\n        input.value = format(player.stage.input, { type: 'input' });\n    });\n    getId('versionButton').addEventListener('click', openVersionInfo);\n    getId('hotkeysButton').addEventListener('click', openHotkeys);\n    getId('save').addEventListener('click', () => { saveGame(); });\n    getId('file').addEventListener('change', async() => {\n        const id = getId('file') as HTMLInputElement;\n        try {\n            loadGame(await (id.files as FileList)[0].text());\n        } finally { id.value = ''; }\n    });\n    getId('export').addEventListener('click', () => {\n        const exportReward = player.time.export;\n        if ((player.stage.true >= 7 || player.strange[0].total > 0) && (player.challenges.active === null || global.challengesInfo[player.challenges.active].resetType === 'stage') && exportReward[0] > 0) {\n            const { strange } = player;\n            const improved = player.tree[0][5] >= 1;\n            const conversion = Math.min(exportReward[0] / 86400_000, 1);\n            const quarks = (improved ? exportReward[1] : exportReward[1] / 2.5 + 1) * conversion;\n\n            strange[0].current += quarks;\n            strange[0].total += quarks;\n            exportReward[1] = Math.max(exportReward[1] - quarks, 0);\n            if (player.strangeness[5][8] >= 1) {\n                const strangelets = (improved ? exportReward[2] : exportReward[2] / 2.5) * conversion;\n                strange[1].current += strangelets;\n                strange[1].total += strangelets;\n                exportReward[2] -= strangelets;\n                assignBuildingsProduction.strange1();\n            }\n            assignBuildingsProduction.strange0();\n            exportReward[0] = 0;\n            numbersUpdate();\n        }\n\n        const save = saveGame(globalSave.developerMode);\n        if (save === null) { return; }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = replaceSaveFileSpecials();\n        a.click();\n    });\n    getId('saveConsole').addEventListener('click', async() => {\n        let value = await Prompt(\"Available options:\\n'Copy' \u2012 copy save file to the clipboard\\n'Delete' \u2012 delete your save file\\n'Clear' \u2012 clear all the domain data\\n'Global' \u2012 open options for global settings\\n(Adding '_' will skip options menu)\\nOr insert save file text here to load it\");\n        if (value === null || value === '') { return; }\n        let lower = value.trim().toLowerCase();\n        if (lower === 'global') {\n            value = await Prompt(\"Available options:\\n'Reset' \u2012 reset global settings\\n'Copy' \u2012 copy global settings to the clipboard\\nOr insert global settings text here to load it\");\n            if (value === null || value === '') { return; }\n            lower = `global_${value.trim().toLowerCase()}`;\n        }\n\n        if (lower === 'copy' || lower === 'global_copy') {\n            const save = lower === 'global_copy' ? saveGlobalSettings(true) : saveGame(true);\n            if (save !== null) {\n                try {\n                    await navigator.clipboard.writeText(save);\n                    Notify(`${lower === 'global_copy' ? 'Settings have' : 'Save has'} been copied to the clipboard`);\n                } catch (error) {\n                    console.warn(`Full error for being unable to write to the clipboard:\\n${error}`);\n                    if (await Confirm(\"Could not copy text into clipboard, press 'Confrim' to save it as a file instead\")) {\n                        const a = document.createElement('a');\n                        a.href = `data:text/plain,${save}`;\n                        a.download = `Fundamental ${lower === 'global_copy' ? 'settings' : 'save'} clipboard`;\n                        a.click();\n                    }\n                }\n            }\n        } else if (lower === 'delete' || lower === 'clear' || lower === 'global_reset') {\n            pauseGame();\n            if (lower === 'delete') {\n                localStorage.removeItem(specialHTML.localStorage.main);\n            } else if (lower === 'global_reset') {\n                localStorage.removeItem(specialHTML.localStorage.settings);\n            } else { localStorage.clear(); }\n            window.location.reload();\n            void Alert('Awaiting game reload');\n        } else if (value === 'devMode') {\n            globalSave.developerMode = !globalSave.developerMode;\n            Notify(`Developer mode is ${globalSave.developerMode ? 'now' : 'no longer'} active`);\n            saveGlobalSettings();\n        } else if (lower === 'achievement') {\n            Notify('Unlocked a new Achievement! (If there were any)');\n        } else if (lower === 'slow' || lower === 'free' || lower === 'boost') {\n            Notify('Game speed was increased by 1x');\n        } else if (lower === 'secret' || lower === 'global_secret' || lower === 'secret_secret') {\n            Notify(`Found a ${lower === 'secret_secret' ? \"ultra rare secret, but it doesn't proof anything\" : `${lower === 'global_secret' ? 'global' : 'rare'} secret, don't share it with anybody`}`);\n        } else if (lower === 'secret_proof') {\n            Notify('Found a proof that you were looking for!');\n        } else if (lower === 'quantum') {\n            getId('body').style.display = 'none';\n            document.documentElement.style.backgroundColor = 'black';\n            await Alert('Close when you are done enjoying the Quantum Vacuum');\n            document.documentElement.style.backgroundColor = '';\n            getId('body').style.display = '';\n            addIntoLog('Experienced the Quantum Vacuum');\n        } else {\n            if (value.length < 20) { return void Alert(`Input '${value}' doesn't match anything`); }\n            if (lower.includes('global_')) {\n                if (!await Confirm(\"Press 'Confirm' to load input as a new global settings, this will reload the page\\n(Input is too long to be displayed)\")) { return; }\n                localStorage.setItem(specialHTML.localStorage.settings, value[6] === '_' ? value.substring(7) : value);\n                window.location.reload();\n                void Alert('Awaiting game reload');\n            } else {\n                if (!await Confirm(\"Press 'Confirm' to load input as a save file\\n(Input is too long to be displayed)\")) { return; }\n                loadGame(value);\n            }\n        }\n    });\n    getId('switchTheme0').addEventListener('click', () => setTheme(null));\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`switchTheme${i}`).addEventListener('click', () => setTheme(i));\n    }\n    getId('saveFileNameInput').addEventListener('focus', () => {\n        const window = getId('saveFileNameLabel');\n        const input = getId('saveFileNameInput') as HTMLInputElement;\n        const changePreview = () => {\n            const value = input.value.trim();\n            getId('saveFileNamePreview').textContent = replaceSaveFileSpecials(value.length < 1 ? playerStart.fileName : value);\n        };\n        showAndFix(window);\n        changePreview();\n        const change = () => {\n            let testValue = input.value.trim();\n            if (testValue.length < 1) {\n                testValue = playerStart.fileName;\n                input.value = testValue;\n            }\n            player.fileName = testValue;\n        };\n        input.addEventListener('change', change);\n        input.addEventListener('input', changePreview);\n        input.addEventListener('blur', () => {\n            window.style.display = 'none';\n            input.removeEventListener('input', changePreview);\n            input.removeEventListener('change', change);\n        }, { once: true });\n    });\n    getId('offlineInterval').addEventListener('change', () => {\n        const input = getId('offlineInterval') as HTMLInputElement;\n        globalSave.intervals.offline = Math.min(Math.max(Math.trunc(Number(input.value)), 20), 6000);\n        input.value = `${globalSave.intervals.offline}`;\n        saveGlobalSettings();\n    });\n    getId('numbersInterval').addEventListener('change', () => {\n        const input = getId('numbersInterval') as HTMLInputElement;\n        globalSave.intervals.numbers = Math.min(Math.max(Math.trunc(Number(input.value)), 40), 200);\n        input.value = `${globalSave.intervals.numbers}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('visualInterval').addEventListener('change', () => {\n        const input = getId('visualInterval') as HTMLInputElement;\n        globalSave.intervals.visual = Math.min(Math.max(Math.trunc(Number(input.value)), 200), 2000);\n        input.value = `${globalSave.intervals.visual}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('autoSaveInterval').addEventListener('change', () => {\n        const input = getId('autoSaveInterval') as HTMLInputElement;\n        globalSave.intervals.autoSave = Math.min(Math.max(Math.trunc(Number(input.value)), 4), 1800) * 1000;\n        input.value = `${globalSave.intervals.autoSave / 1000}`;\n        saveGlobalSettings();\n        changeIntervals();\n    });\n    getId('thousandSeparator').addEventListener('change', () => changeFormat(false));\n    getId('decimalPoint').addEventListener('change', () => changeFormat(true));\n    getId('MDToggle0').addEventListener('click', () => toggleSpecial(0, 'mobile', true, true));\n    getId('SRToggle0').addEventListener('click', () => toggleSpecial(0, 'reader', true, true));\n    getId('pauseButton').addEventListener('click', pauseGameUser);\n    getId('showLog').addEventListener('click', openLog);\n    getId('reviewEvents').addEventListener('click', replayEvent);\n    getId('fullscreenButton').addEventListener('click', () => {\n        if (document.fullscreenElement === null) {\n            void document.documentElement.requestFullscreen({ navigationUI: 'hide' });\n        } else { void document.exitFullscreen(); }\n    });\n    getId('customFontSize').addEventListener('change', () => changeFontSize());\n\n    getId('stageHistorySave').addEventListener('change', () => {\n        const inputID = getId('stageHistorySave') as HTMLInputElement;\n        player.history.stage.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 20);\n        inputID.value = `${player.history.stage.input[0]}`;\n    });\n    getId('stageHistoryShow').addEventListener('change', () => {\n        const input = getId('stageHistoryShow') as HTMLInputElement;\n        player.history.stage.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.stage.input[1]}`;\n        global.debug.historyStage = null;\n        visualUpdate();\n    });\n    getId('endHistorySave').addEventListener('change', () => {\n        const inputID = getId('endHistorySave') as HTMLInputElement;\n        player.history.end.input[0] = Math.min(Math.max(Math.trunc(Number(inputID.value)), 0), 20);\n        inputID.value = `${player.history.end.input[0]}`;\n    });\n    getId('endHistoryShow').addEventListener('change', () => {\n        const input = getId('endHistoryShow') as HTMLInputElement;\n        player.history.end.input[1] = Math.min(Math.max(Math.trunc(Number(input.value)), 10), 100);\n        input.value = `${player.history.end.input[1]}`;\n        global.debug.historyEnd = null;\n        visualUpdate();\n    });\n\n    /* Footer */\n    {\n        const startEvent = (event: MouseEvent | TouchEvent) => {\n            const mouse = event instanceof MouseEvent;\n            const body = document.documentElement;\n            const screenWidth = body.clientWidth;\n            const screenHeight = body.clientHeight;\n\n            const html = event.currentTarget as HTMLElement;\n            let lastX = mouse ? event.clientX : event.changedTouches[0].clientX;\n            let lastY = mouse ? event.clientY : event.changedTouches[0].clientY;\n            const move = (event: MouseEvent | TouchEvent) => {\n                const newX = mouse ? (event as MouseEvent).clientX : (event as TouchEvent).changedTouches[0].clientX;\n                const newY = mouse ? (event as MouseEvent).clientY : (event as TouchEvent).changedTouches[0].clientY;\n                const current = html.getBoundingClientRect();\n                html.style.right = `${(1 - Math.min(Math.max(current.right + newX - lastX, current.width), screenWidth) / screenWidth) * 100}%`;\n                html.style.bottom = `${(1 - Math.min(Math.max(current.bottom + newY - lastY, current.height), screenHeight) / screenHeight) * 100}%`;\n                lastX = newX;\n                lastY = newY;\n\n                if (!mouse) { html.style.opacity = '1'; }\n            };\n            const removeEvents = mouse ? () => {\n                body.removeEventListener('mousemove', move);\n                body.removeEventListener('mouseup', removeEvents);\n                body.removeEventListener('mouseleave', removeEvents);\n                html.style.opacity = '';\n            } : () => {\n                body.removeEventListener('touchmove', move);\n                body.removeEventListener('touchend', removeEvents);\n                body.removeEventListener('touchcancel', removeEvents);\n            };\n            if (mouse) {\n                body.addEventListener('mousemove', move);\n                body.addEventListener('mouseup', removeEvents);\n                body.addEventListener('mouseleave', removeEvents);\n                html.style.opacity = '1';\n            } else {\n                event.preventDefault(); //To prevent scrolling, doesn't work sometimes\n                body.addEventListener('touchmove', move);\n                body.addEventListener('touchend', removeEvents);\n                body.addEventListener('touchcancel', removeEvents);\n                html.style.opacity = '0.2';\n            }\n        };\n        if (PC) { getId('globalStats').addEventListener('mousedown', startEvent); }\n        if (MD) { getId('globalStats').addEventListener('touchstart', startEvent, { capture: true }); }\n    }\n    for (const tabText of global.tabs.list) {\n        getId(`${tabText}TabBtn`).addEventListener('click', () => switchTab(tabText));\n        for (const subtabText of global.tabs[tabText].list) {\n            getId(`${tabText}SubtabBtn${subtabText}`).addEventListener('click', () => switchTab(tabText, subtabText));\n        }\n    }\n    for (let i = 1; i < global.stageInfo.word.length; i++) {\n        getId(`stageSwitch${i}`).addEventListener('click', () => switchStage(i));\n    }\n    getId('shiftFooter').addEventListener('click', () => {\n        global.hotkeys.shift = !global.hotkeys.shift;\n        numbersUpdate();\n    });\n\n    /* Post */\n    document.head.append(specialHTML.styleSheet);\n    stageUpdate(true, true);\n    if (globalSave.theme !== null) {\n        getId('currentTheme').textContent = global.stageInfo.word[globalSave.theme];\n        getId(`switchTheme${globalSave.theme}`).style.textDecoration = 'underline';\n        getId('switchTheme0').style.textDecoration = '';\n        setTheme();\n    }\n    if (save !== null) {\n        global.lastSave = handleOfflineTime();\n        Notify(`Welcome back, you were away for ${format(global.lastSave / 1000, { type: 'time', padding: false })}${oldVersion !== player.version ? `\\nGame has been updated from ${oldVersion} to ${player.version}` : ''}${globalSave.developerMode ?\n            `\\nGame loaded after ${format((Date.now() - playerStart.time.started) / 1000, { type: 'time', padding: false })}` : ''}\n        `);\n        void simulateOffline(global.lastSave);\n    } else {\n        pauseGame(false);\n    }\n    getId('body').style.display = '';\n    getId('loading').style.display = 'none';\n    document.title = `Fundamental ${playerStart.version}`;\n    specialHTML.cache.idMap.clear();\n    specialHTML.cache.queryMap.clear();\n    specialHTML.cache.classMap.clear();\n} catch (error) {\n    const stack = (error as { stack: string }).stack;\n    void Alert(`Game failed to load\\n${typeof stack === 'string' ? stack.replaceAll(`${window.location.origin}/`, '') : error}`, 2);\n    const buttonDiv = document.createElement('div');\n    buttonDiv.innerHTML = '<button type=\"button\" id=\"exportError\" style=\"width: 7em;\">Export save</button><button type=\"button\" id=\"deleteError\" style=\"width: 7em;\">Delete save</button>';\n    buttonDiv.style.cssText = 'display: flex; column-gap: 0.6em; margin-top: 0.4em;';\n    getId('loading').append(buttonDiv);\n    let exported = false;\n    getId('exportError').addEventListener('click', () => {\n        exported = true;\n        const save = localStorage.getItem(specialHTML.localStorage.main);\n        if (save === null) { return void Alert(\"Couldn't find any save files\"); }\n        const a = document.createElement('a');\n        a.href = `data:text/plain,${save}`;\n        a.download = 'Fundamental post error export';\n        a.click();\n    });\n    getId('deleteError').addEventListener('click', async() => {\n        if (!exported && !await Confirm(\"It's recommended to export save file first\\nPress 'Confirm' to confirm and delete your save file\")) { return; }\n        localStorage.removeItem(specialHTML.localStorage.main);\n        window.location.reload();\n        void Alert('Awaiting game reload');\n    });\n    throw error;\n}\n"],
  "mappings": "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",
  "names": ["checkTab", "tab", "subtab", "player", "global", "checkBuilding", "index", "stageIndex", "checkVerse", "checkUpgrade", "upgrade", "type", "galaxy", "autoStage", "allowedToBeReset", "check", "milestoneGetValue", "stars", "Overlimit", "milestoneCheck", "pointer", "reset", "type", "stageIndex", "dischargeInfo", "global", "energyStage", "energyType", "buildings", "discharge", "player", "elements", "i", "playerStart", "allowedToBeReset", "autoElementsSet", "energyRefund", "s", "building", "selfmade", "energy", "assignBuildingsProduction", "upgrades", "autoUpgradesSet", "researches", "calculateResearchCost", "autoResearchesSet", "researchesExtra", "deficit", "max", "assignResetInformation", "resetStage", "update", "full", "strangeness", "buildingResetValue", "cloneArray", "calculateMaxLevel", "switchTab", "stageUpdate", "resetVacuum", "level", "vacuum", "supervoid", "total", "universes", "assignMilestoneInformation", "start", "cloneBeforeReset", "depth", "clone", "loadFromClone", "buildingsClone", "trueStars", "prepareVacuum", "state", "buildings", "playerStart", "buildingsInfo", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "strangenessInfo", "global", "milestone1S1", "getQuery", "milestone1S2", "milestone2S2", "milestone1S3", "milestone2S4", "upgrades1Cost", "researches1Cost", "researches1Scaling", "strangeness1Cost", "strangeness1Scaling", "strangeness2Cost", "strangeness2Scaling", "strangeness3Cost", "strangeness3Scaling", "strangeness4Cost", "strangeness4Scaling", "strangeness5Cost", "strangeness5Scaling", "specialHTML", "getId", "globalSave", "s", "i", "newValue", "switchVacuum", "player", "visualTrueStageUnlocks", "playEvent", "setActiveStage", "resetVacuum", "addIntoLog", "timeUpdate", "tick", "timeWarp", "time", "player", "currentTime", "passedTime", "calculateEffects", "global", "simulateOffline", "auto", "autoBuy", "maxActive", "activeAll", "vacuum", "trueSeconds", "effectsCache", "passedSeconds", "assignBuildingsProduction", "exitChallengeAuto", "stageResetCheck", "mergeResetCheck", "stageResetReward", "Notify", "autoUpgradesBuy", "autoResearchesBuy", "i", "buyBuilding", "gainBuildings", "autoElementsBuy", "research", "awardMilestone", "failed", "collapseResetCheck", "assignResetInformation", "rankResetCheck", "vaporizationResetCheck", "dischargeResetCheck", "energy", "goals", "strangeness", "scale", "scaling", "next", "base", "preons", "selfBoost", "effect", "level", "discharges", "laterPreons", "post", "puddles", "maxTrue", "power", "rain", "drops", "rank", "mass", "delay", "stars", "logAny", "blackHoles", "elements", "massGain", "multiplier", "Overlimit", "disc", "levels", "transfer", "stability", "max", "groups", "early", "interstellar", "quarks", "tree", "challenge", "speed", "noHardcap", "visual", "structure", "preonsExcess", "preonCap", "index", "reset", "info", "totalDrops", "buildings", "upgrades", "water5", "water4", "water3", "water2", "excess", "producings", "structures", "flow", "inVoid", "start", "researchesS3", "upgradesS3", "dustCap", "extra2s5Max", "multiplierList", "production", "moreStars", "multiplier3", "globalMult", "multiplier2", "multiplier1", "universes", "iron", "stageBoost", "strangeQuarks", "information", "strangelets", "energyType", "energyTrue", "s", "add", "softcap", "effectS1", "starCheck", "building", "researchesExtra", "requirement", "supervoid", "offset", "startEl", "startU4", "startU5", "startR4", "startR5", "startE4", "startE5", "stageIndex", "howMany", "checkBuilding", "currency", "minus", "free", "multi", "budget", "total", "calculateBuildingsCost", "afford", "errorNotify", "addEnergy", "numbersUpdate", "globalSave", "getId", "format", "calculateMaxLevel", "awardVoidReward", "addIntoLog", "increase", "stage", "discharge", "dischargeInfo", "firstCost", "buyVerse", "checkVerse", "calculateVerseCost", "playEvent", "visualTrueStageUnlocks", "setActiveStage", "income", "resetVacuum", "prepareVacuum", "get", "stageGet", "hardcap", "gainStrange", "strange", "buyUpgrades", "upgrade", "type", "checkUpgrade", "pointer", "switchTab", "tillMax", "cost", "newLevels", "simplify", "calculateResearchCost", "autoResearchesAddOne", "update", "stageUpdate", "specialHTML", "effective", "playerStart", "old", "buyStrangeness", "maxLevel", "newLevel", "loadoutsVisual", "assignChallengeInformation", "assignMilestoneInformation", "loadoutsLoadAuto", "array", "r", "inflationRefund", "noConfirmation", "loadout", "inflaton", "Confirm", "challengeReset", "stageFullReset", "addAuto", "autoUpgradesSet", "which", "startCost", "a", "b", "compareFunc", "autoResearchesSet", "bought", "current", "autoElementsSet", "toggleSwap", "number", "change", "toggles", "maxLength", "anyOn", "extraText", "toggleHTML", "toggleConfirm", "peakCheck", "unlimitedTime", "stageResetUser", "active", "galaxyCost", "fullReset", "resetThese", "check", "exportReward", "conversion", "strangeletsTest", "quarksTest", "history", "storage", "realTime", "resetStage", "noReward", "switchStage", "visualUpdate", "dischargeReset", "dischargeResetUser", "freeGoals", "increased", "clouds", "vaporizationReset", "vaporization", "rainNow", "rainAfter", "vaporizationResetUser", "autoClouds", "rankReset", "rankResetUser", "remnants", "collapse", "collapseReset", "timeUntil", "point", "massBoost", "calculateStar", "starProd", "restProd", "collapseResetUser", "unlockedG", "cantAffordG", "log", "collapseInfo", "galaxies", "mergeReset", "merge", "mergeResetUser", "awardStabilityReward", "switchVacuum", "nucleationResetCheck", "nucleationReset", "nucleationResetUser", "endResetCheck", "endResetUser", "endReset", "resets", "selfMade", "percentage", "milestoneCheck", "name", "maxed", "toggleSupervoid", "changeRewardType", "challenges", "progress", "totalProgress", "pointer2", "rewardText", "enterExitChallengeUser", "currentState", "loadFromClone", "resetType", "cloneBeforeReset", "requiredState", "switchTab", "tab", "subtab", "oldTab", "global", "checkTab", "subtabAmount", "inside", "unlocked", "getId", "globalSave", "text", "changeSubtab", "oldSubtab", "active", "player", "setActiveStage", "stageUpdate", "visualUpdate", "numbersUpdate", "ignoreOffline", "buildings", "vacuum", "challenge", "noTime", "s", "info", "maxTime", "i", "Notify", "format", "stars", "Overlimit", "value", "shiftButton", "specialHTML", "buildingsInfo", "producing", "howMany", "speed", "assignBuildingsProduction", "trueCountID", "lockText", "costName", "currency", "free", "multi", "e", "extra", "buy", "cost", "calculateBuildingsCost", "scaling", "dischargeInfo", "calculateEffects", "getQuery", "effectsCache", "preonCap", "rainNow", "rainAfter", "storm", "dustCap", "collapseInfo", "calculateStar", "starEffect", "starProd", "total", "restProd", "mainQuery", "widthTest", "assignResetInformation", "merge", "mergeInfo", "groupsCost", "mergeEffects", "remaining", "groupsTotal", "mergeScore", "calculateVerseCost", "post", "allowed", "stageResetCheck", "last", "getChallengeDescription", "getChallenge0Reward", "getChallenge1Reward", "visualUpdateUpgrades", "visualUpdateResearches", "getUpgradeDescription", "interstellar", "quarksGain", "information", "stageBoost", "strangeness", "getStrangenessDescription", "time", "milestoneGetValue", "exportReward", "improved", "conversion", "lastSave", "energyType", "clouds", "rain", "auto2", "mass", "star0", "star1", "star2", "gamma", "quasar", "base", "reward1", "reward2", "highest", "playEvent", "showReset1", "updateLog", "showAll", "buildingsToggle", "ASR", "toggleBtn", "upgrades", "updateRankInfo", "nova", "setRemnants", "progress", "superposition", "puddle2", "puddle3", "puddle4", "puddle5", "rank", "planetesimal", "galaxy", "protogalaxy", "nebula", "cluster", "darkEnergy", "dark1", "neutron", "columns", "universes", "show1", "show2", "show3", "bound", "voidProgress", "MDStrangenessPage", "milestones", "strange5", "firstTwo", "milestonesS4", "supervoid", "researchesAuto", "timeToMax", "showAuto2", "showAuto4", "showAuto5", "updateStageHistory", "updateEndHistory", "anyUnlocked", "visualTrueStageUnlocks", "superUnlocked", "index", "type", "pointer", "stageIndex", "notEnoughUniverses", "level", "newLevels", "tillMax", "simplify", "autoStage", "newLevel", "check", "stageText", "isActive", "multilineID", "container", "heightTest", "nameID", "gain", "reward", "current", "best", "arrayMax", "needText", "failText", "color", "image", "max", "upgradeHTML", "rankInfo", "name", "updateCollapsePoints", "points", "array", "whiteDwarf", "src1", "img1", "quarkStar", "src2", "img2", "list", "length", "addIntoLog", "add", "lastHTML", "mainHTML", "children", "prepend", "li", "hours", "minutes", "input", "settings", "padding", "inputAbs", "seconds", "days", "years", "digits", "precision", "result", "formated", "resultAbs", "changed", "stageInfo", "activeAll", "element", "getClass", "stageWord", "currentID", "researchExtraDivHTML", "upgradesInfo", "researchesInfo", "researchesExtraInfo", "footerStatsHTML", "showU", "showR", "showRE", "showF", "resetMinSizes", "buildingHTML", "buildingName", "buildingType", "buildingHoverText", "toggleSwap", "researchHTML", "main", "researchExtraHTML", "extraImgId", "bodyStyle", "setTheme", "hotkeys", "basicFunctions", "buyAll", "global", "player", "stageResetUser", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "buyBuilding", "nucleationResetUser", "pauseGameUser", "toggleSwap", "mergeResetUser", "buyVerse", "endResetUser", "old", "toggleSupervoid", "Notify", "enterExitChallengeUser", "changeTab", "changeSubtab", "changeStage", "numberFunctions", "number", "assignHotkeys", "key", "index", "globalSave", "hotkey", "removeHotkey", "remove", "test", "detectShift", "check", "detectHotkey", "code", "info", "numbersUpdate", "activeType", "specialHTML", "notification", "name", "numberKey", "functionTest", "direction", "tabs", "checkTab", "switchTab", "tab", "subtabs", "activeAll", "switchStage", "handleTouchHotkeys", "event", "horizontal", "vertical", "horizontalAbs", "globalSave", "saveGlobalSettings", "noSaving", "hotkeysClone", "deepClone", "encoder", "key", "array", "i", "clone", "save", "specialHTML", "toggleSpecial", "number", "type", "change", "reload", "toggles", "Confirm", "pauseGame", "Alert", "toggleHTML", "getId", "preventImageUnload", "global", "footer", "build", "upgrade", "research", "extra", "extraDiv", "images", "s", "text", "setTheme", "theme", "player", "upgradeTypes", "properties", "bodyStyle", "property", "priority", "resolve", "Notify", "body", "blocker", "confirm", "oldFocus", "event", "shift", "detectShift", "code", "close", "cancel", "result", "yes", "Prompt", "placeholder", "input", "active", "notifications", "index", "count", "timeout", "html", "pointer", "instantClose", "remove", "errorNotify", "errorCooldowns", "resetMinSizes", "full", "element", "getQuery", "mile", "changeFontSize", "initial", "size", "changeFormat", "point", "htmlInput", "value", "MDStrangenessPage", "stageIndex", "replayEvent", "last", "playEvent", "replay", "format", "assignResetInformation", "stageUpdate", "visualTrueStageUnlocks", "switchTab", "buildBigWindow", "subWindow", "mainHTML", "addCloseEvents", "sectionHTML", "firstTargetHTML", "closeButton", "windowHMTL", "openVersionInfo", "openHotkeys", "toggle", "changeHotkey", "detect", "finish", "prefix", "clickClose", "keyboard", "globalSaveStart", "button", "removeHotkey", "assignHotkeys", "newHotkey", "removed", "extraHotkeyName", "visualUpdate", "openLog", "bottom", "Overlimit", "_Overlimit", "number", "post", "technical", "left", "right", "newValue", "numbers", "result", "i", "power", "root", "base", "replaceWith", "compare", "previous", "next", "after", "settings", "index", "digits", "check", "difference", "negative", "base10", "target", "tooSmall", "test", "type", "padding", "exponent", "inputBase", "mantissa", "formated", "globalSave", "powerCheck", "ending", "compareFunc", "player", "global", "format", "calculateEffects", "Overlimit", "effectsCache", "softcap", "newBase", "power", "effect", "logAny", "base", "now", "after", "energy", "level", "extra", "maxLevel", "trueLevel", "penalty", "index", "stageIndex", "unlocked", "improved", "extraText", "assignBuildingsProduction", "max2", "passive", "upgrades", "progress", "text", "completions", "number", "cloneArray", "array", "deepClone", "toClone", "value", "i", "check", "fillMissingValues", "test", "start", "createArray", "length", "pointer", "s", "cost", "upgradeType", "firstCost", "playerStart", "updatePlayer", "load", "prepareVacuum", "oldVersion", "old", "key", "clone", "c", "building", "stars", "assignResetInformation", "assignMilestoneInformation", "strangeness", "strangenessMax", "calculateMaxLevel", "extraMax", "researches", "researchesMax", "autoUpgradesSet", "autoResearchesSet", "getId", "tree", "treeMax", "autoElementsSet", "toggleSupervoid", "assignChallengeInformation", "logHTML", "loadoutsLoadAuto", "visualTrueStageUnlocks", "switchTab", "toggleSwap", "toggleConfirm", "updateCollapsePoints", "loadoutsRecreate", "getId", "id", "noError", "test", "specialHTML", "store", "errorNotify", "getQuery", "query", "getClass", "idCollection", "handleOfflineTime", "timeNow", "offlineTime", "player", "calculateEffects", "simulateOffline", "offline", "info", "global", "pauseGame", "decline", "Confirm", "format", "globalSave", "extra", "timeUpdate", "visualUpdate", "numbersUpdate", "tick", "startValue", "startStage", "body", "mainHTML", "accelBtn", "deaccelBtn", "cancelBtn", "oldFocus", "accelerate", "deaccelerate", "finish", "key", "event", "shift", "detectShift", "code", "end", "setActiveStage", "stageUpdate", "tickHTML", "remainsHTML", "percentageHTML", "calculate", "time", "error", "stack", "Alert", "changeIntervals", "intervalsId", "intervals", "paused", "saveGame", "pause", "button", "preventImageUnload", "pauseGameUser", "noSaving", "clone", "deepClone", "i", "save", "loadGame", "versionCheck", "updatePlayer", "Notify", "prepareVacuum", "replaceSaveFileSpecials", "name", "date", "dateIndex", "endIndex", "replaced", "special", "replaceWith", "timeIndex", "repeatFunction", "repeat", "cancelRepeat", "showAndFix", "element", "rect", "width", "hoverUpgrades", "index", "type", "getUpgradeDescription", "hoverStrangeness", "stageIndex", "getStrangenessDescription", "hoverChallenge", "getChallengeDescription", "getChallenge0Reward", "getChallenge1Reward", "changeRewardType", "state", "handleAutoResearchCreation", "checkUpgrade", "buyUpgrades", "autoStage", "switchStage", "buyAll", "active", "max", "buyBuilding", "playerStart", "buyVerse", "loadoutsVisual", "loadout", "appeared", "firstCost", "scaling", "cost", "string", "dupes", "current", "loadoutsRecreate", "old", "newOld", "listHTML", "loadoutsLoad", "loadoutsSave", "loadouts", "inflationRefund", "array", "buyStrangeness", "loadoutsLoadAuto", "globalSaveStart", "globalSettings", "decoder", "c", "toggleSpecial", "changeFontSize", "fake2", "div", "elementsArea", "elementsButton", "arrow", "createUpgButton", "createInfButton", "pages", "mainLi", "MDToggle1", "MDToggle2", "refreshButton", "message", "effectID", "SRMainDiv", "SRToggle1", "SRToggle2", "primaryIndex", "newTab", "tabText", "subtabText", "oldVersion", "assignHotkeys", "MD", "SR", "PC", "releaseHotkey", "hotkeys", "activeType", "detectHotkey", "notAllowed", "target", "handleTouchHotkeys", "hoverEvent", "window", "position", "toggleSwap", "toggleConfirm", "s", "autoUpgradesSet", "autoResearchesSet", "autoElementsSet", "footer", "repeatFunc", "endResetUser", "stageResetUser", "clickFunc", "dischargeResetUser", "vaporizationResetUser", "rankResetUser", "collapseResetUser", "mergeResetUser", "nucleationResetUser", "getMakeCount", "input", "change", "value", "image", "enterExitChallengeUser", "toggleSupervoid", "hoverFunc", "label", "last", "dblclickFunc", "open", "focus", "html", "MDStrangenessPage", "windowHTML", "status", "first", "final", "number", "inside", "maxRepeats", "r", "deleted", "newIndex", "hover", "fullClose", "points", "a", "b", "updateCollapsePoints", "openVersionInfo", "openHotkeys", "exportReward", "strange", "improved", "conversion", "quarks", "strangelets", "assignBuildingsProduction", "Prompt", "lower", "saveGlobalSettings", "addIntoLog", "setTheme", "changePreview", "testValue", "changeFormat", "openLog", "replayEvent", "inputID", "startEvent", "mouse", "screenWidth", "screenHeight", "lastX", "lastY", "move", "newX", "newY", "removeEvents", "switchTab", "buttonDiv", "exported"]
}
